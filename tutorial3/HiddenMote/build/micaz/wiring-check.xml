<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="18:HiddenMoteAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2adc4d80c970"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2adc4cc27ba8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2adc4cc27ba8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2adc4cdd9278"/></to>
    </wire>
    <wire loc="19:HiddenMoteAppC.nc">
      <from><interface-ref name="SendTimer" scoped="" ref="0x2adc4d8091a8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2adc4d812a60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2adc4d812a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2adc4d6aa7d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:HiddenMoteAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2adc4d84b468"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2adc4d2f5a30"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2adc4d2f5a30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2adc4d2ee298"/></to>
    </wire>
    <wire loc="22:HiddenMoteAppC.nc">
      <from><interface-ref name="RssiMsgSend" scoped="" ref="0x2adc4d84ab40"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2adc4d8185e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x2adc4d8185e0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2adc4ddac3e0"/></to>
    </wire>
    <wire loc="23:HiddenMoteAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2adc4d849a08"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2adc4c9b8dc0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2adc4c9b8dc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2adc4ca3f020"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2adc4ca3f020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2adc4d775da0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2adc4ca0e788"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2adc4ca3e020"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2adc4ca3e020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2adc4ca6e208"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2adc4ca0b1c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2adc4ca4dd10"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2adc4ca4dd10"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2adc4ca7c020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2adc4ca1b698"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2adc4ca4b8c8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2adc4ca4b8c8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2adc4ca7bbd8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2adc4ca39968"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2adc4d50d808"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2adc4d50d808"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2adc4d538218"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2adc4ca0f4f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2adc4ca4d1c8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2adc4ca4d1c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2adc4ca7d348"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2adc4ca32cb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2adc4ca494d0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2adc4ca494d0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2adc4d50fba0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2adc4ca28c28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2adc4ca4c340"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2adc4ca4c340"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2adc4ca7c610"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2adc4ca37860"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2adc4d509670"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2adc4d509670"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2adc4d534130"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2adc4d775da0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2adc4d772d28"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2adc4ca532e0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2adc4ca79928"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2adc4ca6b4d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2adc4ca7adf8"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2adc4ca548f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2adc4d50f020"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2adc4d50f020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2adc4d504918"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2adc4ca58020"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2adc4d7778f8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2adc4d7778f8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2adc4d76e170"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2adc4d50fba0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2adc4d53b540"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2adc4ca74828"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2adc4d79bc40"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2adc4d79bc40"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2adc4d796080"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2adc4ca4f4e8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2adc4d50edf8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2adc4d50edf8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2adc4d53a7f8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2adc4d772d28"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2adc4cb02508"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2adc4cb02508"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2adc4caffd70"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2adc4ca8ca60"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2adc4d712a08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2adc4d712a08"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2adc4d70b298"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2adc4d70f838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2adc4d79b020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2adc4d79b020"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2adc4d79a9c0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2adc4d79a9c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2adc4d753660"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2adc4d753660"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2adc4d773838"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2adc4d773838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2adc4d734a48"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2adc4d734a48"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2adc4d74d020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2adc4d7514e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2adc4cb01020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2adc4cb01020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2adc4cb0e840"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2adc4ca767f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2adc4d7772b0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2adc4d7772b0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2adc4d772668"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2adc4d772668"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2adc4d710d20"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2adc4d710d20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2adc4d72f020"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2adc4d733b20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2adc4d752748"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2adc4d752748"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2adc4d74dc20"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2adc4d752e50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2adc4cb01c60"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2adc4cb01c60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2adc4d49c9b0"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2adc4ca97c60"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2adc4d383768"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2adc4ca76e08"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2adc4d50f020"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2adc4ca87308"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2adc4d50e620"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2adc4d50e620"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2adc4d53a020"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2adc4ca9c528"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2adc4cb7c7c0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2adc4cb7c7c0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2adc4cb99a98"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2adc4ca9b8e0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2adc4cb00328"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2adc4cb00328"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2adc4cb0d638"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2adc4d49c9b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2adc4d497de8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2adc4cb185e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2adc4cb7fa48"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2adc4cb7fa48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2adc4cb97d98"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2adc4cb126e0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2adc4cb8e418"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2adc4cb8e418"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2adc4cb96728"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2adc4cb21198"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2adc4d39f330"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2adc4cb21198"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2adc4d49f838"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2adc4d49f838"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2adc4d498c78"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2adc4d39f330"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2adc4d3e8988"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2adc4cb1aa58"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x2adc4d39fae0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2adc4d39fae0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2adc4d3e7220"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2adc4cb11868"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2adc4d39e780"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2adc4d39e780"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2adc4d3e6020"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2adc4cb27328"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2adc4d50f020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2adc4cb27e40"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2adc4d50e620"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2adc4cb29bd8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2adc4d6e8530"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2adc4d6e8530"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2adc4d6e0320"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x2adc4cb2e110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2adc4d6e9978"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x2adc4d6e9978"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2adc4d18b790"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2adc4cb30c38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2adc4d2f5a30"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x2adc4cb38e50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2adc4c8cc1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x2adc4cb38020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2adc4c8cc1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x2adc4cb3bab8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2adc4c8cc1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x2adc4cb88800"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x2adc4cb95af0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2adc4cc3d398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2adc4d72fcb0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2adc4cc3d398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2adc4d70be80"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2adc4cc3d398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2adc4d6e4a28"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.0/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2adc4cc3d398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2adc4d55b518"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2adc4cc3d398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2adc4d498638"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2adc4cc3d398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2adc4d3e8348"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2adc4cc3d398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2adc4cdeb210"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2adc4cc3d398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2adc4dc601a8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.0/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2adc4cc3d398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2adc4d187438"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2adc4cc3d398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2adc4cb97768"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x2adc4cb91328"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2adc4cdebb88"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2adc4cdebb88"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2adc4cde49e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2adc4cb9b100"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2adc4d029de0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2adc4d029de0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2adc4cc5baf0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2adc4cb9a378"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2adc4d025338"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2adc4d025338"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2adc4cc5e7e0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2adc4cba9500"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x2adc4d04a648"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2adc4d04a648"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x2adc4cc5f658"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2adc4cbb8b78"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x2adc4d040a60"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2adc4d040a60"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2adc4d0c4cf0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2adc4cbc0500"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2adc4d345b98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2adc4d345b98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2adc4d104808"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2adc4cbc1820"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x2adc4d342638"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x2adc4d342638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2adc4cbc2020"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x2adc4d341900"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2adc4d341900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2adc4cbc2df0"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x2adc4d343900"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2adc4d343900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2adc4cbc2710"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x2adc4d340020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2adc4d340020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2adc4cbb0ba0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x2adc4d337470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2adc4d337470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2adc4cbb6540"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x2adc4d335470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2adc4d335470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2adc4cbb6db0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x2adc4d335c10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2adc4d335c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2adc4cbb16a8"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x2adc4d33ca88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2adc4d33ca88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2adc4cbaf020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2adc4d33b2e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2adc4d33b2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2adc4cbb3700"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x2adc4d330c10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x2adc4d330c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2adc4d1275e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2adc4cbaf898"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x2adc4d338a88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2adc4d338a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2adc4cbae130"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x2adc4d33ba88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x2adc4d33ba88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x2adc4cbbe180"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2adc4d3596a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2adc4d3596a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2adc4d104808"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2adc4cbbf238"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2adc4d370c30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2adc4d370c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2adc4d104808"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2adc4cba7810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2adc4d383768"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x2adc4cbcbe20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2adc4c8cc1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x2adc4cbcb020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2adc4c8cc1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2adc4cdd98b0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2adc4c8c9600"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2adc4c8c9600"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2adc4c97eb48"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2adc4cdd8398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2adc4cc399b8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2adc4cc399b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2adc4cc471b8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2adc4cdd8a60"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2adc4cc3d398"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.0/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2adc4cc37690"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2adc4cf62190"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2adc4cc33970"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2adc4cdbd650"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2adc4cc46020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2adc4cdbd020"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2adc4cc47858"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2adc4d32f110"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2adc4cc47858"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2adc4cc497c0"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2adc4cc497c0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2adc4cc541d0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2adc4cc49e50"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2adc4cc37690"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2adc4cc548b8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2adc4cc604d0"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2adc4cc604d0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2adc4ccd2430"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2adc4cc53b08"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2adc4cc49e50"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2adc4cc8d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4cd68970"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2adc4cc78af0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2adc4cd11020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2adc4cd11020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d9c1100"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2adc4cc84af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2adc4cd1ad60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2adc4cd1ad60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4da3e100"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2adc4cc7b7e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2adc4cd255b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2adc4cd255b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4da76100"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2adc4cc5e7e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2adc4ccea740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2adc4ccea740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d88f020"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2adc4cc7d4d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2adc4cd272a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2adc4cd272a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4da7c100"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2adc4cc5baf0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2adc4cce3930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2adc4cce3930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d918180"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2adc4cc68c78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2adc4cceb740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2adc4cceb740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d940100"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2adc4cc74020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2adc4cd0e430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2adc4cd0e430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d9b8100"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2adc4cc80020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2adc4cd16120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2adc4cd16120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4da34100"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2adc4cc4b020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2adc4ccd6020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2adc4ccd6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d89f020"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2adc4cc57020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2adc4ccdfd60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2adc4ccdfd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d90f100"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2adc4cc641a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2adc4cd02bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2adc4cd02bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d982100"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2adc4cc704d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2adc4cd0a8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2adc4cd0a8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d9fc100"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2adc4cc90c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2adc4cd22a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2adc4cd22a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4dabd100"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2adc4cc8a968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4cd75020"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2adc4cc6e7e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2adc4cd1da50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2adc4cd1da50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4da44100"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2adc4ccd2430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d895020"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2adc4cc6c658"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2adc4ccf5120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2adc4ccf5120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d905100"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2adc4cc8c658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4cd64ab0"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2adc4cc6a968"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2adc4cced500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2adc4cced500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d946180"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2adc4cc77c78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2adc4cd10120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2adc4cd10120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d9be100"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2adc4cc83c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2adc4cd19e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2adc4cd19e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4da3b100"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2adc4cc7a968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2adc4cd24740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2adc4cd24740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4dac3100"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2adc4cc5d968"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2adc4cce98c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2adc4cce98c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d88c020"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2adc4cc5ac78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2adc4cce1a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2adc4cce1a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d915100"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2adc4cc67e00"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2adc4cd048c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2adc4cd048c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d989100"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2adc4cc731a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2adc4cd0d5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2adc4cd0d5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d9b5100"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2adc4cc7f1a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2adc4cd152a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2adc4cd152a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4da31100"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2adc4cc4a1a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2adc4ccd5120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2adc4ccd5120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d89c020"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2adc4cc561a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2adc4ccdee18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2adc4ccdee18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d90c100"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2adc4cc63348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2adc4cd01d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2adc4cd01d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d97f100"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2adc4cc8fe00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2adc4cd21bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2adc4cd21bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4dab9100"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2adc4cc79658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2adc4ccf9e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2adc4ccf9e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d9c4180"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2adc4cc85968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2adc4cd1cbd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2adc4cd1cbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4da41100"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2adc4cc7c658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2adc4cd26430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2adc4cd26430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4da79100"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2adc4cc89af0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4cd8d180"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2adc4cc5f658"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2adc4ccd15b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2adc4ccd15b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d892020"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2adc4cc6b7e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2adc4ccf42a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2adc4ccf42a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d902100"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2adc4cc7e348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2adc4cd281e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2adc4cd281e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4da7f180"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2adc4cc69af0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2adc4ccec5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2adc4ccec5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d943100"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2adc4cc76e00"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2adc4cd0f2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2adc4cd0f2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d9bb100"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2adc4cc82e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2adc4cd17020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2adc4cd17020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4da38100"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2adc4cc91af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2adc4cd238c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2adc4cd238c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4dac0100"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2adc4cc3ed50"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2adc4ccd8dc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2adc4ccd8dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d8a2020"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2adc4cc59e00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2adc4cce0bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2adc4cce0bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d912100"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2adc4cc65020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2adc4cd03a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2adc4cd03a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d986100"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2adc4cc72348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2adc4cd0b740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2adc4cd0b740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d9b1100"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2adc4cc8b7e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4cd7bc38"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2adc4cc6f658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2adc4cd1e930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2adc4cd1e930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4da47180"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2adc4cc624d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2adc4cd00e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2adc4cd00e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d97c100"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2adc4cc61348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2adc4ccd42a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2adc4ccd42a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d899020"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2adc4cc6d4d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2adc4ccf6020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2adc4ccf6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2adc4d908100"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2adc4c8cc1c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2adc4c97db08"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2adc4c97b020"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2adc4c8d2dc8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2adc4c9a22b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2adc4ce56790"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2adc4cdeb210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2adc4d02e928"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2adc4d02e928"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2adc4d034a58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2adc4cde49e8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2adc4db48a60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2adc4db48a60"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2adc4db90e00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2adc4db89310"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2adc4db42e70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2adc4db42e70"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2adc4db7f420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2adc4db8b128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2adc4cfacd70"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.0/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2adc4cfacd70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2adc4cfde0e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x2adc4db7c540"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2adc4ce0a020"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2adc4ce0a020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2adc4cebc490"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x2adc4db775a8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2adc4ce24020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2adc4ce1a0c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2adc4ceb7568"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2adc4ce29b68"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2adc4ceb6ca0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2adc4ce24020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2adc4ceb1540"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2adc4ce24020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2adc4cead8e8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2adc4ce24020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2adc4cecbb88"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x2adc4cec6020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2adc4ce2c950"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2adc4ce2c950"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2adc4ce5b558"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2adc4ce42470"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2adc4ce55020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2adc4ce32980"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2adc4ce5a670"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2adc4ce3ad90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2adc4ce40400"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.0/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2adc4cf628b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2adc4ce0a020"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.0/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2adc4cfdc2b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2adc4cfaaad0"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.0/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2adc4cfaaad0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2adc4cfa2a98"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.0/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2adc4cfb5b78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2adc4ce0a020"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2adc4d027020"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2adc4cc6b7e0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2adc4d026198"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x2adc4cc80020"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2adc4cdecc88"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2adc4cc72348"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2adc4d0244b0"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2adc4cc74020"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2adc4d03de80"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2adc4d039020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2adc4d03f710"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2adc4d04b6f0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x2adc4d039bd8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2adc4ce29b68"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2adc4d0722e8"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x2adc4d080020"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x2adc4d080020"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2adc4d0d1180"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x2adc4d0eb8e0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2adc4cdecc88"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x2adc4d085208"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2adc4d0bc180"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x2adc4d082020"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2adc4d0b0520"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x2adc4d07f020"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2adc4d0cd020"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x2adc4d0840f0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2adc4d0b9ca0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x2adc4d081020"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2adc4d0d63e0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x2adc4d086370"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2adc4d0ab520"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x2adc4d083020"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2adc4d0b47a8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2adc4d0c0470"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x2adc4d079b88"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2adc4d0bb020"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x2adc4d07b408"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2adc4d0b8a90"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x2adc4d07bb40"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2adc4d0b35f8"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x2adc4d07a408"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2adc4d0af470"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x2adc4d07ab40"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2adc4d0d52e8"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x2adc4d077408"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2adc4d0d0020"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x2adc4d077b40"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2adc4d0cdde0"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x2adc4d076408"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x2adc4d0e7278"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2adc4c8cc1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2adc4d361100"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2adc4d1293c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x2adc4d342020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2adc4d336470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x2adc4d336c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2adc4d3412e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2adc4d363c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2adc4d1275e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2adc4d33aa88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x2adc4d333c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2adc4d3448c8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2adc4d12a4c8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2adc4d12a4c8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2adc4d1224e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2adc4d340c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x2adc4d33e2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2adc4d33ea00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2adc4d33a2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x2adc4d331470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2adc4d363470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2adc4d1275e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2adc4d334470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x2adc4d3432e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x2adc4d33c2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2adc4d3382e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2adc4d362470"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2adc4d1293c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2adc4d337c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2adc4d33d060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x2adc4d33dc90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2adc4d330470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2adc4d1275e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2adc4d340638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2adc4d331c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x2adc4d342c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x2adc4d33d678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2adc4d334c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x2adc4d333470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x2adc4d1293c8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2adc4d11f4d0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x2adc4d1275e0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2adc4d11e680"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d11d3c8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2adc4d104808"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2adc4d121300"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d11c1c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x2adc4d11a0e0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2adc4d190978"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x2adc4d190978"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2adc4d18b790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2adc4d11c8e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2adc4d2f9638"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2adc4d2f9638"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2adc4d2d51e0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2adc4d118470"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2adc4d2f72a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0x2adc4d2f72a8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2adc4d1c4a20"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2adc4d13b860"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2adc4d2f7880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2adc4d2f7880"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2adc4d1c1080"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2adc4d11ae50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2adc4d2f5a30"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x2adc4d138b80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2adc4c8cc1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.0/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2adc4d18b790"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2adc4d186020"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2adc4d1c1080"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2adc4d1bb4a0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2adc4d1c4a20"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2adc4d1bce78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2adc4d2f9060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2adc4d1c4400"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2adc4d1c4400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2adc4d1bc898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubResource" scoped="" ref="0x2adc4d2d4020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2adc4d1c1d28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SS" scoped="" ref="0x2adc4d2d4c90"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2adc4cc5baf0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2adc4d1c1d28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2adc4d1ba1c8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x2adc4d1cc888"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2adc4d2df200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2adc4d2df200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2adc4dc5e590"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2adc4d1c8ce0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2adc4d2de760"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2adc4d2de760"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2adc4dc5dac8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x2adc4d1cd5a8"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x2adc4d2126d8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x2adc4d2126d8"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x2adc4d2385e0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2adc4d1ca4f8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2adc4c998240"/></to>
    </wire>
    <wire loc="207:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x2adc4d20c830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2adc4c8cc1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x2adc4d22eaf8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2adc4c998240"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2adc4d234508"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2adc4cc5baf0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2adc4d233648"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2adc4cc5ac78"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2adc4d2317d0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2adc4cc59e00"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2adc4d22f958"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2adc4cc57020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2adc4d2de020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2adc4dc5d388"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2adc4dc5c3e8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2adc4d2dd020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x2adc4dc5cb68"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2adc4dc60780"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x2adc4dc5b780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2adc4c8cc1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2adc4d32f110"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2adc4d2f1ca0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2adc4d2ed9d8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2adc4d2efc80"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2adc4d2efc80"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2adc4cc4a1a0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2adc4d2ecc68"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2adc4d300e30"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2adc4d300e30"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2adc4cc4b020"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2adc4d2ebdf0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2adc4d2fe020"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2adc4d2fe020"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2adc4cc3ed50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2adc4d34c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2adc4d375908"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2adc4d1293c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x2adc4d3569b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2adc4d34f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2adc4d34ad98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x2adc4d37d5c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2adc4d355c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2adc4d376470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2adc4d1275e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x2adc4d34e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2adc4d34d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2adc4d37dd60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x2adc4d37a470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2adc4d358430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2adc4d12a4c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2adc4d353638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x2adc4d353c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2adc4d3513a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2adc4d354900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2adc4d34ec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2adc4d34fc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2adc4d3563a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x2adc4d37ac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2adc4d377c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2adc4d1275e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2adc4d37ccc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x2adc4d358d58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x2adc4d350c50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2adc4d34dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2adc4d376c10"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2adc4d1293c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2adc4d37c528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2adc4d34ce10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x2adc4d355020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2adc4d34a5f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2adc4d3519b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x2adc4d350638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x2adc4d377470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2adc4d1275e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2adc4d378c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2adc4d1275e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2adc4d353020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2adc4d378470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x2adc4d355638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2adc4d3542e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x2adc4d350020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2adc4d37b4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x2adc4d37bc90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2adc4d397a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2adc4d38b100"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2adc4d1293c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x2adc4d36c020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2adc4d366a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2adc4d394470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x2adc4d394c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2adc4d36b2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2adc4d38dc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2adc4d1275e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x2adc4d365a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2adc4d364a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2adc4d393470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x2adc4d391c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2adc4d36f8c8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2adc4d12a4c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2adc4d36ac50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x2adc4d3692e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2adc4d369a00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2adc4d36a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2adc4d3642e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2adc4d3652e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2adc4d36e900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x2adc4d390470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2adc4d38d470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2adc4d1275e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2adc4d392470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x2adc4d36e2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x2adc4d3662e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2adc4d3972e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2adc4d38c470"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2adc4d1293c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2adc4d393c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2adc4d396470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x2adc4d36c638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2adc4d396c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2adc4d368060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x2adc4d368c90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x2adc4d38fc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2adc4d1275e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2adc4d38f470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2adc4d1275e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2adc4d36a638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2adc4d390c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x2adc4d36cc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2adc4d36b900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x2adc4d368678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2adc4d392c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x2adc4d391470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x2adc4d399410"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x2adc4d3e5020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x2adc4d399b18"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x2adc4d3e5768"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x2adc4d3e4140"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2adc4cdebb88"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2adc4d3d90e0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2adc4cdecc88"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2adc4d3d2368"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2adc4d029de0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2adc4d3d14f0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x2adc4d0244b0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2adc4d3da548"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x2adc4d03de80"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2adc4d3d06c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2adc4d486140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2adc4d486140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2adc4d104808"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2adc4d3cf4c8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2adc4d486d38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2adc4d486d38"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2adc4d12a4c8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2adc4d403e10"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2adc4d4856b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x2adc4d4856b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2adc4d402528"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x2adc4d482020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x2adc4d482020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2adc4d402c18"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x2adc4d482638"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2adc4d482638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2adc4d4013c0"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x2adc4d480020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2adc4d480020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2adc4d4035c0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2adc4d47bcc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2adc4d47bcc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2adc4d404020"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x2adc4d4a6470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2adc4d4a6470"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2adc4d1293c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2adc4d404d20"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2adc4d4a7020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2adc4d4a7020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2adc4d1275e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2adc4d401ac0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2adc4d47c5c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2adc4d47c5c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2adc4d3fbe10"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2adc4d49c080"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2adc4d49c080"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2adc4d4974b8"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2adc4d3e0280"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2adc4d50f020"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2adc4d3e0d98"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2adc4d50e620"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2adc4d3df8c0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2adc4d50d808"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2adc4d3d3850"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2adc4d505190"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2adc4d505190"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2adc4d532bd0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2adc4d3ff770"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2adc4d2f5a30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2adc4d47ac90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x2adc4d483368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2adc4d47ddd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2adc4d4777c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x2adc4d476020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x2adc4d47cd60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2adc4d4767c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x2adc4d473020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x2adc4d480638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2adc4d480d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2adc4d4812e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2adc4d47b528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2adc4d485cc8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x2adc4d4737c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2adc4d4a87c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2adc4d1275e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2adc4d4757c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x2adc4d47d638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2adc4d47a4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2adc4d4a77c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2adc4d1293c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2adc4d475020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2adc4d479838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x2adc4d483980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2adc4d477020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2adc4d47e3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x2adc4d47d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x2adc4d4a8020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2adc4d1275e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2adc4d4aa7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2adc4d1275e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2adc4d481900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2adc4d4aa020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2adc4d482c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x2adc4d47e9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2adc4d474020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x2adc4d4747c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x2adc4d49b158"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x2adc4d496578"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2adc4d4c0480"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2adc4d2f5a30"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2adc4d496c10"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2adc4d029de0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2adc4d494e30"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x2adc4d027020"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2adc4d492020"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x2adc4d026198"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2adc4d491238"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x2adc4d03f710"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2adc4d491db0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2adc4d69a0c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2adc4d69a0c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2adc4d104808"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2adc4d490b00"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x2adc4d6c57c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2adc4d6c57c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2adc4d1293c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2adc4d4c7020"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x2adc4d695900"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2adc4d695900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2adc4d48f830"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x2adc4d694638"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x2adc4d694638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2adc4d4c7778"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2adc4d50f020"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2adc4d4c6350"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2adc4d50e620"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2adc4d4c49f8"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2adc4d50d808"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2adc4d4c6b30"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2adc4cb7c7c0"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x2adc4d4b42a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2adc4c8cc1c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2adc4d5307a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2adc4ca4b8c8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2adc4d569e48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2adc4cfacd70"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2adc4d52ca50"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2adc4d56ac38"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2adc4d52ece8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2adc4d586c08"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2adc4d586c08"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2adc4d67cc38"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2adc4d589a98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2adc4d6890c8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2adc4d55b518"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2adc4d57f2c0"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2adc4d57f2c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2adc4d6067d8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2adc4d6835a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2adc4d616290"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2adc4d611648"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2adc4d57fc38"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2adc4d57fc38"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2adc4d605020"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2adc4d67be48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2adc4d57a0f0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2adc4d57a0f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2adc4d601128"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2adc4d601128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2adc4dd33a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2adc4d6067d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2adc4dcdc140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2adc4d605020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2adc4dcdc8e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2adc4dd30b98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2adc4ce3ad90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2adc4dd2bb60"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2adc4ce2c950"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x2adc4dd2ab58"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2adc4ce32980"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2adc4dd26bb0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2adc4ce42470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x2adc4d64c5e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2adc4c8cc1c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2adc4d67e618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2adc4c8cc1c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2adc4d673420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2adc4d6aa7d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.0/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2adc4d6aa7d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2adc4d589a98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2adc4d6cfc90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2adc4d6c4470"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2adc4d1293c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x2adc4d6982e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2adc4d692dd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2adc4d6cd7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x2adc4d6cc020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2adc4d697638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2adc4d6c5020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2adc4d1275e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x2adc4d691d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2adc4d6d0cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2adc4d6cc7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x2adc4d6c8020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2adc4d69acb8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2adc4d12a4c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2adc4d694020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2adc4d694d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2adc4d6952e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2adc4d6d0528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2adc4d6915c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2adc4d699c90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x2adc4d6c87c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2adc4d6c67c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2adc4d1275e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2adc4d6cb7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x2adc4d699678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x2adc4d692638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2adc4d6cf4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2adc4d6cb020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2adc4d6ce838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x2adc4d698900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2adc4d6cd020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2adc4d6933a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x2adc4d692020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x2adc4d6c6020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2adc4d1275e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2adc4d6c77c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2adc4d1275e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2adc4d6c7020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x2adc4d697020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2adc4d697c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x2adc4d6939b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2adc4d6c9020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x2adc4d6c97c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2adc4d6e54c0"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2adc4d6e12b8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2adc4d6eb738"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2adc4d6e4a28"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2adc4d709578"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2adc4d70f838"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2adc4d7082a0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2adc4d70c2b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x2adc4d70c2b8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2adc4d18b790"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2adc4d707080"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2adc4d6e8530"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2adc4d707848"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2adc4d50e620"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x2adc4d733418"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x2adc4d72f6e8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2adc4d72e458"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2adc4d733b20"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2adc4d72ea98"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2adc4d50e620"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2adc4d74a020"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2adc4d7514e8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2adc4d74acc8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2adc4d752e50"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2adc4d749390"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2adc4d50e620"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2adc4d774928"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2adc4d770e38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x2adc4d770e38"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2adc4d18b790"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2adc4d796d98"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2adc4ca32cb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x2adc4d817268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2adc4ca1b698"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x2adc4d817e20"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2adc4ca28c28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x2adc4d815430"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2adc4ca32cb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x2adc4ddab020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2adc4d7e0020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x2adc4ddabbd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2adc4ca28c28"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2adc4d7e0020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2adc4d8252c8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2adc4d824060"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2adc4ca0e788"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2adc4d824c38"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2adc4ca28c28"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2adc4d822268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2adc4ca1b698"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x2adc4d821020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2adc4c8cc1c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x2adc4d8217c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2adc4c8cc1c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="ActiveMessageC" loc="48:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="38:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the micaZ platform.</short>
        <long>&#10;&#10; The Active Message layer on the micaZ platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <documentation loc="24:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio.</short>
        <long>&#10; The Active Message layer for the CC2420 radio. This configuration&#10; just layers the AM dispatch (CC2420ActiveMessageM) on top of the&#10; underlying CC2420 radio packet (CC2420CsmaCsmaCC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group). Note that snooping may not work, due to CC2420&#10; early packet rejection if acknowledgements are enabled.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @version $Revision: 1.12 $ $Date: 2008/06/11 00:46:23 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="37:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.18 $ $Date: 2008/06/24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MainC" loc="45:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.0/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.0/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.0/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.1.0/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-2.1.0/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.1.0/tos/system/RealMainP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.1.0/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.1.0/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="26:/opt/tinyos-2.1.0/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.10 2008/07/23 17:25:42 idgay Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="51:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.1.0/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.1.0/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="TOne" ref="0x2adc4c977e60"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.1.0/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.0/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="TOne" ref="0x2adc4c977e60"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="T32khz" ref="0x2adc4c940960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="T32khz" ref="0x2adc4c940960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x2adc4c976650"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="T32khz" ref="0x2adc4c940960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="TOne" ref="0x2adc4c977e60"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.1.0/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/opt/tinyos-2.1.0/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="64:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="51:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.5 2008/06/11 00:46:27 razvanm Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007/04/30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="28:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.1.0/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.0/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="27:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008/06/26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008/06/26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008/06/23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.1.0/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-2.1.0/tos/system/StateImplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-2.1.0/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/04/24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.5 2008/04/24 22:31:25 mmaroti Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="53:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.9 2008/06/23 20:25:15 regehr Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.0/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.1.0/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/tinyos-2.1.0/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.0/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/tinyos-2.1.0/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.0/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/17 07:28:24 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/17 07:28:24 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @version $Revision: 1.16 $ $Date: 2008/07/25 16:27:52 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="35(CC2420PacketC.CounterToLocalTimeC):/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="T32khz" ref="0x2adc4c940960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c941e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2adc4c9401f8"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2adc4d5b0020"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c941e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2adc4c9401f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c941e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2adc4c9401f8"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c941e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2adc4c9401f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="36(CC2420PacketC.DummyTimer):/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.1.0/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <documentation loc="22:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/opt/tinyos-2.1.0/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="21:/opt/tinyos-2.1.0/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.1.0/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-2.1.0/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-2.1.0/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HiddenMoteAppC.RssiMsgSender" loc="39(HiddenMoteAppC.RssiMsgSender):/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HiddenMoteAppC.RssiMsgSender.AMQueueEntryP" loc="35(HiddenMoteAppC.RssiMsgSender.AMQueueEntryP):/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2adc4c9f0df8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HiddenMoteAppC.SendTimer" loc="36(HiddenMoteAppC.SendTimer):/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HiddenMoteC" loc="6:HiddenMoteC.nc">
      <documentation loc="2:WSNDemo.h">
        <short>&#10; </short>
        <long>&#10; @author AESE LAB, Imperial college london&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2adc4cc9dd00" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2adc4cc990c8" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2adc4cc99410" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2adc4cca6608" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2adc4cca6970" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2adc4cca6cd8" loc="34:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2adc4cca3060" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2adc4cd33020" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2adc4cd33388" loc="34:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2adc4cd336f0" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2adc4cd33a20" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="66:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="51:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.1.0/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2adc4cf491f8" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2adc4cf491f8"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x2adc4cf49548" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2adc4cf4da20" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2adc4cf4da20"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2adc4cf59198" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2adc4cf59198"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x2adc4cf59498" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2adc4cfa4e28" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2adc4cfa4e28"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2adc4cfa15c8" loc="34:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2adc4cfa15c8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2adc4cfd1708" loc="44:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2adc4cfd1708"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2adc4cfd1e70" loc="45:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2adc4cfd1e70"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2adc4cfd0260" loc="46:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2adc4cfd0260"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2adc4cfd09d8" loc="47:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2adc4cfd09d8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2adc4cfd0d80" loc="48:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2adc4cfcf5d0" loc="49:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2adc4cfcf5d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="40:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2adc4cffc4d8" loc="41:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2adc4cffc4d8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2adc4cffcc40" loc="42:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2adc4cffcc40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2adc4cffa068" loc="43:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2adc4cffa068"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2adc4cffa7e0" loc="44:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2adc4cffa7e0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2adc4cffab88" loc="45:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="28:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.1.0/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/tinyos-2.1.0/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x2adc4d0aa3b0" loc="30:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x2adc4d0aa718" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x2adc4d0aaa80" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2adc4d0aadb0" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-2.1.0/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/04/24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="52:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2adc4d275578" loc="73:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.1.0/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2adc4d299510" loc="32:/opt/tinyos-2.1.0/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2adc4d5684b0" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2adc4d5684b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2adc4d5b0020" loc="23:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2adc4d5b0020"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2adc4d5b0310" loc="23:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2adc4d5a8720" loc="23:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2adc4d5a8720"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2adc4d5a8a10" loc="23:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2adc4d5fc300" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2adc4d5fc300"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2adc4d64a698" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2adc4d64a698"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2adc4d64a9a8" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2adc4d7bb758" loc="39:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2adc4c9f0df8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2adc4d7b2250" loc="35:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2adc4c9f0df8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2adc4d7dc2a8" loc="37:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="1" name="SplitControl" ref="0x2adc4c9b8dc0" loc="50:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2adc4c9b8dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2adc4c9bc170"/>
        <function-ref name="stopDone" scoped="" ref="0x2adc4c9bc2f8"/>
        <function-ref name="start" scoped="" ref="0x2adc4c9bc480"/>
        <function-ref name="stop" scoped="" ref="0x2adc4c9bc608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2adc4ca0e788" loc="52:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2adc4ca0e788"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2adc4c9f0df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4ca0ead8"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4ca0ec60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4ca0ede8"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4c9bb020"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4c9bb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2adc4ca0b1c8" loc="54:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2adc4ca0b1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2adc4c9f0df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2adc4ca0b518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2adc4ca1b698" loc="56:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2adc4ca1b698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2adc4ca1b9e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2adc4ca1bb70"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4ca1bcf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4ca1be80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2adc4ca17030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2adc4ca39968" loc="59:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2adc4ca39968"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="T32khz" ref="0x2adc4c940960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2adc4ca35e10"/>
        <function-ref name="clear" scoped="" ref="0x2adc4ca30558"/>
        <function-ref name="isValid" scoped="" ref="0x2adc4ca35730"/>
        <function-ref name="set" scoped="" ref="0x2adc4ca30c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2adc4ca0f4f0" loc="53:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2adc4ca0f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2adc4c9f0df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2adc4ca0f840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2adc4ca32cb0" loc="58:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2adc4ca32cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2adc4ca2a0a0"/>
        <function-ref name="noAck" scoped="" ref="0x2adc4ca2a228"/>
        <function-ref name="wasAcked" scoped="" ref="0x2adc4ca2a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2adc4ca28c28" loc="57:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2adc4ca28c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2adc4ca16020"/>
        <function-ref name="source" scoped="" ref="0x2adc4ca161a8"/>
        <function-ref name="address" scoped="" ref="0x2adc4ca16330"/>
        <function-ref name="destination" scoped="" ref="0x2adc4ca164b8"/>
        <function-ref name="setSource" scoped="" ref="0x2adc4ca16640"/>
        <function-ref name="setDestination" scoped="" ref="0x2adc4ca167c8"/>
        <function-ref name="type" scoped="" ref="0x2adc4ca16950"/>
        <function-ref name="setType" scoped="" ref="0x2adc4ca16ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2adc4ca16c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2adc4ca16de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2adc4ca1d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2adc4ca37860" loc="60:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2adc4ca37860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c941e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2adc4c9401f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2adc4ca36cc0"/>
        <function-ref name="clear" scoped="" ref="0x2adc4ca45420"/>
        <function-ref name="isValid" scoped="" ref="0x2adc4ca365e0"/>
        <function-ref name="set" scoped="" ref="0x2adc4ca45b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2adc4ca3f020" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2adc4ca3f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2adc4ca3f370"/>
        <function-ref name="stopDone" scoped="" ref="0x2adc4ca3f4f8"/>
        <function-ref name="start" scoped="" ref="0x2adc4ca3f680"/>
        <function-ref name="stop" scoped="" ref="0x2adc4ca3f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2adc4ca532e0" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2adc4ca532e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2adc4c9f0df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2adc4ca53630"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2adc4ca537b8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2adc4ca53940"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2adc4ca53ac8"/>
        <function-ref name="setCca" scoped="" ref="0x2adc4ca53c50"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2adc4ca53dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2adc4ca6b4d0" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2adc4ca6b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2adc4c9f0df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2adc4ca6b920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2adc4ca4b8c8" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2adc4ca4b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2adc4ca4bc18"/>
        <function-ref name="payloadLength" scoped="" ref="0x2adc4ca4bda0"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4ca4a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4ca4a1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2adc4ca4a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2adc4ca3e020" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2adc4ca3e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2adc4c9f0df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4ca3e370"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4ca3e4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4ca3e680"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4ca3e808"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4ca3e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2adc4ca4dd10" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2adc4ca4dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2adc4c9f0df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2adc4ca4c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2adc4ca548f0" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2adc4ca548f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2adc4ca54c40"/>
        <function-ref name="getRssi" scoped="" ref="0x2adc4ca54dc8"/>
        <function-ref name="getPower" scoped="" ref="0x2adc4ca49020"/>
        <function-ref name="getLqi" scoped="" ref="0x2adc4ca491a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2adc4ca58020" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2adc4ca58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x2adc4ca58370"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x2adc4ca584f8"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x2adc4ca58680"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x2adc4ca58808"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x2adc4ca58990"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x2adc4ca58b18"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x2adc4ca58ca0"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x2adc4ca58e28"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x2adc4ca57020"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x2adc4ca571a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2adc4ca4d1c8" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2adc4ca4d1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2adc4c9f0df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2adc4ca4d518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2adc4ca494d0" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2adc4ca494d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2adc4ca49820"/>
        <function-ref name="noAck" scoped="" ref="0x2adc4ca499a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2adc4ca49b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2adc4ca74828" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2adc4ca74828"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2adc4ca74b78"/>
        <function-ref name="setRetries" scoped="" ref="0x2adc4ca74d00"/>
        <function-ref name="getRetries" scoped="" ref="0x2adc4ca6c020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2adc4ca6c1a8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2adc4ca6c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2adc4ca4c340" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2adc4ca4c340"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2adc4ca4c690"/>
        <function-ref name="source" scoped="" ref="0x2adc4ca4c818"/>
        <function-ref name="address" scoped="" ref="0x2adc4ca4c9a0"/>
        <function-ref name="destination" scoped="" ref="0x2adc4ca4cb28"/>
        <function-ref name="setSource" scoped="" ref="0x2adc4ca4ccb0"/>
        <function-ref name="setDestination" scoped="" ref="0x2adc4ca4ce38"/>
        <function-ref name="type" scoped="" ref="0x2adc4ca4b020"/>
        <function-ref name="setType" scoped="" ref="0x2adc4ca4b1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2adc4ca4b330"/>
        <function-ref name="setGroup" scoped="" ref="0x2adc4ca4b4b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2adc4ca4b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2adc4ca4f4e8" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2adc4ca4f4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2adc4ca4f838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2adc4ca767f0" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2adc4ca767f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2adc4ca76b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2adc4ca8ca60" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2adc4ca8ca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4ca8cdb0"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4ca76020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4ca761a8"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4ca76330"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4ca764b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2adc4ca9c528" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2adc4ca9c528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2adc4ca9c878"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2adc4ca9ca00"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2adc4ca9cb88"/>
        <function-ref name="syncDone" scoped="" ref="0x2adc4ca9cd10"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2adc4ca8d020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2adc4ca8d1a8"/>
        <function-ref name="setChannel" scoped="" ref="0x2adc4ca8d330"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2adc4ca8d4b8"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2adc4ca8d640"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2adc4ca8d7c8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2adc4ca8d950"/>
        <function-ref name="sync" scoped="" ref="0x2adc4ca8dad8"/>
        <function-ref name="getChannel" scoped="" ref="0x2adc4ca8dc60"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2adc4ca8b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2adc4ca79928" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2adc4ca79928"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2adc4c9f0df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2adc4ca79c78"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2adc4ca79e00"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2adc4ca77020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2adc4ca771a8"/>
        <function-ref name="setCca" scoped="" ref="0x2adc4ca77330"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2adc4ca774b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2adc4ca7adf8" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2adc4ca7adf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2adc4c9f0df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2adc4ca79170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2adc4ca9b8e0" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x2adc4ca9b8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2adc4ca9bc30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2adc4ca9bdb8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2adc4ca9a020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2adc4ca9a1a8"/>
        <function-ref name="setCca" scoped="" ref="0x2adc4ca9a330"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2adc4ca9a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2adc4ca7bbd8" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2adc4ca7bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2adc4ca7a020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2adc4ca7a1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4ca7a330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4ca7a4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2adc4ca7a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2adc4ca6e208" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2adc4ca6e208"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2adc4c9f0df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4ca6e558"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4ca6e6e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4ca6e868"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4ca6e9f0"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4ca6eb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2adc4ca7c020" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2adc4ca7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2adc4c9f0df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2adc4ca7c370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2adc4ca76e08" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2adc4ca76e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2adc4ca851a8"/>
        <function-ref name="getRssi" scoped="" ref="0x2adc4ca85330"/>
        <function-ref name="getPower" scoped="" ref="0x2adc4ca854b8"/>
        <function-ref name="getLqi" scoped="" ref="0x2adc4ca85640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2adc4ca97c60" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2adc4ca97c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2adc4ca9b0d8"/>
        <function-ref name="changed" scoped="" ref="0x2adc4ca9b260"/>
        <function-ref name="amGroup" scoped="" ref="0x2adc4ca9b3e8"/>
        <function-ref name="setAddress" scoped="" ref="0x2adc4ca9b570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2adc4ca87308" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2adc4ca87308"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2adc4ca87658"/>
        <function-ref name="getMetadata" scoped="" ref="0x2adc4ca877e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2adc4ca7d348" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2adc4ca7d348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2adc4c9f0df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2adc4ca7d698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2adc4ca7c610" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2adc4ca7c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2adc4ca7c960"/>
        <function-ref name="source" scoped="" ref="0x2adc4ca7cae8"/>
        <function-ref name="address" scoped="" ref="0x2adc4ca7cc70"/>
        <function-ref name="destination" scoped="" ref="0x2adc4ca7cdf8"/>
        <function-ref name="setSource" scoped="" ref="0x2adc4ca7b020"/>
        <function-ref name="setDestination" scoped="" ref="0x2adc4ca7b1a8"/>
        <function-ref name="type" scoped="" ref="0x2adc4ca7b330"/>
        <function-ref name="setType" scoped="" ref="0x2adc4ca7b4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2adc4ca7b640"/>
        <function-ref name="setGroup" scoped="" ref="0x2adc4ca7b7c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2adc4ca7b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2adc4cb02508" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2adc4cb02508"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2adc4cb02858"/>
        <function-ref name="stopDone" scoped="" ref="0x2adc4cb029e0"/>
        <function-ref name="start" scoped="" ref="0x2adc4cb02b68"/>
        <function-ref name="stop" scoped="" ref="0x2adc4cb02cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2adc4cb00328" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2adc4cb00328"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2adc4cb00678"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2adc4cb00800"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2adc4cb00988"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2adc4cb00b10"/>
        <function-ref name="setCca" scoped="" ref="0x2adc4cb00c98"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2adc4cb00e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2adc4cb01020" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2adc4cb01020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4cb01370"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4cb014f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4cb01680"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4cb01808"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4cb01990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2adc4cb01c60" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2adc4cb01c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2adc4cb00020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2adc4caffd70" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2adc4caffd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2adc4cb0e0f0"/>
        <function-ref name="stopDone" scoped="" ref="0x2adc4cb0e278"/>
        <function-ref name="start" scoped="" ref="0x2adc4cb0e400"/>
        <function-ref name="stop" scoped="" ref="0x2adc4cb0e588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2adc4cb0d638" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2adc4cb0d638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2adc4cb0d988"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2adc4cb0db10"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2adc4cb0dc98"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2adc4cb0de20"/>
        <function-ref name="setCca" scoped="" ref="0x2adc4cb0c020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2adc4cb0c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2adc4cb11868" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x2adc4cb11868"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2adc4cb11bb8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2adc4cb11d40"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2adc4cb20020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2adc4cb201a8"/>
        <function-ref name="setCca" scoped="" ref="0x2adc4cb20330"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2adc4cb204b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2adc4cb27328" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2adc4cb27328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2adc4cb27678"/>
        <function-ref name="getRssi" scoped="" ref="0x2adc4cb27800"/>
        <function-ref name="getPower" scoped="" ref="0x2adc4cb27988"/>
        <function-ref name="getLqi" scoped="" ref="0x2adc4cb27b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x2adc4cb1aa58" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x2adc4cb1aa58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4cb1ada8"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4cb11020"/>
        <function-ref name="modify" scoped="" ref="0x2adc4cb111a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4cb11330"/>
        <function-ref name="resend" scoped="" ref="0x2adc4cb114b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2adc4cb0e840" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2adc4cb0e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4cb0eb90"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4cb0ed18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4cb0d020"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4cb0d1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4cb0d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2adc4cb29bd8" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2adc4cb29bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2adc4cb2b020"/>
        <function-ref name="rand32" scoped="" ref="0x2adc4cb2b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2adc4cb21198" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2adc4cb21198"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2adc4cb214e8"/>
        <function-ref name="stop" scoped="" ref="0x2adc4cb21670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2adc4cb27e40" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2adc4cb27e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2adc4cb2f1c0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2adc4cb2f348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x2adc4cb126e0" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2adc4cb126e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2adc4cb12a30"/>
        <function-ref name="rfOff" scoped="" ref="0x2adc4cb12bb8"/>
        <function-ref name="rxOn" scoped="" ref="0x2adc4cb12d40"/>
        <function-ref name="startVReg" scoped="" ref="0x2adc4cb0a020"/>
        <function-ref name="stopVReg" scoped="" ref="0x2adc4cb0a1a8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2adc4cb0a330"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2adc4cb0a4b8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2adc4cb0a640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2adc4cb30c38" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2adc4cb30c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2adc4cb2a020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2adc4cb2a1a8"/>
        <function-ref name="led1On" scoped="" ref="0x2adc4cb2a330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2adc4cb2a4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2adc4cb2a640"/>
        <function-ref name="get" scoped="" ref="0x2adc4cb2a7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2adc4cb2a950"/>
        <function-ref name="led2Off" scoped="" ref="0x2adc4cb27020"/>
        <function-ref name="set" scoped="" ref="0x2adc4cb2aad8"/>
        <function-ref name="led0On" scoped="" ref="0x2adc4cb2ac60"/>
        <function-ref name="led2On" scoped="" ref="0x2adc4cb2ade8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2adc4cb185e8" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2adc4cb185e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2adc4cb18938"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2adc4cb18ac0"/>
        <function-ref name="request" scoped="" ref="0x2adc4cb18c48"/>
        <function-ref name="granted" scoped="" ref="0x2adc4cb18dd0"/>
        <function-ref name="isOwner" scoped="" ref="0x2adc4cb0b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x2adc4cb2e110" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x2adc4cb2e110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2adc4cb2e560"/>
        <function-ref name="toIdle" scoped="" ref="0x2adc4cb2e6e8"/>
        <function-ref name="isState" scoped="" ref="0x2adc4cb2e870"/>
        <function-ref name="isIdle" scoped="" ref="0x2adc4cb2e9f8"/>
        <function-ref name="requestState" scoped="" ref="0x2adc4cb2eb80"/>
        <function-ref name="forceState" scoped="" ref="0x2adc4cb2ed08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x2adc4cb38e50" loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x2adc4cb38e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2adc4cb371e8"/>
        <function-ref name="runTask" scoped="" ref="0x2adc4cb37370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x2adc4cb38020" loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x2adc4cb38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2adc4cb38370"/>
        <function-ref name="runTask" scoped="" ref="0x2adc4cb384f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x2adc4cb3bab8" loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x2adc4cb3bab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2adc4cb3be08"/>
        <function-ref name="runTask" scoped="" ref="0x2adc4cb3a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2adc4cb7c7c0" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2adc4cb7c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2adc4cb7cb10"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2adc4cb7cc98"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2adc4cb7ce20"/>
        <function-ref name="syncDone" scoped="" ref="0x2adc4cb8f020"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2adc4cb8f1a8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2adc4cb8f330"/>
        <function-ref name="setChannel" scoped="" ref="0x2adc4cb8f4b8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2adc4cb8f640"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2adc4cb8f7c8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2adc4cb8f950"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2adc4cb8fad8"/>
        <function-ref name="sync" scoped="" ref="0x2adc4cb8fc60"/>
        <function-ref name="getChannel" scoped="" ref="0x2adc4cb8fde8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2adc4cb8e120"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2adc4cb88800" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x2adc4cb88800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4cb8c370"/>
        <function-ref name="readDone" scoped="" ref="0x2adc4cb8c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2adc4cb8e418" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2adc4cb8e418"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2adc4cb8e768"/>
        <function-ref name="rfOff" scoped="" ref="0x2adc4cb8e8f0"/>
        <function-ref name="rxOn" scoped="" ref="0x2adc4cb8ea78"/>
        <function-ref name="startVReg" scoped="" ref="0x2adc4cb8ec00"/>
        <function-ref name="stopVReg" scoped="" ref="0x2adc4cb8ed88"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2adc4cb8d020"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2adc4cb8d1a8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2adc4cb8d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2adc4cb7fa48" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2adc4cb7fa48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2adc4cb7fd98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2adc4cb7c020"/>
        <function-ref name="request" scoped="" ref="0x2adc4cb7c1a8"/>
        <function-ref name="granted" scoped="" ref="0x2adc4cb7c330"/>
        <function-ref name="isOwner" scoped="" ref="0x2adc4cb7c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2adc4cb99a98" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2adc4cb99a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2adc4cb99de8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2adc4cb98020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2adc4cb981a8"/>
        <function-ref name="syncDone" scoped="" ref="0x2adc4cb98330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2adc4cb984b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2adc4cb98640"/>
        <function-ref name="setChannel" scoped="" ref="0x2adc4cb987c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2adc4cb98950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2adc4cb98ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2adc4cb98c60"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2adc4cb98de8"/>
        <function-ref name="sync" scoped="" ref="0x2adc4cb96020"/>
        <function-ref name="getChannel" scoped="" ref="0x2adc4cb961a8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2adc4cb96430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x2adc4cbaf898" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2adc4cbaf898"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4cbafbe8"/>
        <function-ref name="write" scoped="" ref="0x2adc4cbafd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x2adc4cb91328" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x2adc4cb91328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="T32khz" ref="0x2adc4c940960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2adc4cb9eab0"/>
        <function-ref name="fired" scoped="" ref="0x2adc4cb90a20"/>
        <function-ref name="startAt" scoped="" ref="0x2adc4cb9e4a8"/>
        <function-ref name="isRunning" scoped="" ref="0x2adc4cb9e020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2adc4cb9c020"/>
        <function-ref name="start" scoped="" ref="0x2adc4cb900c0"/>
        <function-ref name="stop" scoped="" ref="0x2adc4cb90598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x2adc4cbb16a8" loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2adc4cbb16a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4cbb19f8"/>
        <function-ref name="write" scoped="" ref="0x2adc4cbb1b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2adc4cb9a378" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2adc4cb9a378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cb9a6c8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cb9a850"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cb9a9d8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cb9ab60"/>
        <function-ref name="get" scoped="" ref="0x2adc4cb9ace8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cb9ae70"/>
        <function-ref name="set" scoped="" ref="0x2adc4cba9020"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cba91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2adc4cb95af0" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x2adc4cb95af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4cb93670"/>
        <function-ref name="readDone" scoped="" ref="0x2adc4cb93ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x2adc4cbcbe20" loc="118:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x2adc4cbcbe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2adc4cbca1a8"/>
        <function-ref name="runTask" scoped="" ref="0x2adc4cbca330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x2adc4cbae130" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2adc4cbae130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4cbae480"/>
        <function-ref name="write" scoped="" ref="0x2adc4cbae608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x2adc4cbb6540" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2adc4cbb6540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4cbb6890"/>
        <function-ref name="write" scoped="" ref="0x2adc4cbb6a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2adc4cba7810" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2adc4cba7810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2adc4cba7b60"/>
        <function-ref name="changed" scoped="" ref="0x2adc4cba7ce8"/>
        <function-ref name="amGroup" scoped="" ref="0x2adc4cba7e70"/>
        <function-ref name="setAddress" scoped="" ref="0x2adc4cba6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2adc4cb9b100" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2adc4cb9b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cb9b450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cb9b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cb9b760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cb9b8e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cb9ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cb9bbf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cb9bd80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cb9a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x2adc4cbc2710" loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2adc4cbc2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4cbc2a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x2adc4cba9500" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x2adc4cba9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cba9850"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cba99d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cba9b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cba9ce8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cba9e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cba8020"/>
        <function-ref name="set" scoped="" ref="0x2adc4cba81a8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cba8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2adc4cb97768" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2adc4cb97768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4cb97ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2adc4cbaf020" loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2adc4cbaf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4cbaf370"/>
        <function-ref name="write" scoped="" ref="0x2adc4cbaf4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x2adc4cbc2df0" loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2adc4cbc2df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4cbc0170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2adc4cbc0500" loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2adc4cbc0500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2adc4cbc0850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2adc4cbc09d8"/>
        <function-ref name="request" scoped="" ref="0x2adc4cbc0b60"/>
        <function-ref name="granted" scoped="" ref="0x2adc4cbc0ce8"/>
        <function-ref name="isOwner" scoped="" ref="0x2adc4cbc0e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x2adc4cbbe180" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x2adc4cbbe180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2adc4cbbe4d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2adc4cbbe658"/>
        <function-ref name="request" scoped="" ref="0x2adc4cbbe7e0"/>
        <function-ref name="granted" scoped="" ref="0x2adc4cbbe968"/>
        <function-ref name="isOwner" scoped="" ref="0x2adc4cbbeaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2adc4cb96728" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2adc4cb96728"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2adc4cb96a78"/>
        <function-ref name="rfOff" scoped="" ref="0x2adc4cb96c00"/>
        <function-ref name="rxOn" scoped="" ref="0x2adc4cb96d88"/>
        <function-ref name="startVReg" scoped="" ref="0x2adc4cb95020"/>
        <function-ref name="stopVReg" scoped="" ref="0x2adc4cb951a8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2adc4cb95330"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2adc4cb954b8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2adc4cb95640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x2adc4cbb6db0" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2adc4cbb6db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4cbb1170"/>
        <function-ref name="write" scoped="" ref="0x2adc4cbb12f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x2adc4cbb0ba0" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2adc4cbb0ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4cbb6020"/>
        <function-ref name="write" scoped="" ref="0x2adc4cbb61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x2adc4cbc1820" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2adc4cbc1820"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4cbc1b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2adc4cbbeda8" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2adc4cbbeda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2adc4cbbd170"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2adc4cbbd2f8"/>
        <function-ref name="led1On" scoped="" ref="0x2adc4cbbd480"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2adc4cbbd608"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2adc4cbbd790"/>
        <function-ref name="get" scoped="" ref="0x2adc4cbbd918"/>
        <function-ref name="led1Off" scoped="" ref="0x2adc4cbbdaa0"/>
        <function-ref name="led2Off" scoped="" ref="0x2adc4cbbc1a8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cbbdc28"/>
        <function-ref name="led0On" scoped="" ref="0x2adc4cbbddb0"/>
        <function-ref name="led2On" scoped="" ref="0x2adc4cbbc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x2adc4cbcb020" loc="117:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x2adc4cbcb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2adc4cbcb370"/>
        <function-ref name="runTask" scoped="" ref="0x2adc4cbcb4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2adc4cb97d98" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2adc4cb97d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2adc4cb99170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2adc4cb992f8"/>
        <function-ref name="request" scoped="" ref="0x2adc4cb99480"/>
        <function-ref name="granted" scoped="" ref="0x2adc4cb99608"/>
        <function-ref name="isOwner" scoped="" ref="0x2adc4cb99790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x2adc4cbb3700" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2adc4cbb3700"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4cbb3a50"/>
        <function-ref name="write" scoped="" ref="0x2adc4cbb3bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x2adc4cbb8b78" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x2adc4cbb8b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2adc4cba7020"/>
        <function-ref name="disable" scoped="" ref="0x2adc4cba71a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2adc4cba7330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2adc4cba74b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x2adc4cbbf238" loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x2adc4cbbf238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2adc4cbbf788"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2adc4cbbf910"/>
        <function-ref name="request" scoped="" ref="0x2adc4cbbfa98"/>
        <function-ref name="granted" scoped="" ref="0x2adc4cbbfc20"/>
        <function-ref name="isOwner" scoped="" ref="0x2adc4cbbfda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x2adc4cbc2020" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2adc4cbc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4cbc2370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2adc4cc3d398" loc="47:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2adc4cc3d398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4cc3d6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2adc4cc27ba8" loc="46:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2adc4cc27ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2adc4cc3d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2adc4cc37690" loc="43:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2adc4cc37690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4cc379e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2adc4cc399b8" loc="37:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2adc4cc399b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4cc39d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2adc4cc33970" loc="41:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2adc4cc33970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2adc4cc33cc0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2adc4cc33e48"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2adc4cc37020"/>
        <function-ref name="actualMicro" scoped="" ref="0x2adc4cc371a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2adc4cc37330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2adc4cc47858" loc="36:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2adc4cc47858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4cc47ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2adc4cc471b8" loc="35:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2adc4cc471b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4cc47508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2adc4cc46020" loc="37:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2adc4cc46020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4cc46370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2adc4cc49e50" loc="18:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2adc4cc49e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4cc3f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2adc4cc497c0" loc="17:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2adc4cc497c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4cc49b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2adc4cc53b08" loc="22:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2adc4cc53b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4cc53e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2adc4cc548b8" loc="21:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2adc4cc548b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc54c08"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc54d90"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc53020"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc531a8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc53330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc534b8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc53640"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc537c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2adc4cc541d0" loc="20:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2adc4cc541d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4cc54520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2adc4cc8d020" loc="91:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2adc4cc8d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc8d770"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc8d8f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc8da80"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc8dc08"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc8dd90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc8c020"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc8c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc8c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2adc4cc78af0" loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2adc4cc78af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc78e40"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc77020"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc771a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc77330"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc774b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc77640"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc777c8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc77950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2adc4cc84af0" loc="76:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2adc4cc84af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc84e40"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc83020"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc831a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc83330"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc834b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc83640"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc837c8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc83950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2adc4cc7b7e0" loc="85:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2adc4cc7b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc7bb30"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc7bcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc7be40"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc7a020"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc7a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc7a330"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc7a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc7a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2adc4cc5e7e0" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2adc4cc5e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc5eb30"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc5ecb8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc5ee40"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc5d020"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc5d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc5d330"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc5d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc5d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2adc4cc7d4d0" loc="83:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2adc4cc7d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc7d820"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc7d9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc7db30"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc7dcb8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc7de40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc7c020"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc7c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc7c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2adc4cc5baf0" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2adc4cc5baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc5be40"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc5a020"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc5a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc5a330"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc5a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc5a640"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc5a7c8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc5a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2adc4cc68c78" loc="57:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2adc4cc68c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc67020"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc671a8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc67330"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc674b8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc67640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc677c8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc67950"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc67ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2adc4cc74020" loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2adc4cc74020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc74370"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc744f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc74680"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc74808"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc74990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc74b18"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc74ca0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc74e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2adc4cc80020" loc="79:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2adc4cc80020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc80370"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc804f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc80680"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc80808"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc80990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc80b18"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc80ca0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc80e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2adc4cc4b020" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2adc4cc4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc4b370"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc4b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc4b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc4b808"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc4b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc4bb18"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc4bca0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc4be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2adc4cc57020" loc="49:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2adc4cc57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc57370"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc574f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc57680"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc57808"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc57990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc57b18"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc57ca0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc57e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2adc4cc641a0" loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2adc4cc641a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc644f0"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc64678"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc64800"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc64988"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc64b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc64c98"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc64e20"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc63020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2adc4cc704d0" loc="71:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2adc4cc704d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc70820"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc709a8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc70b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc70cb8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc70e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc6f020"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc6f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc6f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2adc4cc90c78" loc="88:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2adc4cc90c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc8f020"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc8f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc8f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc8f4b8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc8f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc8f7c8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc8f950"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc8fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2adc4cc8a968" loc="94:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2adc4cc8a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc8acb8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc8ae40"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc89020"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc891a8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc89330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc894b8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc89640"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc897c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2adc4cc6e7e0" loc="74:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2adc4cc6e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc6eb30"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc6ecb8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc6ee40"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc85020"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc851a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc85330"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc854b8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc85640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2adc4cc604d0" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2adc4cc604d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc60820"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc609a8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc60b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc60cb8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc60e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc5f020"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc5f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc5f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2adc4cc6c658" loc="52:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2adc4cc6c658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc6c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc6cb30"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc6ccb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc6ce40"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc6b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc6b1a8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc6b330"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc6b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2adc4cc8c658" loc="92:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2adc4cc8c658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc8c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc8cb30"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc8ccb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc8ce40"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc8b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc8b1a8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc8b330"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc8b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2adc4cc6a968" loc="55:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2adc4cc6a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc6acb8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc6ae40"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc69020"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc691a8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc69330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc694b8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc69640"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc697c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2adc4cc77c78" loc="66:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2adc4cc77c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc76020"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc761a8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc76330"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc764b8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc76640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc767c8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc76950"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc76ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2adc4cc83c78" loc="77:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2adc4cc83c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc82020"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc821a8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc82330"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc824b8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc82640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc827c8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc82950"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc82ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2adc4cc7a968" loc="86:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2adc4cc7a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc7acb8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc7ae40"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc91020"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc911a8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc91330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc914b8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc91640"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc917c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2adc4cc5d968" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2adc4cc5d968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc5dcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc5de40"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc5b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc5b1a8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc5b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc5b4b8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc5b640"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc5b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2adc4cc5ac78" loc="47:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2adc4cc5ac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc59020"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc591a8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc59330"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc594b8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc59640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc597c8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc59950"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc59ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2adc4cc67e00" loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2adc4cc67e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc661a8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc66330"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc664b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc66640"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc667c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc66950"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc66ad8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc66c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2adc4cc731a0" loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2adc4cc731a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc734f0"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc73678"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc73800"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc73988"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc73b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc73c98"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc73e20"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc72020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2adc4cc7f1a0" loc="80:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2adc4cc7f1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc7f4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc7f678"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc7f800"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc7f988"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc7fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc7fc98"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc7fe20"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc7e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2adc4cc4a1a0" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2adc4cc4a1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc4a4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc4a678"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc4a800"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc4a988"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc4ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc4ac98"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc4ae20"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc61020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2adc4cc561a0" loc="50:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2adc4cc561a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc565f0"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc56778"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc56900"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc56a88"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc56c10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc56d98"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc6d020"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc6d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2adc4cc63348" loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2adc4cc63348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc63698"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc63820"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc639a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc63b30"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc63cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc63e40"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc62020"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc621a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2adc4cc8fe00" loc="89:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2adc4cc8fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc8e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc8e330"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc8e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc8e640"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc8e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc8e950"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc8ead8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc8ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2adc4cc79658" loc="64:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2adc4cc79658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc79ba8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc79d30"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc78020"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc781a8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc78330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc784b8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc78640"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc787c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2adc4cc85968" loc="75:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2adc4cc85968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc85cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc85e40"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc84020"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc841a8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc84330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc844b8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc84640"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc847c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2adc4cc7c658" loc="84:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2adc4cc7c658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc7c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc7cb30"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc7ccb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc7ce40"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc7b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc7b1a8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc7b330"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc7b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2adc4cc89af0" loc="95:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2adc4cc89af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc89e40"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc88020"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc881a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc88330"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc884b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc88640"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc887c8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc88950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2adc4cc5f658" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2adc4cc5f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc5f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc5fb30"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc5fcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc5fe40"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc5e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc5e1a8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc5e330"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc5e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2adc4cc6b7e0" loc="53:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2adc4cc6b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc6bb30"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc6bcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc6be40"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc6a020"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc6a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc6a330"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc6a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc6a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2adc4cc7e348" loc="82:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2adc4cc7e348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc7e698"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc7e820"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc7e9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc7eb30"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc7ecb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc7ee40"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc7d020"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc7d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2adc4cc69af0" loc="56:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2adc4cc69af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc69e40"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc68020"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc681a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc68330"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc684b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc68640"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc687c8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc68950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2adc4cc76e00" loc="67:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2adc4cc76e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc751a8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc75330"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc754b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc75640"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc757c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc75950"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc75ad8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc75c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2adc4cc82e00" loc="78:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2adc4cc82e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc811a8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc81330"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc814b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc81640"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc817c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc81950"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc81ad8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc81c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2adc4cc91af0" loc="87:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2adc4cc91af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc91e40"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc90020"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc901a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc90330"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc904b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc90640"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc907c8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc90950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2adc4cc3ed50" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2adc4cc3ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc4c0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc4c260"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc4c3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc4c570"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc4c6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc4c880"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc4ca08"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc4cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2adc4cc59e00" loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2adc4cc59e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc581a8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc58330"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc584b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc58640"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc587c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc58950"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc58ad8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc58c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2adc4cc65020" loc="59:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2adc4cc65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc65370"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc654f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc65680"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc65808"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc65990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc65b18"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc65ca0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc65e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2adc4cc72348" loc="70:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2adc4cc72348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc72698"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc72820"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc729a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc72b30"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc72cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc72e40"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc70020"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc701a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2adc4cc8b7e0" loc="93:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2adc4cc8b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc8bb30"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc8bcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc8be40"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc8a020"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc8a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc8a330"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc8a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc8a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2adc4cc6f658" loc="73:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2adc4cc6f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc6f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc6fb30"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc6fcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc6fe40"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc6e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc6e1a8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc6e330"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc6e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2adc4cc624d0" loc="62:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2adc4cc624d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc62820"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc629a8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc62b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc62cb8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc62e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc79020"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc791a8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc79330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2adc4cc61348" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2adc4cc61348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc61698"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc61820"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc619a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc61b30"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc61cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc61e40"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc60020"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc601a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2adc4cc6d4d0" loc="51:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2adc4cc6d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cc6d820"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cc6d9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cc6db30"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cc6dcb8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cc6de40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cc6c020"/>
        <function-ref name="set" scoped="" ref="0x2adc4cc6c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cc6c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2adc4ccd5120" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2adc4ccd5120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4ccd5470"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4ccd55f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4ccd5780"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4ccd5908"/>
        <function-ref name="get" scoped="" ref="0x2adc4ccd5a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4ccd5c18"/>
        <function-ref name="set" scoped="" ref="0x2adc4ccd5da0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4ccd4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2adc4ccd15b8" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2adc4ccd15b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4ccd1908"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4ccd1a90"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4ccd1c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4ccd1da0"/>
        <function-ref name="get" scoped="" ref="0x2adc4ccea020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4ccea1a8"/>
        <function-ref name="set" scoped="" ref="0x2adc4ccea330"/>
        <function-ref name="clr" scoped="" ref="0x2adc4ccea4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2adc4ccd8dc0" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2adc4ccd8dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4ccd7170"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4ccd72f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4ccd7480"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4ccd7608"/>
        <function-ref name="get" scoped="" ref="0x2adc4ccd7790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4ccd7918"/>
        <function-ref name="set" scoped="" ref="0x2adc4ccd7aa0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4ccd7c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2adc4ccd42a8" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2adc4ccd42a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4ccd45f8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4ccd4780"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4ccd4908"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4ccd4a90"/>
        <function-ref name="get" scoped="" ref="0x2adc4ccd4c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4ccd4da0"/>
        <function-ref name="set" scoped="" ref="0x2adc4ccd2020"/>
        <function-ref name="clr" scoped="" ref="0x2adc4ccd21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2adc4ccea740" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2adc4ccea740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cceaa90"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cceac18"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cceada0"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cce9020"/>
        <function-ref name="get" scoped="" ref="0x2adc4cce91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cce9330"/>
        <function-ref name="set" scoped="" ref="0x2adc4cce94b8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cce9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2adc4ccd6020" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2adc4ccd6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4ccd6370"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4ccd64f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4ccd6680"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4ccd6808"/>
        <function-ref name="get" scoped="" ref="0x2adc4ccd6990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4ccd6b18"/>
        <function-ref name="set" scoped="" ref="0x2adc4ccd6ca0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4ccd6e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2adc4ccd2430" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2adc4ccd2430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4ccd2780"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4ccd2908"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4ccd2a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4ccd2c18"/>
        <function-ref name="get" scoped="" ref="0x2adc4ccd2da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4ccd1020"/>
        <function-ref name="set" scoped="" ref="0x2adc4ccd11a8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4ccd1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2adc4cce98c8" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2adc4cce98c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cce9c18"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cce9da0"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cce8020"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cce81a8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cce8330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cce84b8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cce8640"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cce87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d8a2020" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d8a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d8a2370"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d8a24f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d8a2680"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d8a2808"/>
        <function-ref name="get" scoped="" ref="0x2adc4d8a2990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d8a2b18"/>
        <function-ref name="set" scoped="" ref="0x2adc4d8a2ca0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d8a2e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d89f020" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d89f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d89f370"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d89f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d89f680"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d89f808"/>
        <function-ref name="get" scoped="" ref="0x2adc4d89f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d89fb18"/>
        <function-ref name="set" scoped="" ref="0x2adc4d89fca0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d89fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d89c020" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d89c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d89c370"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d89c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d89c680"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d89c808"/>
        <function-ref name="get" scoped="" ref="0x2adc4d89c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d89cb18"/>
        <function-ref name="set" scoped="" ref="0x2adc4d89cca0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d89ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d899020" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d899020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d899370"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d8994f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d899680"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d899808"/>
        <function-ref name="get" scoped="" ref="0x2adc4d899990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d899b18"/>
        <function-ref name="set" scoped="" ref="0x2adc4d899ca0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d899e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d895020" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d895020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d895370"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d8954f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d895680"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d895808"/>
        <function-ref name="get" scoped="" ref="0x2adc4d895990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d895b18"/>
        <function-ref name="set" scoped="" ref="0x2adc4d895ca0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d895e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d892020" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d892020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d892370"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d8924f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d892680"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d892808"/>
        <function-ref name="get" scoped="" ref="0x2adc4d892990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d892b18"/>
        <function-ref name="set" scoped="" ref="0x2adc4d892ca0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d892e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d88f020" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d88f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d88f370"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d88f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d88f680"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d88f808"/>
        <function-ref name="get" scoped="" ref="0x2adc4d88f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d88fb18"/>
        <function-ref name="set" scoped="" ref="0x2adc4d88fca0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d88fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d88c020" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d88c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d88c370"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d88c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d88c680"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d88c808"/>
        <function-ref name="get" scoped="" ref="0x2adc4d88c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d88cb18"/>
        <function-ref name="set" scoped="" ref="0x2adc4d88cca0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d88ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2adc4cce0bd8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2adc4cce0bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4ccdf020"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4ccdf1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4ccdf330"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4ccdf4b8"/>
        <function-ref name="get" scoped="" ref="0x2adc4ccdf640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4ccdf7c8"/>
        <function-ref name="set" scoped="" ref="0x2adc4ccdf950"/>
        <function-ref name="clr" scoped="" ref="0x2adc4ccdfad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2adc4ccf6020" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2adc4ccf6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4ccf6370"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4ccf64f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4ccf6680"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4ccf6808"/>
        <function-ref name="get" scoped="" ref="0x2adc4ccf6990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4ccf6b18"/>
        <function-ref name="set" scoped="" ref="0x2adc4ccf6ca0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4ccf6e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2adc4cce3930" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2adc4cce3930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cce3c80"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cce3e08"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cce1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cce11a8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cce1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cce14b8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cce1640"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cce17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2adc4ccdfd60" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2adc4ccdfd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4ccde0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4ccde260"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4ccde3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4ccde570"/>
        <function-ref name="get" scoped="" ref="0x2adc4ccde6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4ccde880"/>
        <function-ref name="set" scoped="" ref="0x2adc4ccdea08"/>
        <function-ref name="clr" scoped="" ref="0x2adc4ccdeb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2adc4ccf5120" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2adc4ccf5120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4ccf5470"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4ccf55f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4ccf5780"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4ccf5908"/>
        <function-ref name="get" scoped="" ref="0x2adc4ccf5a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4ccf5c18"/>
        <function-ref name="set" scoped="" ref="0x2adc4ccf5da0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4ccf4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2adc4cce1a50" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2adc4cce1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cce1da0"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cce0020"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cce01a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cce0330"/>
        <function-ref name="get" scoped="" ref="0x2adc4cce04b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cce0640"/>
        <function-ref name="set" scoped="" ref="0x2adc4cce07c8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cce0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2adc4ccdee18" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2adc4ccdee18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4ccf71a8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4ccf7330"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4ccf74b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4ccf7640"/>
        <function-ref name="get" scoped="" ref="0x2adc4ccf77c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4ccf7950"/>
        <function-ref name="set" scoped="" ref="0x2adc4ccf7ad8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4ccf7c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2adc4ccf42a8" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2adc4ccf42a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4ccf45f8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4ccf4780"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4ccf4908"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4ccf4a90"/>
        <function-ref name="get" scoped="" ref="0x2adc4ccf4c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4ccf4da0"/>
        <function-ref name="set" scoped="" ref="0x2adc4ccf3020"/>
        <function-ref name="clr" scoped="" ref="0x2adc4ccf31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d918180" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d918180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d9184d0"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d918658"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d9187e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d918968"/>
        <function-ref name="get" scoped="" ref="0x2adc4d918af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d918c78"/>
        <function-ref name="set" scoped="" ref="0x2adc4d918e00"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d917020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d915100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d915100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d915450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d9155d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d915760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d9158e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d915a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d915bf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d915d80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d914020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d912100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d912100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d912450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d9125d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d912760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d9128e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d912a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d912bf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d912d80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d911020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d90f100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d90f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d90f450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d90f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d90f760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d90f8e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d90fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d90fbf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d90fd80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d90e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d90c100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d90c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d90c450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d90c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d90c760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d90c8e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d90ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d90cbf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d90cd80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d90a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d908100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d908100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d908450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d9085d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d908760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d9088e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d908a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d908bf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d908d80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d907020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d905100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d905100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d905450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d9055d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d905760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d9058e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d905a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d905bf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d905d80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d904020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d902100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d902100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d902450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d9025d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d902760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d9028e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d902a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d902bf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d902d80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d901020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2adc4cceb740" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2adc4cceb740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cceba90"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4ccebc18"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4ccebda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd04020"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd041a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd04330"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd044b8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd04640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2adc4cd02bd8" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2adc4cd02bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd01020"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd011a8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd01330"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd014b8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd01640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd017c8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd01950"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd01ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2adc4cced500" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2adc4cced500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cced850"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cced9d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4ccedb60"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4ccedce8"/>
        <function-ref name="get" scoped="" ref="0x2adc4ccede70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4ccec020"/>
        <function-ref name="set" scoped="" ref="0x2adc4ccec1a8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4ccec330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2adc4cd048c8" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2adc4cd048c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd04c18"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd04da0"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd03020"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd031a8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd03330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd034b8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd03640"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd037c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2adc4cd01d60" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2adc4cd01d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd000d8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd00260"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd003e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd00570"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd006f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd00880"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd00a08"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd00b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2adc4ccec5b8" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2adc4ccec5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4ccec908"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cceca90"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4ccecc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4ccecda0"/>
        <function-ref name="get" scoped="" ref="0x2adc4cceb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cceb1a8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cceb330"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cceb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2adc4cd03a50" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2adc4cd03a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd03da0"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd02020"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd021a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd02330"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd024b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd02640"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd027c8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd02950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2adc4cd00e18" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2adc4cd00e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4ccff1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4ccff330"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4ccff4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4ccff640"/>
        <function-ref name="get" scoped="" ref="0x2adc4ccff7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4ccff950"/>
        <function-ref name="set" scoped="" ref="0x2adc4ccffad8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4ccffc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d946180" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d946180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d9464d0"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d946658"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d9467e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d946968"/>
        <function-ref name="get" scoped="" ref="0x2adc4d946af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d946c78"/>
        <function-ref name="set" scoped="" ref="0x2adc4d946e00"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d945020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d943100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d943100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d943450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d9435d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d943760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d9438e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d943a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d943bf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d943d80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d942020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d940100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d940100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d940450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d9405d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d940760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d9408e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d940a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d940bf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d940d80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d93f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d989100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d989100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d989450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d9895d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d989760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d9898e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d989a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d989bf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d989d80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d988020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d986100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d986100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d986450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d9865d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d986760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d9868e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d986a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d986bf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d986d80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d984020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d982100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d982100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d982450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d9825d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d982760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d9828e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d982a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d982bf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d982d80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d981020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d97f100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d97f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d97f450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d97f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d97f760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d97f8e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d97fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d97fbf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d97fd80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d97e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d97c100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d97c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d97c450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d97c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d97c760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d97c8e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d97ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d97cbf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d97cd80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d97b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2adc4cd10120" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2adc4cd10120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd10470"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd105f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd10780"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd10908"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd10a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd10c18"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd10da0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2adc4cd0d5b8" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2adc4cd0d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd0d908"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd0da90"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd0dc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd0dda0"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd0b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd0b1a8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd0b330"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd0b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2adc4ccf9e40" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2adc4ccf9e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4ccf81c0"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4ccf8348"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4ccf84d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4ccf8658"/>
        <function-ref name="get" scoped="" ref="0x2adc4ccf87e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4ccf8968"/>
        <function-ref name="set" scoped="" ref="0x2adc4ccf8af0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4ccf8c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2adc4cd0f2a8" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2adc4cd0f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd0f5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd0f780"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd0f908"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd0fa90"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd0fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd0fda0"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd0e020"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd0e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2adc4cd0b740" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2adc4cd0b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd0ba90"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd0bc18"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd0bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd0a020"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd0a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd0a330"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd0a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd0a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2adc4cd11020" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2adc4cd11020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd11370"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd114f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd11680"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd11808"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd11990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd11b18"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd11ca0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd11e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2adc4cd0e430" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2adc4cd0e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd0e780"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd0e908"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd0ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd0ec18"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd0eda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd0d020"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd0d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd0d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2adc4cd0a8c8" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2adc4cd0a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd0ac18"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd0ada0"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd09020"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd091a8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd09330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd094b8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd09640"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd097c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d9c4180" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d9c4180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d9c44d0"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d9c4658"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d9c47e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d9c4968"/>
        <function-ref name="get" scoped="" ref="0x2adc4d9c4af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d9c4c78"/>
        <function-ref name="set" scoped="" ref="0x2adc4d9c4e00"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d9c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d9c1100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d9c1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d9c1450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d9c15d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d9c1760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d9c18e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d9c1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d9c1bf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d9c1d80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d9c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d9be100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d9be100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d9be450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d9be5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d9be760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d9be8e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d9bea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d9bebf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d9bed80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d9bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d9bb100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d9bb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d9bb450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d9bb5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d9bb760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d9bb8e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d9bba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d9bbbf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d9bbd80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d9ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d9b8100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d9b8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d9b8450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d9b85d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d9b8760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d9b88e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d9b8a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d9b8bf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d9b8d80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d9b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d9b5100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d9b5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d9b5450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d9b55d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d9b5760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d9b58e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d9b5a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d9b5bf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d9b5d80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d9b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d9b1100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d9b1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d9b1450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d9b15d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d9b1760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d9b18e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d9b1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d9b1bf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d9b1d80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d9b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4d9fc100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4d9fc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d9fc450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d9fc5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d9fc760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d9fc8e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d9fca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d9fcbf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d9fcd80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d9fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2adc4cd1cbd8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2adc4cd1cbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd1a020"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd1a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd1a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd1a4b8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd1a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd1a7c8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd1a950"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd1aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2adc4cd17020" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2adc4cd17020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd17370"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd174f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd17680"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd17808"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd17990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd17b18"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd17ca0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd17e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2adc4cd1e930" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2adc4cd1e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd1ec80"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd1ee08"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd1d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd1d1a8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd1d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd1d4b8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd1d640"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd1d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2adc4cd1ad60" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2adc4cd1ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd190d8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd19260"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd193e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd19570"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd196f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd19880"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd19a08"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd19b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2adc4cd16120" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2adc4cd16120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd16470"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd165f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd16780"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd16908"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd16a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd16c18"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd16da0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd15020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2adc4cd1da50" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2adc4cd1da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd1dda0"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd1c020"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd1c1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd1c330"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd1c4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd1c640"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd1c7c8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd1c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2adc4cd19e18" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2adc4cd19e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd181a8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd18330"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd184b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd18640"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd187c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd18950"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd18ad8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd18c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2adc4cd152a8" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2adc4cd152a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd155f8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd15780"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd15908"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd15a90"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd15c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd15da0"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd14020"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd141a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4da47180" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4da47180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4da474d0"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4da47658"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4da477e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4da47968"/>
        <function-ref name="get" scoped="" ref="0x2adc4da47af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4da47c78"/>
        <function-ref name="set" scoped="" ref="0x2adc4da47e00"/>
        <function-ref name="clr" scoped="" ref="0x2adc4da46020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4da44100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4da44100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4da44450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4da445d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4da44760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4da448e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4da44a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4da44bf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4da44d80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4da43020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4da41100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4da41100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4da41450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4da415d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4da41760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4da418e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4da41a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4da41bf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4da41d80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4da40020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4da3e100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4da3e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4da3e450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4da3e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4da3e760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4da3e8e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4da3ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4da3ebf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4da3ed80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4da3d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4da3b100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4da3b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4da3b450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4da3b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4da3b760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4da3b8e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4da3ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4da3bbf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4da3bd80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4da3a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4da38100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4da38100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4da38450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4da385d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4da38760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4da388e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4da38a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4da38bf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4da38d80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4da36020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4da34100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4da34100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4da34450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4da345d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4da34760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4da348e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4da34a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4da34bf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4da34d80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4da33020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4da31100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4da31100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4da31450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4da315d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4da31760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4da318e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4da31a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4da31bf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4da31d80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4da30020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2adc4cd26430" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2adc4cd26430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd26780"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd26908"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd26a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd26c18"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd26da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd25020"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd251a8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd25330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2adc4cd238c8" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2adc4cd238c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd23c18"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd23da0"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd22020"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd221a8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd22330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd224b8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd22640"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd227c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2adc4cd281e8" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2adc4cd281e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd28538"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd286c0"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd28848"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd289d0"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd28b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd28ce0"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd28e68"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd27020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2adc4cd255b8" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2adc4cd255b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd25908"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd25a90"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd25c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd25da0"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd24020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd241a8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd24330"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd244b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2adc4cd22a50" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2adc4cd22a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd22da0"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd21020"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd211a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd21330"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd214b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd21640"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd217c8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd21950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2adc4cd272a8" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2adc4cd272a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd275f8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd27780"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd27908"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd27a90"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd27c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd27da0"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd26020"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd261a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2adc4cd24740" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2adc4cd24740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd24a90"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd24c18"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd24da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd23020"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd231a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd23330"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd234b8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd23640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2adc4cd21bd8" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2adc4cd21bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd20020"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd201a8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd20330"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd204b8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd20640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd207c8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd20950"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd20ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4da7f180" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4da7f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4da7f4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4da7f658"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4da7f7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4da7f968"/>
        <function-ref name="get" scoped="" ref="0x2adc4da7faf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4da7fc78"/>
        <function-ref name="set" scoped="" ref="0x2adc4da7fe00"/>
        <function-ref name="clr" scoped="" ref="0x2adc4da7e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4da7c100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4da7c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4da7c450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4da7c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4da7c760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4da7c8e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4da7ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4da7cbf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4da7cd80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4da7b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4da79100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4da79100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4da79450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4da795d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4da79760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4da798e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4da79a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4da79bf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4da79d80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4da78020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4da76100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4da76100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4da76450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4da765d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4da76760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4da768e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4da76a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4da76bf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4da76d80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4da75020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4dac3100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4dac3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4dac3450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4dac35d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4dac3760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4dac38e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4dac3a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4dac3bf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4dac3d80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4dac2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4dac0100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4dac0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4dac0450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4dac05d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4dac0760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4dac08e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4dac0a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4dac0bf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4dac0d80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4dabf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4dabd100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4dabd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4dabd450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4dabd5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4dabd760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4dabd8e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4dabda70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4dabdbf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4dabdd80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4dabb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4dab9100" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4dab9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4dab9450"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4dab95d8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4dab9760"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4dab98e8"/>
        <function-ref name="get" scoped="" ref="0x2adc4dab9a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4dab9bf8"/>
        <function-ref name="set" scoped="" ref="0x2adc4dab9d80"/>
        <function-ref name="clr" scoped="" ref="0x2adc4dab8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4cd34ac0" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4cd34ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd34e10"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd3a020"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd3a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd3a330"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd3a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd3a640"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd3a7c8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd3a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4cd53db8" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4cd53db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd52170"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd522f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd52480"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd52608"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd52790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd52918"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd52aa0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd52c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4cd4d3e0" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4cd4d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd4d730"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd4d8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd4da40"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd4dbc8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd4dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd4c020"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd4c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd4c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4cd497e8" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4cd497e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd49b38"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd49cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd49e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd48020"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd481a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd48330"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd484b8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd48640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4cd60c38" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4cd60c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd5f020"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd5f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd5f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd5f4b8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd5f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd5f7c8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd5f950"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd5fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4cd5a020" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4cd5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd5a370"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd5a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd5a680"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd5a808"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd5a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd5ab18"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd5aca0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd5ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4cd56480" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4cd56480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd567d0"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd56958"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd56ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd56c68"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd56df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd71020"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd711a8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd71330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4cd6d7e8" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4cd6d7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd6db38"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd6dcc0"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd6de48"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd6c020"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd6c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd6c330"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd6c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd6c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4cd68970" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4cd68970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd68cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd68e48"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd67020"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd671a8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd67330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd674b8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd67640"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd677c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4cd64ab0" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4cd64ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd64e00"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd7f020"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd7f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd7f330"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd7f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd7f640"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd7f7c8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd7f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4cd7bc38" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4cd7bc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd7a020"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd7a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd7a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd7a4b8"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd7a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd7a7c8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd7a950"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd7aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4cd75020" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4cd75020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd75370"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd754f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd75680"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd75808"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd75990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd75b18"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd75ca0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd75e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2adc4cd8d180" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2adc4cd8d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4cd8d4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4cd8d658"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4cd8d7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4cd8d968"/>
        <function-ref name="get" scoped="" ref="0x2adc4cd8daf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4cd8dc78"/>
        <function-ref name="set" scoped="" ref="0x2adc4cd8de00"/>
        <function-ref name="clr" scoped="" ref="0x2adc4cd8c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2adc4cdbd020" loc="27:/opt/tinyos-2.1.0/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2adc4cdbd020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2adc4c8c4128"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2adc4c8c4128"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4cdbd370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2adc4cdbd650" loc="28:/opt/tinyos-2.1.0/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2adc4cdbd650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2adc4cdbd9a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2adc4cdbdb28"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2adc4cdbdcb0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2adc4cdbde38"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2adc4cdbc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2adc4cdd8a60" loc="49:/opt/tinyos-2.1.0/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2adc4cdd8a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4cdd8db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2adc4cdd9278" loc="46:/opt/tinyos-2.1.0/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2adc4cdd9278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2adc4cdd95c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2adc4cdd8398" loc="48:/opt/tinyos-2.1.0/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2adc4cdd8398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4cdd86e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2adc4cdd98b0" loc="47:/opt/tinyos-2.1.0/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2adc4cdd98b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4cdd9c00"/>
        <function-ref name="taskLoop" scoped="" ref="0x2adc4cdd9d88"/>
        <function-ref name="runNextTask" scoped="" ref="0x2adc4cdd8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2adc4c8cc1c8" loc="37:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2adc4c8cc1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2adc4c8cc518"/>
        <function-ref name="runTask" scoped="" ref="0x2adc4c8cc6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2adc4c8c9600" loc="36:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2adc4c8c9600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4c8c9950"/>
        <function-ref name="taskLoop" scoped="" ref="0x2adc4c8c9ad8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2adc4c8c9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2adc4c97db08" loc="45:/opt/tinyos-2.1.0/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2adc4c97db08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2adc4c97de58"/>
        <function-ref name="runTask" scoped="" ref="0x2adc4c97c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2adc4c97b020" loc="46:/opt/tinyos-2.1.0/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2adc4c97b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2adc4c97b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2adc4c97eb48" loc="44:/opt/tinyos-2.1.0/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2adc4c97eb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4c97d020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2adc4c97d1a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2adc4c97d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2adc4c9a22b0" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2adc4c9a22b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2adc4c9a2600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2adc4c8d2dc8" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2adc4c8d2dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2adc4c99c170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2adc4c998240" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2adc4c998240"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2adc4c998590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2adc4cdeb210" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2adc4cdeb210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4cdeb560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2adc4cdebb88" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x2adc4cdebb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="T32khz" ref="0x2adc4c940960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2adc4cde7270"/>
        <function-ref name="fired" scoped="" ref="0x2adc4cde9310"/>
        <function-ref name="startAt" scoped="" ref="0x2adc4cde9c20"/>
        <function-ref name="isRunning" scoped="" ref="0x2adc4cde9798"/>
        <function-ref name="getAlarm" scoped="" ref="0x2adc4cde76f8"/>
        <function-ref name="start" scoped="" ref="0x2adc4cdea930"/>
        <function-ref name="stop" scoped="" ref="0x2adc4cdeae08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2adc4cde49e8" loc="67:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2adc4cde49e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="T32khz" ref="0x2adc4c940960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2adc4d02e088"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d0320f8"/>
        <function-ref name="startAt" scoped="" ref="0x2adc4d032a08"/>
        <function-ref name="isRunning" scoped="" ref="0x2adc4d032580"/>
        <function-ref name="getAlarm" scoped="" ref="0x2adc4d02e510"/>
        <function-ref name="start" scoped="" ref="0x2adc4d033768"/>
        <function-ref name="stop" scoped="" ref="0x2adc4d033c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2adc4d02e928" loc="68:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2adc4d02e928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4d02ec78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2adc4db48a60" loc="28:/opt/tinyos-2.1.0/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2adc4db48a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="T32khz" ref="0x2adc4c940960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2adc4db44150"/>
        <function-ref name="fired" scoped="" ref="0x2adc4db461f8"/>
        <function-ref name="startAt" scoped="" ref="0x2adc4db46b08"/>
        <function-ref name="isRunning" scoped="" ref="0x2adc4db46680"/>
        <function-ref name="getAlarm" scoped="" ref="0x2adc4db445d8"/>
        <function-ref name="start" scoped="" ref="0x2adc4db47828"/>
        <function-ref name="stop" scoped="" ref="0x2adc4db47d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2adc4db42e70" loc="30:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2adc4db42e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="TOne" ref="0x2adc4c977e60"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2adc4db92628"/>
        <function-ref name="fired" scoped="" ref="0x2adc4db3f580"/>
        <function-ref name="startAt" scoped="" ref="0x2adc4db92020"/>
        <function-ref name="isRunning" scoped="" ref="0x2adc4db3fa08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2adc4db92ab0"/>
        <function-ref name="start" scoped="" ref="0x2adc4db40be8"/>
        <function-ref name="stop" scoped="" ref="0x2adc4db3f0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2adc4ce1a0c0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2adc4ce1a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2adc4ce1a410"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2adc4ce1a598"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2adc4ce1a720"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2adc4ce1a8a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2adc4ce1aa30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2adc4ce1abb8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2adc4ce1ad40"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2adc4ce19020"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2adc4ce191a8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2adc4ce19330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2adc4ce29b68" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2adc4ce29b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2adc4ce27db8"/>
        <function-ref name="test" scoped="" ref="0x2adc4ce274a8"/>
        <function-ref name="get" scoped="" ref="0x2adc4ce12728"/>
        <function-ref name="captured" scoped="" ref="0x2adc4ce110c0"/>
        <function-ref name="reset" scoped="" ref="0x2adc4ce11598"/>
        <function-ref name="isOn" scoped="" ref="0x2adc4ce27930"/>
        <function-ref name="set" scoped="" ref="0x2adc4ce12bb0"/>
        <function-ref name="start" scoped="" ref="0x2adc4ce11a20"/>
        <function-ref name="stop" scoped="" ref="0x2adc4ce27020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2adc4ce24020" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2adc4ce24020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2adc4ce1d7a8"/>
        <function-ref name="fired" scoped="" ref="0x2adc4ce23560"/>
        <function-ref name="get" scoped="" ref="0x2adc4ce24ba0"/>
        <function-ref name="reset" scoped="" ref="0x2adc4ce239e8"/>
        <function-ref name="isOn" scoped="" ref="0x2adc4ce1dc30"/>
        <function-ref name="set" scoped="" ref="0x2adc4ce23088"/>
        <function-ref name="start" scoped="" ref="0x2adc4ce23e70"/>
        <function-ref name="stop" scoped="" ref="0x2adc4ce1d320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2adc4ce0a020" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2adc4ce0a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2adc4cdff0f8"/>
        <function-ref name="test" scoped="" ref="0x2adc4ce007a8"/>
        <function-ref name="get" scoped="" ref="0x2adc4ce0aba0"/>
        <function-ref name="setScale" scoped="" ref="0x2adc4cdff580"/>
        <function-ref name="getScale" scoped="" ref="0x2adc4cdffa58"/>
        <function-ref name="reset" scoped="" ref="0x2adc4ce099e8"/>
        <function-ref name="overflow" scoped="" ref="0x2adc4ce09560"/>
        <function-ref name="isOn" scoped="" ref="0x2adc4ce00c30"/>
        <function-ref name="set" scoped="" ref="0x2adc4ce09088"/>
        <function-ref name="start" scoped="" ref="0x2adc4ce09e70"/>
        <function-ref name="stop" scoped="" ref="0x2adc4ce00320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2adc4ce2c950" loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2adc4ce2c950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2adc4ce2cca0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2adc4ce2ce28"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2adc4ce32020"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2adc4ce321a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2adc4ce32330"/>
        <function-ref name="setControl" scoped="" ref="0x2adc4ce324b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2adc4ce42470" loc="50:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2adc4ce42470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2adc4ce427c0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2adc4ce42948"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2adc4ce42ad0"/>
        <function-ref name="countBusy" scoped="" ref="0x2adc4ce42c58"/>
        <function-ref name="getAssr" scoped="" ref="0x2adc4ce42de0"/>
        <function-ref name="setAssr" scoped="" ref="0x2adc4ce48020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2adc4ce32980" loc="49:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2adc4ce32980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2adc4ce49270"/>
        <function-ref name="fired" scoped="" ref="0x2adc4ce4a020"/>
        <function-ref name="get" scoped="" ref="0x2adc4ce31560"/>
        <function-ref name="reset" scoped="" ref="0x2adc4ce4a4a8"/>
        <function-ref name="isOn" scoped="" ref="0x2adc4ce496f8"/>
        <function-ref name="set" scoped="" ref="0x2adc4ce319e8"/>
        <function-ref name="start" scoped="" ref="0x2adc4ce4a930"/>
        <function-ref name="stop" scoped="" ref="0x2adc4ce4adb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2adc4ce3ad90" loc="47:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2adc4ce3ad90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2adc4ce34e58"/>
        <function-ref name="test" scoped="" ref="0x2adc4ce34548"/>
        <function-ref name="get" scoped="" ref="0x2adc4ce37940"/>
        <function-ref name="setScale" scoped="" ref="0x2adc4ce33310"/>
        <function-ref name="getScale" scoped="" ref="0x2adc4ce337e8"/>
        <function-ref name="reset" scoped="" ref="0x2adc4ce36778"/>
        <function-ref name="overflow" scoped="" ref="0x2adc4ce362f0"/>
        <function-ref name="isOn" scoped="" ref="0x2adc4ce349d0"/>
        <function-ref name="set" scoped="" ref="0x2adc4ce37dc8"/>
        <function-ref name="start" scoped="" ref="0x2adc4ce36c00"/>
        <function-ref name="stop" scoped="" ref="0x2adc4ce340c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2adc4ce5b558" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2adc4ce5b558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2adc4ce5b8a8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2adc4ce5ba30"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2adc4ce5bbb8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2adc4ce5bd40"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2adc4ce5a020"/>
        <function-ref name="setControl" scoped="" ref="0x2adc4ce5a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2adc4ce56790" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2adc4ce56790"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2adc4ce56ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2adc4ce55020" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2adc4ce55020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2adc4ce55370"/>
        <function-ref name="compareBusy" scoped="" ref="0x2adc4ce554f8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2adc4ce55680"/>
        <function-ref name="countBusy" scoped="" ref="0x2adc4ce55808"/>
        <function-ref name="getAssr" scoped="" ref="0x2adc4ce55990"/>
        <function-ref name="setAssr" scoped="" ref="0x2adc4ce55b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2adc4ce5a670" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2adc4ce5a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2adc4ce57e20"/>
        <function-ref name="fired" scoped="" ref="0x2adc4ce59b80"/>
        <function-ref name="get" scoped="" ref="0x2adc4ce59220"/>
        <function-ref name="reset" scoped="" ref="0x2adc4ce57088"/>
        <function-ref name="isOn" scoped="" ref="0x2adc4ce56310"/>
        <function-ref name="set" scoped="" ref="0x2adc4ce596a8"/>
        <function-ref name="start" scoped="" ref="0x2adc4ce57510"/>
        <function-ref name="stop" scoped="" ref="0x2adc4ce57998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2adc4ce40400" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2adc4ce40400"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2adc4ce3c580"/>
        <function-ref name="test" scoped="" ref="0x2adc4ce3dc20"/>
        <function-ref name="get" scoped="" ref="0x2adc4ce3f020"/>
        <function-ref name="setScale" scoped="" ref="0x2adc4ce3ca08"/>
        <function-ref name="getScale" scoped="" ref="0x2adc4ce5b020"/>
        <function-ref name="reset" scoped="" ref="0x2adc4ce3fe08"/>
        <function-ref name="overflow" scoped="" ref="0x2adc4ce3f980"/>
        <function-ref name="isOn" scoped="" ref="0x2adc4ce3c0f8"/>
        <function-ref name="set" scoped="" ref="0x2adc4ce3f4a8"/>
        <function-ref name="start" scoped="" ref="0x2adc4ce3d310"/>
        <function-ref name="stop" scoped="" ref="0x2adc4ce3d798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2adc4ceb7568" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2adc4ceb7568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2adc4ceb78b8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2adc4ceb7a40"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2adc4ceb7bc8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2adc4ceb7d50"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2adc4ceb6020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2adc4ceb61a8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2adc4ceb6330"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2adc4ceb64b8"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2adc4ceb6640"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2adc4ceb67c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x2adc4cec6020" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x2adc4cec6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2adc4cec6370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2adc4cec64f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2adc4cec6680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2adc4cec6808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2adc4cec6990"/>
        <function-ref name="setControl" scoped="" ref="0x2adc4cec6b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2adc4ceb1540" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2adc4ceb1540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2adc4ceaedb8"/>
        <function-ref name="fired" scoped="" ref="0x2adc4ceafa58"/>
        <function-ref name="get" scoped="" ref="0x2adc4ceaf0f8"/>
        <function-ref name="reset" scoped="" ref="0x2adc4ceae020"/>
        <function-ref name="isOn" scoped="" ref="0x2adc4cead270"/>
        <function-ref name="set" scoped="" ref="0x2adc4ceaf580"/>
        <function-ref name="start" scoped="" ref="0x2adc4ceae4a8"/>
        <function-ref name="stop" scoped="" ref="0x2adc4ceae930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2adc4ceb6ca0" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2adc4ceb6ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2adc4ceb2e20"/>
        <function-ref name="test" scoped="" ref="0x2adc4ceb2510"/>
        <function-ref name="get" scoped="" ref="0x2adc4ceb5858"/>
        <function-ref name="captured" scoped="" ref="0x2adc4ceb3238"/>
        <function-ref name="reset" scoped="" ref="0x2adc4ceb3710"/>
        <function-ref name="isOn" scoped="" ref="0x2adc4ceb2998"/>
        <function-ref name="set" scoped="" ref="0x2adc4ceb5ce0"/>
        <function-ref name="start" scoped="" ref="0x2adc4ceb3b98"/>
        <function-ref name="stop" scoped="" ref="0x2adc4ceb2088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2adc4cead8e8" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2adc4cead8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2adc4cecb088"/>
        <function-ref name="fired" scoped="" ref="0x2adc4ceacdf0"/>
        <function-ref name="get" scoped="" ref="0x2adc4ceac490"/>
        <function-ref name="reset" scoped="" ref="0x2adc4cecc2b0"/>
        <function-ref name="isOn" scoped="" ref="0x2adc4cecb510"/>
        <function-ref name="set" scoped="" ref="0x2adc4ceac918"/>
        <function-ref name="start" scoped="" ref="0x2adc4cecc738"/>
        <function-ref name="stop" scoped="" ref="0x2adc4ceccbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2adc4cecbb88" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2adc4cecbb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2adc4cec74a8"/>
        <function-ref name="fired" scoped="" ref="0x2adc4cec80f8"/>
        <function-ref name="get" scoped="" ref="0x2adc4ceca760"/>
        <function-ref name="reset" scoped="" ref="0x2adc4cec8580"/>
        <function-ref name="isOn" scoped="" ref="0x2adc4cec7930"/>
        <function-ref name="set" scoped="" ref="0x2adc4cecabe8"/>
        <function-ref name="start" scoped="" ref="0x2adc4cec8a08"/>
        <function-ref name="stop" scoped="" ref="0x2adc4cec7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2adc4cebc490" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2adc4cebc490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2adc4ceb8580"/>
        <function-ref name="test" scoped="" ref="0x2adc4ceb9c30"/>
        <function-ref name="get" scoped="" ref="0x2adc4cebb088"/>
        <function-ref name="setScale" scoped="" ref="0x2adc4ceb8a08"/>
        <function-ref name="getScale" scoped="" ref="0x2adc4ceb7020"/>
        <function-ref name="reset" scoped="" ref="0x2adc4cebbe70"/>
        <function-ref name="overflow" scoped="" ref="0x2adc4cebb9e8"/>
        <function-ref name="isOn" scoped="" ref="0x2adc4ceb80f8"/>
        <function-ref name="set" scoped="" ref="0x2adc4cebb510"/>
        <function-ref name="start" scoped="" ref="0x2adc4ceb9320"/>
        <function-ref name="stop" scoped="" ref="0x2adc4ceb97a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2adc4cf62190" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2adc4cf62190"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2adc4c8c5d88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2adc4c8c5d88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4cf624e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2adc4cf628b0" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2adc4cf628b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2adc4cf5f998"/>
        <function-ref name="test" scoped="" ref="0x2adc4cf5f088"/>
        <function-ref name="get" scoped="" ref="0x2adc4cf61490"/>
        <function-ref name="setScale" scoped="" ref="0x2adc4cf5fe20"/>
        <function-ref name="getScale" scoped="" ref="0x2adc4cf5d350"/>
        <function-ref name="reset" scoped="" ref="0x2adc4cf602b0"/>
        <function-ref name="overflow" scoped="" ref="0x2adc4cf61df0"/>
        <function-ref name="isOn" scoped="" ref="0x2adc4cf5f510"/>
        <function-ref name="set" scoped="" ref="0x2adc4cf61918"/>
        <function-ref name="start" scoped="" ref="0x2adc4cf60738"/>
        <function-ref name="stop" scoped="" ref="0x2adc4cf60bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2adc4db7f420" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2adc4db7f420"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2adc4c8c5a20"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2adc4c8c5a20"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="TOne" ref="0x2adc4c977e60"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2adc4db7dab0"/>
        <function-ref name="fired" scoped="" ref="0x2adc4db7eb30"/>
        <function-ref name="startAt" scoped="" ref="0x2adc4db7d4a8"/>
        <function-ref name="isRunning" scoped="" ref="0x2adc4db7d020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2adc4db7c020"/>
        <function-ref name="start" scoped="" ref="0x2adc4db7e1d0"/>
        <function-ref name="stop" scoped="" ref="0x2adc4db7e6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x2adc4db775a8" loc="49:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x2adc4db775a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2adc4db74db8"/>
        <function-ref name="fired" scoped="" ref="0x2adc4db76ab0"/>
        <function-ref name="get" scoped="" ref="0x2adc4db76150"/>
        <function-ref name="reset" scoped="" ref="0x2adc4db74020"/>
        <function-ref name="isOn" scoped="" ref="0x2adc4db73270"/>
        <function-ref name="set" scoped="" ref="0x2adc4db765d8"/>
        <function-ref name="start" scoped="" ref="0x2adc4db744a8"/>
        <function-ref name="stop" scoped="" ref="0x2adc4db74930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x2adc4db7c540" loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x2adc4db7c540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2adc4db786f8"/>
        <function-ref name="test" scoped="" ref="0x2adc4db79db8"/>
        <function-ref name="get" scoped="" ref="0x2adc4db7b0f8"/>
        <function-ref name="setScale" scoped="" ref="0x2adc4db78b80"/>
        <function-ref name="getScale" scoped="" ref="0x2adc4db77088"/>
        <function-ref name="reset" scoped="" ref="0x2adc4db79020"/>
        <function-ref name="overflow" scoped="" ref="0x2adc4db7ba58"/>
        <function-ref name="isOn" scoped="" ref="0x2adc4db78270"/>
        <function-ref name="set" scoped="" ref="0x2adc4db7b580"/>
        <function-ref name="start" scoped="" ref="0x2adc4db794a8"/>
        <function-ref name="stop" scoped="" ref="0x2adc4db79930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2adc4cfacd70" loc="24:/opt/tinyos-2.1.0/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2adc4cfacd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="T32khz" ref="0x2adc4c940960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2adc4cfb0af8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2adc4cfab4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2adc4cfab020"/>
        <function-ref name="overflow" scoped="" ref="0x2adc4cfab930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2adc4cfaaad0" loc="24:/opt/tinyos-2.1.0/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2adc4cfaaad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="TOne" ref="0x2adc4c977e60"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2adc4cfa7860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2adc4cfa61f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2adc4cfa7ce8"/>
        <function-ref name="overflow" scoped="" ref="0x2adc4cfa6680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2adc4cfa2a98" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2adc4cfa2a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="TOne" ref="0x2adc4c977e60"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2adc4cfb7828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2adc4cfb5190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2adc4cfb7cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2adc4cfb5618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2adc4cfb5b78" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2adc4cfb5b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2adc4cfd7c20"/>
        <function-ref name="test" scoped="" ref="0x2adc4cfd7310"/>
        <function-ref name="get" scoped="" ref="0x2adc4cfb4728"/>
        <function-ref name="setScale" scoped="" ref="0x2adc4cfd60f8"/>
        <function-ref name="getScale" scoped="" ref="0x2adc4cfd65d0"/>
        <function-ref name="reset" scoped="" ref="0x2adc4cfb3548"/>
        <function-ref name="overflow" scoped="" ref="0x2adc4cfb30c0"/>
        <function-ref name="isOn" scoped="" ref="0x2adc4cfd7798"/>
        <function-ref name="set" scoped="" ref="0x2adc4cfb4bb0"/>
        <function-ref name="start" scoped="" ref="0x2adc4cfb39d0"/>
        <function-ref name="stop" scoped="" ref="0x2adc4cfb3e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2adc4cfdc2b0" loc="52:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2adc4cfdc2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="T32khz" ref="0x2adc4c940960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2adc4cfda088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2adc4cfda998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2adc4cfda510"/>
        <function-ref name="overflow" scoped="" ref="0x2adc4cfdae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2adc4cfde0e0" loc="51:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2adc4cfde0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="T32khz" ref="0x2adc4c940960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2adc4cfdee30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2adc4cfdd798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2adc4cfdd310"/>
        <function-ref name="overflow" scoped="" ref="0x2adc4cfddc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2adc4db90e00" loc="50:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2adc4db90e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="T32khz" ref="0x2adc4c940960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2adc4db8c628"/>
        <function-ref name="fired" scoped="" ref="0x2adc4db8e580"/>
        <function-ref name="startAt" scoped="" ref="0x2adc4db8c020"/>
        <function-ref name="isRunning" scoped="" ref="0x2adc4db8ea08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2adc4db8cab0"/>
        <function-ref name="start" scoped="" ref="0x2adc4db8fbe8"/>
        <function-ref name="stop" scoped="" ref="0x2adc4db8e0f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2adc4db89310" loc="62:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x2adc4db89310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="TOne" ref="0x2adc4c977e60"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2adc4db86928"/>
        <function-ref name="fired" scoped="" ref="0x2adc4db889e8"/>
        <function-ref name="startAt" scoped="" ref="0x2adc4db86320"/>
        <function-ref name="isRunning" scoped="" ref="0x2adc4db88e70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2adc4db86db0"/>
        <function-ref name="start" scoped="" ref="0x2adc4db88088"/>
        <function-ref name="stop" scoped="" ref="0x2adc4db88560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2adc4db8b128" loc="57:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2adc4db8b128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="T32khz" ref="0x2adc4c940960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2adc4db8be78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2adc4db8a7b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2adc4db8a330"/>
        <function-ref name="overflow" scoped="" ref="0x2adc4db8ac40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2adc4d034a58" loc="18:/opt/tinyos-2.1.0/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2adc4d034a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4d034da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x2adc4d027020" loc="68:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x2adc4d027020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d027370"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d0274f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d027680"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d027808"/>
        <function-ref name="get" scoped="" ref="0x2adc4d027990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d027b18"/>
        <function-ref name="set" scoped="" ref="0x2adc4d027ca0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d027e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x2adc4d026198" loc="69:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x2adc4d026198"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d0264e8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d026670"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d0267f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d026980"/>
        <function-ref name="get" scoped="" ref="0x2adc4d026b08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d026c90"/>
        <function-ref name="set" scoped="" ref="0x2adc4d026e18"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d025020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2adc4d025338" loc="70:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2adc4d025338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d025688"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d025810"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d025998"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d025b20"/>
        <function-ref name="get" scoped="" ref="0x2adc4d025ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d025e30"/>
        <function-ref name="set" scoped="" ref="0x2adc4d024020"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d0241a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x2adc4d029de0" loc="67:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2adc4d029de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d028170"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d0282f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d028480"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d028608"/>
        <function-ref name="get" scoped="" ref="0x2adc4d028790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d028918"/>
        <function-ref name="set" scoped="" ref="0x2adc4d028aa0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d028c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x2adc4d04a648" loc="72:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x2adc4d04a648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d04a998"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d04ab20"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d04aca8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d04ae30"/>
        <function-ref name="get" scoped="" ref="0x2adc4d049020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d0491a8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d049330"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d0494b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2adc4cdecc88" loc="66:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2adc4cdecc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d029020"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d0291a8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d029330"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d0294b8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d029640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d0297c8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d029950"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d029ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x2adc4d0244b0" loc="71:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x2adc4d0244b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d024800"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d024988"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d024b10"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d024c98"/>
        <function-ref name="get" scoped="" ref="0x2adc4d024e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d04a020"/>
        <function-ref name="set" scoped="" ref="0x2adc4d04a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d04a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x2adc4d03de80" loc="39:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x2adc4d03de80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2adc4d0401f8"/>
        <function-ref name="disable" scoped="" ref="0x2adc4d040380"/>
        <function-ref name="captured" scoped="" ref="0x2adc4d040508"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2adc4d040690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x2adc4d040a60" loc="40:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x2adc4d040a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2adc4d040db0"/>
        <function-ref name="disable" scoped="" ref="0x2adc4d03f020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2adc4d03f1a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2adc4d03f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x2adc4d03f710" loc="41:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2adc4d03f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2adc4d03fa60"/>
        <function-ref name="disable" scoped="" ref="0x2adc4d03fbe8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2adc4d03fd70"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2adc4d03b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2adc4d039020" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2adc4d039020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2adc4d039370"/>
        <function-ref name="disable" scoped="" ref="0x2adc4d0394f8"/>
        <function-ref name="captured" scoped="" ref="0x2adc4d039680"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2adc4d039808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x2adc4d039bd8" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x2adc4d039bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2adc4d04edb8"/>
        <function-ref name="test" scoped="" ref="0x2adc4d04e4a8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d0517a0"/>
        <function-ref name="captured" scoped="" ref="0x2adc4d050130"/>
        <function-ref name="reset" scoped="" ref="0x2adc4d050608"/>
        <function-ref name="isOn" scoped="" ref="0x2adc4d04e930"/>
        <function-ref name="set" scoped="" ref="0x2adc4d051c28"/>
        <function-ref name="start" scoped="" ref="0x2adc4d050a90"/>
        <function-ref name="stop" scoped="" ref="0x2adc4d04e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2adc4d0722e8" loc="9:/opt/tinyos-2.1.0/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2adc4d0722e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2adc4d072638"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d0727c0"/>
        <function-ref name="disable" scoped="" ref="0x2adc4d072948"/>
        <function-ref name="edge" scoped="" ref="0x2adc4d072ad0"/>
        <function-ref name="enable" scoped="" ref="0x2adc4d072c58"/>
        <function-ref name="getValue" scoped="" ref="0x2adc4d072de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2adc4d04b6f0" loc="8:/opt/tinyos-2.1.0/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2adc4d04b6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2adc4d04ba40"/>
        <function-ref name="disable" scoped="" ref="0x2adc4d04bbc8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2adc4d04bd50"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2adc4d072020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x2adc4d080020" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x2adc4d080020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2adc4d080370"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d0804f8"/>
        <function-ref name="disable" scoped="" ref="0x2adc4d080680"/>
        <function-ref name="edge" scoped="" ref="0x2adc4d080808"/>
        <function-ref name="enable" scoped="" ref="0x2adc4d080990"/>
        <function-ref name="getValue" scoped="" ref="0x2adc4d080b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x2adc4d085208" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x2adc4d085208"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2adc4d085558"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d0856e0"/>
        <function-ref name="disable" scoped="" ref="0x2adc4d085868"/>
        <function-ref name="edge" scoped="" ref="0x2adc4d0859f0"/>
        <function-ref name="enable" scoped="" ref="0x2adc4d085b78"/>
        <function-ref name="getValue" scoped="" ref="0x2adc4d085d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x2adc4d082020" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x2adc4d082020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2adc4d082370"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d0824f8"/>
        <function-ref name="disable" scoped="" ref="0x2adc4d082680"/>
        <function-ref name="edge" scoped="" ref="0x2adc4d082808"/>
        <function-ref name="enable" scoped="" ref="0x2adc4d082990"/>
        <function-ref name="getValue" scoped="" ref="0x2adc4d082b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x2adc4d07f020" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x2adc4d07f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2adc4d07f370"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d07f4f8"/>
        <function-ref name="disable" scoped="" ref="0x2adc4d07f680"/>
        <function-ref name="edge" scoped="" ref="0x2adc4d07f808"/>
        <function-ref name="enable" scoped="" ref="0x2adc4d07f990"/>
        <function-ref name="getValue" scoped="" ref="0x2adc4d07fb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x2adc4d0840f0" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x2adc4d0840f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2adc4d084440"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d0845c8"/>
        <function-ref name="disable" scoped="" ref="0x2adc4d084750"/>
        <function-ref name="edge" scoped="" ref="0x2adc4d0848d8"/>
        <function-ref name="enable" scoped="" ref="0x2adc4d084a60"/>
        <function-ref name="getValue" scoped="" ref="0x2adc4d084be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x2adc4d081020" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x2adc4d081020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2adc4d081370"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d0814f8"/>
        <function-ref name="disable" scoped="" ref="0x2adc4d081680"/>
        <function-ref name="edge" scoped="" ref="0x2adc4d081808"/>
        <function-ref name="enable" scoped="" ref="0x2adc4d081990"/>
        <function-ref name="getValue" scoped="" ref="0x2adc4d081b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x2adc4d086370" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x2adc4d086370"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2adc4d0866c0"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d086848"/>
        <function-ref name="disable" scoped="" ref="0x2adc4d0869d0"/>
        <function-ref name="edge" scoped="" ref="0x2adc4d086b58"/>
        <function-ref name="enable" scoped="" ref="0x2adc4d086ce0"/>
        <function-ref name="getValue" scoped="" ref="0x2adc4d086e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x2adc4d083020" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x2adc4d083020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2adc4d083370"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d0834f8"/>
        <function-ref name="disable" scoped="" ref="0x2adc4d083680"/>
        <function-ref name="edge" scoped="" ref="0x2adc4d083808"/>
        <function-ref name="enable" scoped="" ref="0x2adc4d083990"/>
        <function-ref name="getValue" scoped="" ref="0x2adc4d083b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x2adc4d077b40" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x2adc4d077b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2adc4d076020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x2adc4d07b408" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x2adc4d07b408"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2adc4d07b758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x2adc4d07ab40" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x2adc4d07ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2adc4d077020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x2adc4d076408" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x2adc4d076408"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2adc4d076758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x2adc4d07bb40" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x2adc4d07bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2adc4d07a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x2adc4d077408" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x2adc4d077408"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2adc4d077758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x2adc4d079b88" loc="34:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x2adc4d079b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2adc4d07b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x2adc4d07a408" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x2adc4d07a408"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2adc4d07a758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2adc4d0ab520" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2adc4d0ab520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2adc4d0ab870"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d0ab9f8"/>
        <function-ref name="disable" scoped="" ref="0x2adc4d0abb80"/>
        <function-ref name="edge" scoped="" ref="0x2adc4d0abd08"/>
        <function-ref name="enable" scoped="" ref="0x2adc4d0c0020"/>
        <function-ref name="getValue" scoped="" ref="0x2adc4d0c01a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2adc4d0c0470" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2adc4d0c0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2adc4d0c07c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2adc4d0bc180" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2adc4d0bc180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2adc4d0bc4d0"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d0bc658"/>
        <function-ref name="disable" scoped="" ref="0x2adc4d0bc7e0"/>
        <function-ref name="edge" scoped="" ref="0x2adc4d0bc968"/>
        <function-ref name="enable" scoped="" ref="0x2adc4d0bcaf0"/>
        <function-ref name="getValue" scoped="" ref="0x2adc4d0bcc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2adc4d0bb020" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2adc4d0bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2adc4d0bb370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2adc4d0b9ca0" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2adc4d0b9ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2adc4d0b8020"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d0b81a8"/>
        <function-ref name="disable" scoped="" ref="0x2adc4d0b8330"/>
        <function-ref name="edge" scoped="" ref="0x2adc4d0b84b8"/>
        <function-ref name="enable" scoped="" ref="0x2adc4d0b8640"/>
        <function-ref name="getValue" scoped="" ref="0x2adc4d0b87c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2adc4d0b8a90" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2adc4d0b8a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2adc4d0b8de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2adc4d0b47a8" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2adc4d0b47a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2adc4d0b4af8"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d0b4c80"/>
        <function-ref name="disable" scoped="" ref="0x2adc4d0b4e08"/>
        <function-ref name="edge" scoped="" ref="0x2adc4d0b3020"/>
        <function-ref name="enable" scoped="" ref="0x2adc4d0b31a8"/>
        <function-ref name="getValue" scoped="" ref="0x2adc4d0b3330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2adc4d0b35f8" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2adc4d0b35f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2adc4d0b3948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2adc4d0b0520" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2adc4d0b0520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2adc4d0b0870"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d0b09f8"/>
        <function-ref name="disable" scoped="" ref="0x2adc4d0b0b80"/>
        <function-ref name="edge" scoped="" ref="0x2adc4d0b0d08"/>
        <function-ref name="enable" scoped="" ref="0x2adc4d0af020"/>
        <function-ref name="getValue" scoped="" ref="0x2adc4d0af1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2adc4d0af470" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2adc4d0af470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2adc4d0af7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2adc4d0d63e0" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2adc4d0d63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2adc4d0d6730"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d0d68b8"/>
        <function-ref name="disable" scoped="" ref="0x2adc4d0d6a40"/>
        <function-ref name="edge" scoped="" ref="0x2adc4d0d6bc8"/>
        <function-ref name="enable" scoped="" ref="0x2adc4d0d6d50"/>
        <function-ref name="getValue" scoped="" ref="0x2adc4d0d5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2adc4d0d52e8" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2adc4d0d52e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2adc4d0d5638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2adc4d0d1180" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2adc4d0d1180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2adc4d0d14d0"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d0d1658"/>
        <function-ref name="disable" scoped="" ref="0x2adc4d0d17e0"/>
        <function-ref name="edge" scoped="" ref="0x2adc4d0d1968"/>
        <function-ref name="enable" scoped="" ref="0x2adc4d0d1af0"/>
        <function-ref name="getValue" scoped="" ref="0x2adc4d0d1c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2adc4d0d0020" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2adc4d0d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2adc4d0d0370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2adc4d0cd020" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2adc4d0cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2adc4d0cd370"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d0cd4f8"/>
        <function-ref name="disable" scoped="" ref="0x2adc4d0cd680"/>
        <function-ref name="edge" scoped="" ref="0x2adc4d0cd808"/>
        <function-ref name="enable" scoped="" ref="0x2adc4d0cd990"/>
        <function-ref name="getValue" scoped="" ref="0x2adc4d0cdb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2adc4d0cdde0" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2adc4d0cdde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2adc4d0cc170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x2adc4d0eb8e0" loc="51:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x2adc4d0eb8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d0ebc30"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d0ebdb8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d0ea020"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d0ea1a8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d0ea330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d0ea4b8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d0ea640"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d0ea7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2adc4d0c4cf0" loc="47:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2adc4d0c4cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2adc4d0eb0a0"/>
        <function-ref name="disable" scoped="" ref="0x2adc4d0eb228"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2adc4d0eb3b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2adc4d0eb538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x2adc4d0e7278" loc="69:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x2adc4d0e7278"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2adc4d0e75c8"/>
        <function-ref name="runTask" scoped="" ref="0x2adc4d0e7750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2adc4d338a88" loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2adc4d338a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d337020"/>
        <function-ref name="write" scoped="" ref="0x2adc4d3371a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2adc4d361100" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2adc4d361100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2adc4d361450"/>
        <function-ref name="writeDone" scoped="" ref="0x2adc4d3615d8"/>
        <function-ref name="write" scoped="" ref="0x2adc4d361760"/>
        <function-ref name="beginRead" scoped="" ref="0x2adc4d3618e8"/>
        <function-ref name="readDone" scoped="" ref="0x2adc4d361a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2adc4d342020" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2adc4d342020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d342370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2adc4d33ca88" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2adc4d33ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d33cdd8"/>
        <function-ref name="write" scoped="" ref="0x2adc4d33b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2adc4d336470" loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2adc4d336470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d3367c0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d336948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2adc4d336c10" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2adc4d336c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d335020"/>
        <function-ref name="write" scoped="" ref="0x2adc4d3351a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2adc4d3412e8" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2adc4d3412e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d341638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2adc4d363c10" loc="87:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2adc4d363c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d362020"/>
        <function-ref name="write" scoped="" ref="0x2adc4d3621a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2adc4d33ba88" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2adc4d33ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d33bdd8"/>
        <function-ref name="write" scoped="" ref="0x2adc4d33a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2adc4d33aa88" loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2adc4d33aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d33add8"/>
        <function-ref name="write" scoped="" ref="0x2adc4d338020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2adc4d335470" loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2adc4d335470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d3357c0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d335948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2adc4d333c10" loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2adc4d333c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d331020"/>
        <function-ref name="write" scoped="" ref="0x2adc4d3311a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2adc4d3448c8" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2adc4d3448c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2adc4d344c18"/>
        <function-ref name="abortRelease" scoped="" ref="0x2adc4d344da0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2adc4d343020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2adc4d340c50" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2adc4d340c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d33e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2adc4d33e2e8" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2adc4d33e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d33e738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2adc4d33ea00" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2adc4d33ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d33ed50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2adc4d340020" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2adc4d340020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d340370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2adc4d33a2e8" loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2adc4d33a2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d33a638"/>
        <function-ref name="write" scoped="" ref="0x2adc4d33a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2adc4d33b2e8" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2adc4d33b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d33b638"/>
        <function-ref name="write" scoped="" ref="0x2adc4d33b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2adc4d343900" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2adc4d343900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d343c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2adc4d331470" loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2adc4d331470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d3317c0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d331948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2adc4d363470" loc="86:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2adc4d363470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d3637c0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d363948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2adc4d334470" loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2adc4d334470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d3347c0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d334948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2adc4d3432e8" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2adc4d3432e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d343638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2adc4d33c2e8" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2adc4d33c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d33c638"/>
        <function-ref name="write" scoped="" ref="0x2adc4d33c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2adc4d3382e8" loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2adc4d3382e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d338638"/>
        <function-ref name="write" scoped="" ref="0x2adc4d3387c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2adc4d362470" loc="90:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2adc4d362470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2adc4d3627c0"/>
        <function-ref name="writeDone" scoped="" ref="0x2adc4d362948"/>
        <function-ref name="write" scoped="" ref="0x2adc4d362ad0"/>
        <function-ref name="beginRead" scoped="" ref="0x2adc4d362c58"/>
        <function-ref name="readDone" scoped="" ref="0x2adc4d362de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2adc4d335c10" loc="75:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2adc4d335c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d334020"/>
        <function-ref name="write" scoped="" ref="0x2adc4d3341a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2adc4d337470" loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2adc4d337470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d3377c0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d337948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2adc4d342638" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2adc4d342638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d342988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2adc4d337c10" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2adc4d337c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d336020"/>
        <function-ref name="write" scoped="" ref="0x2adc4d3361a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2adc4d345b98" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2adc4d345b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2adc4d344020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2adc4d3441a8"/>
        <function-ref name="request" scoped="" ref="0x2adc4d344330"/>
        <function-ref name="granted" scoped="" ref="0x2adc4d3444b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2adc4d344640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2adc4d33d060" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2adc4d33d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d33d3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2adc4d33dc90" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2adc4d33dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d33c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2adc4d330c10" loc="85:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2adc4d330c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d363020"/>
        <function-ref name="write" scoped="" ref="0x2adc4d3631a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2adc4d330470" loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2adc4d330470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d3307c0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d330948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2adc4d340638" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2adc4d340638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d340988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2adc4d331c10" loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2adc4d331c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d330020"/>
        <function-ref name="write" scoped="" ref="0x2adc4d3301a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2adc4d342c50" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2adc4d342c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d341020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2adc4d341900" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2adc4d341900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d341c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2adc4d33d678" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2adc4d33d678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d33d9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2adc4d334c10" loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2adc4d334c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d333020"/>
        <function-ref name="write" scoped="" ref="0x2adc4d3331a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2adc4d333470" loc="78:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2adc4d333470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d3337c0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d333948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2adc4d1293c8" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x2adc4d1293c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2adc4d129718"/>
        <function-ref name="writeDone" scoped="" ref="0x2adc4d1298a0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d129a28"/>
        <function-ref name="beginRead" scoped="" ref="0x2adc4d129bb0"/>
        <function-ref name="readDone" scoped="" ref="0x2adc4d129d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2adc4d12a4c8" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2adc4d12a4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2adc4d12a818"/>
        <function-ref name="abortRelease" scoped="" ref="0x2adc4d12a9a0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2adc4d12ab28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2adc4d1275e0" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x2adc4d1275e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d127930"/>
        <function-ref name="write" scoped="" ref="0x2adc4d127ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2adc4d126348" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x2adc4d126348"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d126698"/>
        <function-ref name="write" scoped="" ref="0x2adc4d126820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2adc4d104808" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2adc4d104808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2adc4d104b58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2adc4d104ce0"/>
        <function-ref name="request" scoped="" ref="0x2adc4d104e68"/>
        <function-ref name="granted" scoped="" ref="0x2adc4d12a020"/>
        <function-ref name="isOwner" scoped="" ref="0x2adc4d12a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2adc4d1251c8" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x2adc4d1251c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d125518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x2adc4d13b860" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2adc4d13b860"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4d13bbb0"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4d13bd38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2adc4d11f4d0" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x2adc4d11f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2adc4d11f820"/>
        <function-ref name="writeDone" scoped="" ref="0x2adc4d11f9a8"/>
        <function-ref name="write" scoped="" ref="0x2adc4d11fb30"/>
        <function-ref name="beginRead" scoped="" ref="0x2adc4d11fcb8"/>
        <function-ref name="readDone" scoped="" ref="0x2adc4d11fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2adc4d1224e8" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2adc4d1224e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2adc4d122838"/>
        <function-ref name="abortRelease" scoped="" ref="0x2adc4d1229c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2adc4d122b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x2adc4d118470" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2adc4d118470"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2adc4d1187c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x2adc4d11a0e0" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x2adc4d11a0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2adc4d11a430"/>
        <function-ref name="toIdle" scoped="" ref="0x2adc4d11a5b8"/>
        <function-ref name="isState" scoped="" ref="0x2adc4d11a740"/>
        <function-ref name="isIdle" scoped="" ref="0x2adc4d11a8c8"/>
        <function-ref name="requestState" scoped="" ref="0x2adc4d11aa50"/>
        <function-ref name="forceState" scoped="" ref="0x2adc4d11abd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2adc4d11c8e8" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2adc4d11c8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2adc4d11cc38"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2adc4d11cdc0"/>
        <function-ref name="request" scoped="" ref="0x2adc4d11b020"/>
        <function-ref name="granted" scoped="" ref="0x2adc4d11b1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2adc4d11b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2adc4d11e680" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x2adc4d11e680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d11e9d0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d11eb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2adc4d11d3c8" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x2adc4d11d3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d11d718"/>
        <function-ref name="write" scoped="" ref="0x2adc4d11d8a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2adc4d11ae50" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2adc4d11ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2adc4d1191e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2adc4d119370"/>
        <function-ref name="led1On" scoped="" ref="0x2adc4d1194f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2adc4d119680"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2adc4d119808"/>
        <function-ref name="get" scoped="" ref="0x2adc4d119990"/>
        <function-ref name="led1Off" scoped="" ref="0x2adc4d119b18"/>
        <function-ref name="led2Off" scoped="" ref="0x2adc4d13c1a8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d119ca0"/>
        <function-ref name="led0On" scoped="" ref="0x2adc4d119e28"/>
        <function-ref name="led2On" scoped="" ref="0x2adc4d13c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2adc4d121300" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2adc4d121300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2adc4d121650"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2adc4d1217d8"/>
        <function-ref name="request" scoped="" ref="0x2adc4d121960"/>
        <function-ref name="granted" scoped="" ref="0x2adc4d121ae8"/>
        <function-ref name="isOwner" scoped="" ref="0x2adc4d121c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x2adc4d138b80" loc="88:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x2adc4d138b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2adc4d136020"/>
        <function-ref name="runTask" scoped="" ref="0x2adc4d1361a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2adc4d11c1c8" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x2adc4d11c1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d11c518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2adc4d190978" loc="67:/opt/tinyos-2.1.0/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2adc4d190978"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2adc4d190cc8"/>
        <function-ref name="toIdle" scoped="" ref="0x2adc4d190e50"/>
        <function-ref name="isState" scoped="" ref="0x2adc4d18f020"/>
        <function-ref name="isIdle" scoped="" ref="0x2adc4d18f1a8"/>
        <function-ref name="requestState" scoped="" ref="0x2adc4d18f330"/>
        <function-ref name="forceState" scoped="" ref="0x2adc4d18f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2adc4d18b790" loc="66:/opt/tinyos-2.1.0/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2adc4d18b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2adc4d18bae0"/>
        <function-ref name="toIdle" scoped="" ref="0x2adc4d18bc68"/>
        <function-ref name="isState" scoped="" ref="0x2adc4d18bdf0"/>
        <function-ref name="isIdle" scoped="" ref="0x2adc4d18a020"/>
        <function-ref name="requestState" scoped="" ref="0x2adc4d18a1a8"/>
        <function-ref name="forceState" scoped="" ref="0x2adc4d18a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2adc4d187438" loc="66:/opt/tinyos-2.1.0/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2adc4d187438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4d187788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2adc4d186020" loc="67:/opt/tinyos-2.1.0/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2adc4d186020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2adc4d186370"/>
        <function-ref name="toIdle" scoped="" ref="0x2adc4d1864f8"/>
        <function-ref name="isState" scoped="" ref="0x2adc4d186680"/>
        <function-ref name="isIdle" scoped="" ref="0x2adc4d186808"/>
        <function-ref name="requestState" scoped="" ref="0x2adc4d186990"/>
        <function-ref name="forceState" scoped="" ref="0x2adc4d186b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2adc4d2f7880" loc="43:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2adc4d2f7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4d2f7bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4d2f7d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2adc4d2f72a8" loc="42:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2adc4d2f72a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2adc4d2f75f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2adc4d2f9060" loc="39:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2adc4d2f9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4d2f93b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2adc4d2f9638" loc="40:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2adc4d2f9638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2adc4d2f9988"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2adc4d2f9b10"/>
        <function-ref name="request" scoped="" ref="0x2adc4d2f9c98"/>
        <function-ref name="granted" scoped="" ref="0x2adc4d2f9e20"/>
        <function-ref name="isOwner" scoped="" ref="0x2adc4d2f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2adc4d1c1080" loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2adc4d1c1080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4d1c13d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4d1c1558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2adc4d1c4a20" loc="67:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2adc4d1c4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2adc4d1c4d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2adc4d1c4400" loc="66:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2adc4d1c4400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4d1c4750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2adc4d1c1d28" loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2adc4d1c1d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2adc4d1c00a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2adc4d1c0228"/>
        <function-ref name="request" scoped="" ref="0x2adc4d1c03b0"/>
        <function-ref name="granted" scoped="" ref="0x2adc4d1c0538"/>
        <function-ref name="isOwner" scoped="" ref="0x2adc4d1c06c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x2adc4d20c830" loc="207:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x2adc4d20c830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2adc4d20cb80"/>
        <function-ref name="runTask" scoped="" ref="0x2adc4d20cd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2adc4d1bb4a0" loc="79:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2adc4d1bb4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4d1bb7f0"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4d1bb978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x2adc4d1cc888" loc="84:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x2adc4d1cc888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2adc4d1ccbd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2adc4d1ccd60"/>
        <function-ref name="request" scoped="" ref="0x2adc4d1cb020"/>
        <function-ref name="granted" scoped="" ref="0x2adc4d1cb1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2adc4d1cb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2adc4d1bce78" loc="78:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2adc4d1bce78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2adc4d1bb1f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2adc4d1bc898" loc="77:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2adc4d1bc898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4d1bcbe8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x2adc4d1cd5a8" loc="83:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x2adc4d1cd5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2adc4d1cd8f8"/>
        <function-ref name="sleep" scoped="" ref="0x2adc4d1b7de8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2adc4d1cdc08"/>
        <function-ref name="dataReady" scoped="" ref="0x2adc4d1cc020"/>
        <function-ref name="initMaster" scoped="" ref="0x2adc4d1b8020"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2adc4d1b81a8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2adc4d1b8330"/>
        <function-ref name="read" scoped="" ref="0x2adc4d1b84b8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2adc4d1b8640"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2adc4d1b87c8"/>
        <function-ref name="setClock" scoped="" ref="0x2adc4d1b8950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2adc4d1b8ad8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2adc4d1b8c60"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2adc4d1b7020"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2adc4d1b71a8"/>
        <function-ref name="write" scoped="" ref="0x2adc4d1b7330"/>
        <function-ref name="enableSpi" scoped="" ref="0x2adc4d1b74b8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2adc4d1b7640"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2adc4d1b77c8"/>
        <function-ref name="getClock" scoped="" ref="0x2adc4d1b7950"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2adc4d1b7ad8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2adc4d1cda80"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2adc4d1cdd90"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2adc4d1b7c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2adc4d1ba1c8" loc="80:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2adc4d1ba1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2adc4d1ba518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2adc4d1ba6a0"/>
        <function-ref name="request" scoped="" ref="0x2adc4d1ba828"/>
        <function-ref name="granted" scoped="" ref="0x2adc4d1ba9b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2adc4d1bab38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2adc4d1ca4f8" loc="86:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2adc4d1ca4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2adc4d1ca848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2adc4d1c8ce0" loc="85:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2adc4d1c8ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2adc4d1ca0a0"/>
        <function-ref name="userId" scoped="" ref="0x2adc4d1ca228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x2adc4d2126d8" loc="59:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x2adc4d2126d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2adc4d212a28"/>
        <function-ref name="sleep" scoped="" ref="0x2adc4d20d020"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2adc4d212d38"/>
        <function-ref name="dataReady" scoped="" ref="0x2adc4d20d1a8"/>
        <function-ref name="initMaster" scoped="" ref="0x2adc4d20f1a8"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2adc4d20f330"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2adc4d20f4b8"/>
        <function-ref name="read" scoped="" ref="0x2adc4d20f640"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2adc4d20f7c8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2adc4d20f950"/>
        <function-ref name="setClock" scoped="" ref="0x2adc4d20fad8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2adc4d20fc60"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2adc4d20fde8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2adc4d20e120"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2adc4d20e2a8"/>
        <function-ref name="write" scoped="" ref="0x2adc4d20e430"/>
        <function-ref name="enableSpi" scoped="" ref="0x2adc4d20e5b8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2adc4d20e740"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2adc4d20e8c8"/>
        <function-ref name="getClock" scoped="" ref="0x2adc4d20ea50"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2adc4d20ebd8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2adc4d212bb0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2adc4d20f020"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2adc4d20ed60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2adc4d22f958" loc="64:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2adc4d22f958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d22fca8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d22fe30"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d22e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d22e1a8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d22e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d22e4b8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d22e640"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d22e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2adc4d233648" loc="62:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2adc4d233648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d233998"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d233b20"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d233ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d233e30"/>
        <function-ref name="get" scoped="" ref="0x2adc4d231020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d2311a8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d231330"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d2314b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2adc4d234508" loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2adc4d234508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d234858"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d2349e0"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d234b68"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d234cf0"/>
        <function-ref name="get" scoped="" ref="0x2adc4d234e78"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d233030"/>
        <function-ref name="set" scoped="" ref="0x2adc4d2331b8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d233340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2adc4d232c10" loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2adc4d232c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2adc4d234020"/>
        <function-ref name="stop" scoped="" ref="0x2adc4d2341a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x2adc4d22eaf8" loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x2adc4d22eaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2adc4d22ee48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x2adc4d2385e0" loc="57:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x2adc4d2385e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2adc4d238930"/>
        <function-ref name="sleep" scoped="" ref="0x2adc4d236de8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2adc4d238c40"/>
        <function-ref name="dataReady" scoped="" ref="0x2adc4d235020"/>
        <function-ref name="initMaster" scoped="" ref="0x2adc4d237020"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2adc4d2371a8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2adc4d237330"/>
        <function-ref name="read" scoped="" ref="0x2adc4d2374b8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2adc4d237640"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2adc4d2377c8"/>
        <function-ref name="setClock" scoped="" ref="0x2adc4d237950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2adc4d237ad8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2adc4d237c60"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2adc4d236020"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2adc4d2361a8"/>
        <function-ref name="write" scoped="" ref="0x2adc4d236330"/>
        <function-ref name="enableSpi" scoped="" ref="0x2adc4d2364b8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2adc4d236640"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2adc4d2367c8"/>
        <function-ref name="getClock" scoped="" ref="0x2adc4d236950"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2adc4d236ad8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2adc4d238ab8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2adc4d238dc8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2adc4d236c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2adc4d2317d0" loc="63:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2adc4d2317d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d231b20"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d231ca8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d231e30"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d22f020"/>
        <function-ref name="get" scoped="" ref="0x2adc4d22f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d22f330"/>
        <function-ref name="set" scoped="" ref="0x2adc4d22f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d22f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2adc4d2de020" loc="76:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2adc4d2de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2adc4d2de390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2adc4d2de518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2adc4d2dd020" loc="79:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2adc4d2dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2adc4d2dd390"/>
        <function-ref name="configure" scoped="" ref="0x2adc4d2dd518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2adc4d2df200" loc="75:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2adc4d2df200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2adc4d2df570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2adc4d2df6f8"/>
        <function-ref name="request" scoped="" ref="0x2adc4d2df880"/>
        <function-ref name="granted" scoped="" ref="0x2adc4d2dfa08"/>
        <function-ref name="isOwner" scoped="" ref="0x2adc4d2dfb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2adc4d2de760" loc="77:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2adc4d2de760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2adc4d2deab0"/>
        <function-ref name="userId" scoped="" ref="0x2adc4d2dec38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2adc4dc601a8" loc="34:/opt/tinyos-2.1.0/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2adc4dc601a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4dc604f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2adc4dc60780" loc="35:/opt/tinyos-2.1.0/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2adc4dc60780"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2adc4dc60ad0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2adc4dc60c58"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2adc4dc60de0"/>
        <function-ref name="dequeue" scoped="" ref="0x2adc4dc5f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2adc4dc5d388" loc="52:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2adc4dc5d388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2adc4dc5d6f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2adc4dc5d880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2adc4dc5c3e8" loc="56:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2adc4dc5c3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2adc4dc5c758"/>
        <function-ref name="configure" scoped="" ref="0x2adc4dc5c8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2adc4dc5cb68" loc="57:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2adc4dc5cb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2adc4dc5b020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2adc4dc5b1a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2adc4dc5b330"/>
        <function-ref name="dequeue" scoped="" ref="0x2adc4dc5b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2adc4dc5e590" loc="51:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2adc4dc5e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2adc4dc5e900"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2adc4dc5ea88"/>
        <function-ref name="request" scoped="" ref="0x2adc4dc5ec10"/>
        <function-ref name="granted" scoped="" ref="0x2adc4dc5ed98"/>
        <function-ref name="isOwner" scoped="" ref="0x2adc4dc5d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2adc4dc5dac8" loc="53:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2adc4dc5dac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2adc4dc5de18"/>
        <function-ref name="userId" scoped="" ref="0x2adc4dc5c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2adc4dc5b780" loc="69:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2adc4dc5b780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2adc4dc5bad0"/>
        <function-ref name="runTask" scoped="" ref="0x2adc4dc5bc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2adc4d2d4c90" loc="45:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2adc4d2d4c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d2d3020"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d2d31a8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d2d3330"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d2d34b8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d2d3640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d2d37c8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d2d3950"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d2d3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2adc4d2d51e0" loc="40:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2adc4d2d51e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2adc4d2d5530"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2adc4d2d56b8"/>
        <function-ref name="request" scoped="" ref="0x2adc4d2d5840"/>
        <function-ref name="granted" scoped="" ref="0x2adc4d2d59c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2adc4d2d5b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x2adc4d2d4020" loc="44:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x2adc4d2d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2adc4d2d4370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2adc4d2d44f8"/>
        <function-ref name="request" scoped="" ref="0x2adc4d2d4680"/>
        <function-ref name="granted" scoped="" ref="0x2adc4d2d4808"/>
        <function-ref name="isOwner" scoped="" ref="0x2adc4d2d4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2adc4d2f5a30" loc="35:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2adc4d2f5a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2adc4d2f5d80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2adc4d2f2020"/>
        <function-ref name="led1On" scoped="" ref="0x2adc4d2f21a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2adc4d2f2330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2adc4d2f24b8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d2f2640"/>
        <function-ref name="led1Off" scoped="" ref="0x2adc4d2f27c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2adc4d2f2de8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d2f2950"/>
        <function-ref name="led0On" scoped="" ref="0x2adc4d2f2ad8"/>
        <function-ref name="led2On" scoped="" ref="0x2adc4d2f2c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2adc4d2ed9d8" loc="39:/opt/tinyos-2.1.0/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2adc4d2ed9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d2edd28"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d2ec020"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d2ec1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d2ec330"/>
        <function-ref name="get" scoped="" ref="0x2adc4d2ec4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d2ec640"/>
        <function-ref name="set" scoped="" ref="0x2adc4d2ec7c8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d2ec950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2adc4d2f1ca0" loc="35:/opt/tinyos-2.1.0/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2adc4d2f1ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4d2ee020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2adc4d2ecc68" loc="40:/opt/tinyos-2.1.0/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2adc4d2ecc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d2eb020"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d2eb1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d2eb330"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d2eb4b8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d2eb640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d2eb7c8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d2eb950"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d2ebad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2adc4d2ee298" loc="36:/opt/tinyos-2.1.0/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2adc4d2ee298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2adc4d2ee5e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2adc4d2ee770"/>
        <function-ref name="led1On" scoped="" ref="0x2adc4d2ee8f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2adc4d2eea80"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2adc4d2eec08"/>
        <function-ref name="get" scoped="" ref="0x2adc4d2eed90"/>
        <function-ref name="led1Off" scoped="" ref="0x2adc4d2ed020"/>
        <function-ref name="led2Off" scoped="" ref="0x2adc4d2ed640"/>
        <function-ref name="set" scoped="" ref="0x2adc4d2ed1a8"/>
        <function-ref name="led0On" scoped="" ref="0x2adc4d2ed330"/>
        <function-ref name="led2On" scoped="" ref="0x2adc4d2ed4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2adc4d2ebdf0" loc="41:/opt/tinyos-2.1.0/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2adc4d2ebdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d2ea170"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d2ea2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d2ea480"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d2ea608"/>
        <function-ref name="get" scoped="" ref="0x2adc4d2ea790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d2ea918"/>
        <function-ref name="set" scoped="" ref="0x2adc4d2eaaa0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d2eac28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2adc4d2efc80" loc="35:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2adc4d2efc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d300020"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d3001a8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d300330"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d3004b8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d300640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d3007c8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d300950"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d300ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2adc4d300e30" loc="36:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2adc4d300e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d2ff1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d2ff330"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d2ff4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d2ff640"/>
        <function-ref name="get" scoped="" ref="0x2adc4d2ff7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d2ff950"/>
        <function-ref name="set" scoped="" ref="0x2adc4d2ffad8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d2ffc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2adc4d32f110" loc="38:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2adc4d32f110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4d32f460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2adc4d2fe020" loc="37:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2adc4d2fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d2fe370"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d2fe4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d2fe680"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d2fe808"/>
        <function-ref name="get" scoped="" ref="0x2adc4d2fe990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d2feb18"/>
        <function-ref name="set" scoped="" ref="0x2adc4d2feca0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d2fee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2adc4d34c470" loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2adc4d34c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d34c9c0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d34cb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2adc4d375908" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2adc4d375908"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2adc4d375c58"/>
        <function-ref name="writeDone" scoped="" ref="0x2adc4d375de0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d374020"/>
        <function-ref name="beginRead" scoped="" ref="0x2adc4d3741a8"/>
        <function-ref name="readDone" scoped="" ref="0x2adc4d374330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2adc4d3569b8" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2adc4d3569b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d356d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2adc4d34f470" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2adc4d34f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d34f7c0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d34f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2adc4d34ad98" loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2adc4d34ad98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d37d170"/>
        <function-ref name="write" scoped="" ref="0x2adc4d37d2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2adc4d37d5c0" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2adc4d37d5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d37d910"/>
        <function-ref name="write" scoped="" ref="0x2adc4d37da98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2adc4d355c50" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2adc4d355c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d354020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2adc4d376470" loc="87:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2adc4d376470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d3767c0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d376948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2adc4d34e470" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2adc4d34e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d34e7c0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d34e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2adc4d34d470" loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2adc4d34d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d34d7c0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d34d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2adc4d37dd60" loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2adc4d37dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d37c0d8"/>
        <function-ref name="write" scoped="" ref="0x2adc4d37c260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2adc4d37a470" loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2adc4d37a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d37a7c0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d37a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2adc4d358430" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2adc4d358430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2adc4d358780"/>
        <function-ref name="abortRelease" scoped="" ref="0x2adc4d358908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2adc4d358a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2adc4d353638" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2adc4d353638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d353988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2adc4d353c50" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2adc4d353c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d3510d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2adc4d3513a0" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2adc4d3513a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d3516f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2adc4d354900" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2adc4d354900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d354c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2adc4d34ec10" loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2adc4d34ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d34d020"/>
        <function-ref name="write" scoped="" ref="0x2adc4d34d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2adc4d34fc10" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2adc4d34fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d34e020"/>
        <function-ref name="write" scoped="" ref="0x2adc4d34e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2adc4d3563a0" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2adc4d3563a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d3566f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2adc4d37ac10" loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2adc4d37ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d378020"/>
        <function-ref name="write" scoped="" ref="0x2adc4d3781a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2adc4d377c10" loc="86:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2adc4d377c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d376020"/>
        <function-ref name="write" scoped="" ref="0x2adc4d3761a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2adc4d37ccc8" loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2adc4d37ccc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d37b0a0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d37b228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2adc4d358d58" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2adc4d358d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d3560d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2adc4d350c50" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2adc4d350c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d34f020"/>
        <function-ref name="write" scoped="" ref="0x2adc4d34f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2adc4d34dc10" loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2adc4d34dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d34c020"/>
        <function-ref name="write" scoped="" ref="0x2adc4d34c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2adc4d376c10" loc="90:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2adc4d376c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2adc4d375020"/>
        <function-ref name="writeDone" scoped="" ref="0x2adc4d3751a8"/>
        <function-ref name="write" scoped="" ref="0x2adc4d375330"/>
        <function-ref name="beginRead" scoped="" ref="0x2adc4d3754b8"/>
        <function-ref name="readDone" scoped="" ref="0x2adc4d375640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2adc4d37c528" loc="75:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2adc4d37c528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d37c878"/>
        <function-ref name="write" scoped="" ref="0x2adc4d37ca00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2adc4d34ce10" loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2adc4d34ce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d34a1a8"/>
        <function-ref name="write" scoped="" ref="0x2adc4d34a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2adc4d355020" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2adc4d355020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d355370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2adc4d34a5f8" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2adc4d34a5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d34a948"/>
        <function-ref name="write" scoped="" ref="0x2adc4d34aad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2adc4d3596a8" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2adc4d3596a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2adc4d3599f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2adc4d359b80"/>
        <function-ref name="request" scoped="" ref="0x2adc4d359d08"/>
        <function-ref name="granted" scoped="" ref="0x2adc4d358020"/>
        <function-ref name="isOwner" scoped="" ref="0x2adc4d3581a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2adc4d3519b8" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2adc4d3519b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d351d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2adc4d350638" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2adc4d350638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d350988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2adc4d377470" loc="85:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2adc4d377470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d3777c0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d377948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2adc4d378c10" loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2adc4d378c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d377020"/>
        <function-ref name="write" scoped="" ref="0x2adc4d3771a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2adc4d353020" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2adc4d353020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d353370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2adc4d378470" loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2adc4d378470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d3787c0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d378948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2adc4d355638" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2adc4d355638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d355988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2adc4d3542e8" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2adc4d3542e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d354638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2adc4d350020" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2adc4d350020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d350370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2adc4d37b4f0" loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2adc4d37b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d37b840"/>
        <function-ref name="write" scoped="" ref="0x2adc4d37b9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2adc4d37bc90" loc="78:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2adc4d37bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d37a020"/>
        <function-ref name="write" scoped="" ref="0x2adc4d37a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2adc4d397a88" loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2adc4d397a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d396020"/>
        <function-ref name="write" scoped="" ref="0x2adc4d3961a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2adc4d38b100" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2adc4d38b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2adc4d38b450"/>
        <function-ref name="writeDone" scoped="" ref="0x2adc4d38b5d8"/>
        <function-ref name="write" scoped="" ref="0x2adc4d38b760"/>
        <function-ref name="beginRead" scoped="" ref="0x2adc4d38b8e8"/>
        <function-ref name="readDone" scoped="" ref="0x2adc4d38ba70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2adc4d36c020" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2adc4d36c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d36c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2adc4d366a88" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2adc4d366a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d366dd8"/>
        <function-ref name="write" scoped="" ref="0x2adc4d365020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2adc4d394470" loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2adc4d394470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d3947c0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d394948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2adc4d394c10" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2adc4d394c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d393020"/>
        <function-ref name="write" scoped="" ref="0x2adc4d3931a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2adc4d36b2e8" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2adc4d36b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d36b638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2adc4d38dc10" loc="87:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2adc4d38dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d38c020"/>
        <function-ref name="write" scoped="" ref="0x2adc4d38c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2adc4d365a88" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2adc4d365a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d365dd8"/>
        <function-ref name="write" scoped="" ref="0x2adc4d364020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2adc4d364a88" loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2adc4d364a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d364dd8"/>
        <function-ref name="write" scoped="" ref="0x2adc4d397020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2adc4d393470" loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2adc4d393470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d3937c0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d393948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2adc4d391c10" loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2adc4d391c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d390020"/>
        <function-ref name="write" scoped="" ref="0x2adc4d3901a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2adc4d36f8c8" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2adc4d36f8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2adc4d36fc18"/>
        <function-ref name="abortRelease" scoped="" ref="0x2adc4d36fda0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2adc4d36e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2adc4d36ac50" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2adc4d36ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d369020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2adc4d3692e8" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2adc4d3692e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d369738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2adc4d369a00" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2adc4d369a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d369d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2adc4d36a020" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2adc4d36a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d36a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2adc4d3642e8" loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2adc4d3642e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d364638"/>
        <function-ref name="write" scoped="" ref="0x2adc4d3647c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2adc4d3652e8" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2adc4d3652e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d365638"/>
        <function-ref name="write" scoped="" ref="0x2adc4d3657c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2adc4d36e900" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2adc4d36e900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d36ec50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2adc4d390470" loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2adc4d390470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d3907c0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d390948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2adc4d38d470" loc="86:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2adc4d38d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d38d7c0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d38d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2adc4d392470" loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2adc4d392470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d3927c0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d392948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2adc4d36e2e8" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2adc4d36e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d36e638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2adc4d3662e8" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2adc4d3662e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d366638"/>
        <function-ref name="write" scoped="" ref="0x2adc4d3667c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2adc4d3972e8" loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2adc4d3972e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d397638"/>
        <function-ref name="write" scoped="" ref="0x2adc4d3977c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2adc4d38c470" loc="90:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2adc4d38c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2adc4d38c7c0"/>
        <function-ref name="writeDone" scoped="" ref="0x2adc4d38c948"/>
        <function-ref name="write" scoped="" ref="0x2adc4d38cad0"/>
        <function-ref name="beginRead" scoped="" ref="0x2adc4d38cc58"/>
        <function-ref name="readDone" scoped="" ref="0x2adc4d38cde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2adc4d393c10" loc="75:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2adc4d393c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d392020"/>
        <function-ref name="write" scoped="" ref="0x2adc4d3921a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2adc4d396470" loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2adc4d396470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d3967c0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d396948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2adc4d36c638" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2adc4d36c638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d36c988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2adc4d396c10" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2adc4d396c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d394020"/>
        <function-ref name="write" scoped="" ref="0x2adc4d3941a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2adc4d370c30" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2adc4d370c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2adc4d36f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2adc4d36f1a8"/>
        <function-ref name="request" scoped="" ref="0x2adc4d36f330"/>
        <function-ref name="granted" scoped="" ref="0x2adc4d36f4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2adc4d36f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2adc4d368060" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2adc4d368060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d3683b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2adc4d368c90" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2adc4d368c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d366020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2adc4d38fc10" loc="85:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2adc4d38fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d38d020"/>
        <function-ref name="write" scoped="" ref="0x2adc4d38d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2adc4d38f470" loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2adc4d38f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d38f7c0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d38f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2adc4d36a638" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2adc4d36a638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d36a988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2adc4d390c10" loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2adc4d390c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d38f020"/>
        <function-ref name="write" scoped="" ref="0x2adc4d38f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2adc4d36cc50" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2adc4d36cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d36b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2adc4d36b900" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2adc4d36b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d36bc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2adc4d368678" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2adc4d368678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d3689c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2adc4d392c10" loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2adc4d392c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d391020"/>
        <function-ref name="write" scoped="" ref="0x2adc4d3911a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2adc4d391470" loc="78:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2adc4d391470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d3917c0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d391948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2adc4d383768" loc="43:/opt/tinyos-2.1.0/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2adc4d383768"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2adc4d383ab8"/>
        <function-ref name="changed" scoped="" ref="0x2adc4d383c40"/>
        <function-ref name="amGroup" scoped="" ref="0x2adc4d383dc8"/>
        <function-ref name="setAddress" scoped="" ref="0x2adc4d382020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2adc4d39e780" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2adc4d39e780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2adc4d39ead0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2adc4d39ec58"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2adc4d39ede0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2adc4d39c020"/>
        <function-ref name="setCca" scoped="" ref="0x2adc4d39c1a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2adc4d39c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2adc4d399410" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x2adc4d399410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2adc4d399760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x2adc4d39fae0" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x2adc4d39fae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4d39fe30"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4d39e020"/>
        <function-ref name="modify" scoped="" ref="0x2adc4d39e1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4d39e330"/>
        <function-ref name="resend" scoped="" ref="0x2adc4d39e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2adc4d39f330" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2adc4d39f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2adc4d39f680"/>
        <function-ref name="stop" scoped="" ref="0x2adc4d39f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2adc4d399b18" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x2adc4d399b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2adc4d399e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2adc4d3e6020" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2adc4d3e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2adc4d3e6370"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2adc4d3e64f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2adc4d3e6680"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2adc4d3e6808"/>
        <function-ref name="setCca" scoped="" ref="0x2adc4d3e6990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2adc4d3e6b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2adc4d3df8c0" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2adc4d3df8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="T32khz" ref="0x2adc4c940960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2adc4d3ded40"/>
        <function-ref name="clear" scoped="" ref="0x2adc4d3dc458"/>
        <function-ref name="isValid" scoped="" ref="0x2adc4d3de660"/>
        <function-ref name="set" scoped="" ref="0x2adc4d3dcb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2adc4d3e5020" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x2adc4d3e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2adc4d3e5370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x2adc4d402c18" loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2adc4d402c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d401020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x2adc4d3da548" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x2adc4d3da548"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2adc4d3da898"/>
        <function-ref name="disable" scoped="" ref="0x2adc4d3daa20"/>
        <function-ref name="captured" scoped="" ref="0x2adc4d3daba8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2adc4d3dad30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x2adc4d3e4140" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x2adc4d3e4140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="T32khz" ref="0x2adc4c940960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2adc4d3e1918"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d3e3980"/>
        <function-ref name="startAt" scoped="" ref="0x2adc4d3e1310"/>
        <function-ref name="isRunning" scoped="" ref="0x2adc4d3e3e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2adc4d3e1da0"/>
        <function-ref name="start" scoped="" ref="0x2adc4d3e3020"/>
        <function-ref name="stop" scoped="" ref="0x2adc4d3e34f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2adc4d3e0280" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2adc4d3e0280"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2adc4d3e05d0"/>
        <function-ref name="getRssi" scoped="" ref="0x2adc4d3e0758"/>
        <function-ref name="getPower" scoped="" ref="0x2adc4d3e08e0"/>
        <function-ref name="getLqi" scoped="" ref="0x2adc4d3e0a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x2adc4d404d20" loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2adc4d404d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d4030a0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d403228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2adc4d4035c0" loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2adc4d4035c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d403910"/>
        <function-ref name="write" scoped="" ref="0x2adc4d403a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x2adc4d3fbe10" loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2adc4d3fbe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2adc4d3ff1a8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2adc4d3ff330"/>
        <function-ref name="sfd" scoped="" ref="0x2adc4d3ff4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2adc4d3e7220" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2adc4d3e7220"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4d3e7570"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4d3e76f8"/>
        <function-ref name="modify" scoped="" ref="0x2adc4d3e7880"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4d3e7a08"/>
        <function-ref name="resend" scoped="" ref="0x2adc4d3e7b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x2adc4d3cf4c8" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2adc4d3cf4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2adc4d3cf818"/>
        <function-ref name="abortRelease" scoped="" ref="0x2adc4d3cf9a0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2adc4d3cfb28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x2adc4d4013c0" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2adc4d4013c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d401710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2adc4d3d2368" loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2adc4d3d2368"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d3d26b8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d3d2840"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d3d29c8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d3d2b50"/>
        <function-ref name="get" scoped="" ref="0x2adc4d3d2cd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d3d2e60"/>
        <function-ref name="set" scoped="" ref="0x2adc4d3d1020"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d3d11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2adc4d3e8348" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2adc4d3e8348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4d3e8698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2adc4d3e0d98" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2adc4d3e0d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2adc4d3df170"/>
        <function-ref name="getMetadata" scoped="" ref="0x2adc4d3df2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2adc4d3d3850" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2adc4d3d3850"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2adc4d3d3ba0"/>
        <function-ref name="isSet" scoped="" ref="0x2adc4d3d3d28"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4d3da020"/>
        <function-ref name="set" scoped="" ref="0x2adc4d3da1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2adc4d401ac0" loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2adc4d401ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d4000a0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d400228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2adc4d3d06c0" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2adc4d3d06c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2adc4d3d0a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2adc4d3d0b98"/>
        <function-ref name="request" scoped="" ref="0x2adc4d3d0d20"/>
        <function-ref name="granted" scoped="" ref="0x2adc4d3cf020"/>
        <function-ref name="isOwner" scoped="" ref="0x2adc4d3cf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x2adc4d3d90e0" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2adc4d3d90e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d3d9530"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d3d96b8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d3d9840"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d3d99c8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d3d9b50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d3d9cd8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d3d9e60"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d3d2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2adc4d403e10" loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2adc4d403e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d4021a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x2adc4d3d14f0" loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x2adc4d3d14f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d3d1840"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d3d19c8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d3d1b50"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d3d1cd8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d3d1e60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d3d0020"/>
        <function-ref name="set" scoped="" ref="0x2adc4d3d01a8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d3d0330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2adc4d3ff770" loc="75:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2adc4d3ff770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2adc4d3ffac0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2adc4d3ffc48"/>
        <function-ref name="led1On" scoped="" ref="0x2adc4d3ffdd0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2adc4d3fe020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2adc4d3fe1a8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d3fe330"/>
        <function-ref name="led1Off" scoped="" ref="0x2adc4d3fe4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x2adc4d3fead8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d3fe640"/>
        <function-ref name="led0On" scoped="" ref="0x2adc4d3fe7c8"/>
        <function-ref name="led2On" scoped="" ref="0x2adc4d3fe950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2adc4d3e8988" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2adc4d3e8988"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2adc4d3e8cd8"/>
        <function-ref name="stop" scoped="" ref="0x2adc4d3e8e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x2adc4d404020" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2adc4d404020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2adc4d404370"/>
        <function-ref name="writeDone" scoped="" ref="0x2adc4d4044f8"/>
        <function-ref name="write" scoped="" ref="0x2adc4d404680"/>
        <function-ref name="beginRead" scoped="" ref="0x2adc4d404808"/>
        <function-ref name="readDone" scoped="" ref="0x2adc4d404990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x2adc4d402528" loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2adc4d402528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d402878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2adc4d3e5768" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x2adc4d3e5768"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2adc4d3e5ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2adc4d47ac90" loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2adc4d47ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d4793e8"/>
        <function-ref name="write" scoped="" ref="0x2adc4d479570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2adc4d4a6470" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2adc4d4a6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2adc4d4a67c0"/>
        <function-ref name="writeDone" scoped="" ref="0x2adc4d4a6948"/>
        <function-ref name="write" scoped="" ref="0x2adc4d4a6ad0"/>
        <function-ref name="beginRead" scoped="" ref="0x2adc4d4a6c58"/>
        <function-ref name="readDone" scoped="" ref="0x2adc4d4a6de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2adc4d483368" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2adc4d483368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d4836b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2adc4d47ddd8" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2adc4d47ddd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d47c170"/>
        <function-ref name="write" scoped="" ref="0x2adc4d47c2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2adc4d4777c0" loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2adc4d4777c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d477b10"/>
        <function-ref name="write" scoped="" ref="0x2adc4d477c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2adc4d476020" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2adc4d476020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d476370"/>
        <function-ref name="write" scoped="" ref="0x2adc4d4764f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2adc4d482638" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2adc4d482638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d482988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2adc4d4a7020" loc="87:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2adc4d4a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d4a7370"/>
        <function-ref name="write" scoped="" ref="0x2adc4d4a74f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2adc4d47cd60" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2adc4d47cd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d47b0d8"/>
        <function-ref name="write" scoped="" ref="0x2adc4d47b260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2adc4d47bcc8" loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2adc4d47bcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d47a0a0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d47a228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2adc4d4767c0" loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2adc4d4767c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d476b10"/>
        <function-ref name="write" scoped="" ref="0x2adc4d476c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2adc4d473020" loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2adc4d473020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d473370"/>
        <function-ref name="write" scoped="" ref="0x2adc4d4734f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2adc4d486d38" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2adc4d486d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2adc4d4850d8"/>
        <function-ref name="abortRelease" scoped="" ref="0x2adc4d485260"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2adc4d4853e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2adc4d480020" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2adc4d480020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d480370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2adc4d480638" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2adc4d480638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d480a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2adc4d480d50" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2adc4d480d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d47e0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2adc4d4812e8" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2adc4d4812e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d481638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2adc4d47b528" loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2adc4d47b528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d47b878"/>
        <function-ref name="write" scoped="" ref="0x2adc4d47ba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2adc4d47c5c0" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2adc4d47c5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d47c910"/>
        <function-ref name="write" scoped="" ref="0x2adc4d47ca98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2adc4d485cc8" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2adc4d485cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d4830a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2adc4d4737c0" loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2adc4d4737c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d473b10"/>
        <function-ref name="write" scoped="" ref="0x2adc4d473c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2adc4d4a87c0" loc="86:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2adc4d4a87c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d4a8b10"/>
        <function-ref name="write" scoped="" ref="0x2adc4d4a8c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2adc4d4757c0" loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2adc4d4757c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d475b10"/>
        <function-ref name="write" scoped="" ref="0x2adc4d475c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2adc4d4856b0" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2adc4d4856b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d485a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2adc4d47d638" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2adc4d47d638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d47d988"/>
        <function-ref name="write" scoped="" ref="0x2adc4d47db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2adc4d47a4f0" loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2adc4d47a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d47a840"/>
        <function-ref name="write" scoped="" ref="0x2adc4d47a9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2adc4d4a77c0" loc="90:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2adc4d4a77c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2adc4d4a7b10"/>
        <function-ref name="writeDone" scoped="" ref="0x2adc4d4a7c98"/>
        <function-ref name="write" scoped="" ref="0x2adc4d4a7e20"/>
        <function-ref name="beginRead" scoped="" ref="0x2adc4d4a6020"/>
        <function-ref name="readDone" scoped="" ref="0x2adc4d4a61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2adc4d475020" loc="75:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2adc4d475020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d475370"/>
        <function-ref name="write" scoped="" ref="0x2adc4d4754f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2adc4d479838" loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2adc4d479838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d479b88"/>
        <function-ref name="write" scoped="" ref="0x2adc4d479d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2adc4d483980" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2adc4d483980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d483cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2adc4d477020" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2adc4d477020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d477370"/>
        <function-ref name="write" scoped="" ref="0x2adc4d4774f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2adc4d486140" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2adc4d486140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2adc4d486490"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2adc4d486618"/>
        <function-ref name="request" scoped="" ref="0x2adc4d4867a0"/>
        <function-ref name="granted" scoped="" ref="0x2adc4d486928"/>
        <function-ref name="isOwner" scoped="" ref="0x2adc4d486ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2adc4d47e3a0" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2adc4d47e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d47e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2adc4d47d020" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2adc4d47d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d47d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2adc4d4a8020" loc="85:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2adc4d4a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d4a8370"/>
        <function-ref name="write" scoped="" ref="0x2adc4d4a84f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2adc4d4aa7c0" loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2adc4d4aa7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d4aab10"/>
        <function-ref name="write" scoped="" ref="0x2adc4d4aac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2adc4d481900" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2adc4d481900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d481c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2adc4d4aa020" loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2adc4d4aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d4aa370"/>
        <function-ref name="write" scoped="" ref="0x2adc4d4aa4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2adc4d482020" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2adc4d482020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d482370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2adc4d482c50" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2adc4d482c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d481020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2adc4d47e9b8" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2adc4d47e9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d47ed08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2adc4d474020" loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2adc4d474020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d474370"/>
        <function-ref name="write" scoped="" ref="0x2adc4d4744f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2adc4d4747c0" loc="78:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2adc4d4747c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d474b10"/>
        <function-ref name="write" scoped="" ref="0x2adc4d474c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2adc4d49c080" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2adc4d49c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2adc4d49c3d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2adc4d49c558"/>
        <function-ref name="sfd" scoped="" ref="0x2adc4d49c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2adc4d49c9b0" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2adc4d49c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2adc4d49cd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2adc4d49b158" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x2adc4d49b158"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2adc4d49b4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2adc4d49f838" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2adc4d49f838"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2adc4d49fb88"/>
        <function-ref name="stop" scoped="" ref="0x2adc4d49fd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x2adc4d494e30" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x2adc4d494e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d4931a8"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d493330"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d4934b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d493640"/>
        <function-ref name="get" scoped="" ref="0x2adc4d4937c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d493950"/>
        <function-ref name="set" scoped="" ref="0x2adc4d493ad8"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d493c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2adc4d4c6b30" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2adc4d4c6b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2adc4d4c6e80"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2adc4d4c5030"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2adc4d4c51b8"/>
        <function-ref name="syncDone" scoped="" ref="0x2adc4d4c5340"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2adc4d4c54c8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2adc4d4c5650"/>
        <function-ref name="setChannel" scoped="" ref="0x2adc4d4c57d8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2adc4d4c5960"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2adc4d4c5ae8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2adc4d4c5c70"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2adc4d4c5df8"/>
        <function-ref name="sync" scoped="" ref="0x2adc4d4c4020"/>
        <function-ref name="getChannel" scoped="" ref="0x2adc4d4c41a8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2adc4d4c4430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x2adc4d4b42a0" loc="115:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x2adc4d4b42a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2adc4d4b45f0"/>
        <function-ref name="runTask" scoped="" ref="0x2adc4d4b4778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x2adc4d492020" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x2adc4d492020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d492370"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d4924f8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d492680"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d492808"/>
        <function-ref name="get" scoped="" ref="0x2adc4d492990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d492b18"/>
        <function-ref name="set" scoped="" ref="0x2adc4d492ca0"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d492e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2adc4d4c49f8" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2adc4d4c49f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="T32khz" ref="0x2adc4c940960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2adc4d4c3e60"/>
        <function-ref name="clear" scoped="" ref="0x2adc4d4c1568"/>
        <function-ref name="isValid" scoped="" ref="0x2adc4d4c3780"/>
        <function-ref name="set" scoped="" ref="0x2adc4d4c1c48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2adc4d4c7778" loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2adc4d4c7778"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2adc4d4c7ac8"/>
        <function-ref name="getRssi" scoped="" ref="0x2adc4d4c7c50"/>
        <function-ref name="getPower" scoped="" ref="0x2adc4d4c7dd8"/>
        <function-ref name="getLqi" scoped="" ref="0x2adc4d4c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2adc4d4974b8" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2adc4d4974b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2adc4d497808"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2adc4d497990"/>
        <function-ref name="sfd" scoped="" ref="0x2adc4d497b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x2adc4d48f830" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2adc4d48f830"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d48fb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2adc4d496c10" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2adc4d496c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2adc4d494020"/>
        <function-ref name="isInput" scoped="" ref="0x2adc4d4941a8"/>
        <function-ref name="toggle" scoped="" ref="0x2adc4d494330"/>
        <function-ref name="isOutput" scoped="" ref="0x2adc4d4944b8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d494640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2adc4d4947c8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d494950"/>
        <function-ref name="clr" scoped="" ref="0x2adc4d494ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2adc4d498638" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2adc4d498638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4d498988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2adc4d4c6350" loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2adc4d4c6350"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2adc4d4c66a0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2adc4d4c6828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2adc4d497de8" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2adc4d497de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2adc4d496170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2adc4d491db0" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2adc4d491db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2adc4d490170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2adc4d4902f8"/>
        <function-ref name="request" scoped="" ref="0x2adc4d490480"/>
        <function-ref name="granted" scoped="" ref="0x2adc4d490608"/>
        <function-ref name="isOwner" scoped="" ref="0x2adc4d490790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x2adc4d490b00" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2adc4d490b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2adc4d490e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2adc4d48f020"/>
        <function-ref name="write" scoped="" ref="0x2adc4d48f1a8"/>
        <function-ref name="beginRead" scoped="" ref="0x2adc4d48f330"/>
        <function-ref name="readDone" scoped="" ref="0x2adc4d48f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2adc4d496578" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x2adc4d496578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2adc4d4968c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2adc4d4c0480" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2adc4d4c0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2adc4d4c07d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2adc4d4c0958"/>
        <function-ref name="led1On" scoped="" ref="0x2adc4d4c0ae0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2adc4d4c0c68"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2adc4d4c0df0"/>
        <function-ref name="get" scoped="" ref="0x2adc4d4bf020"/>
        <function-ref name="led1Off" scoped="" ref="0x2adc4d4bf1a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2adc4d4bf7c8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d4bf330"/>
        <function-ref name="led0On" scoped="" ref="0x2adc4d4bf4b8"/>
        <function-ref name="led2On" scoped="" ref="0x2adc4d4bf640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x2adc4d491238" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2adc4d491238"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2adc4d491588"/>
        <function-ref name="disable" scoped="" ref="0x2adc4d491710"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2adc4d491898"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2adc4d491a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x2adc4d4c7020" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2adc4d4c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d4c7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2adc4d498c78" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2adc4d498c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2adc4d497020"/>
        <function-ref name="stop" scoped="" ref="0x2adc4d4971a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2adc4d50edf8" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2adc4d50edf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2adc4d50d170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2adc4d50f020" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2adc4d50f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2adc4d50f370"/>
        <function-ref name="getRssi" scoped="" ref="0x2adc4d50f4f8"/>
        <function-ref name="getPower" scoped="" ref="0x2adc4d50f680"/>
        <function-ref name="getLqi" scoped="" ref="0x2adc4d50f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2adc4d50d808" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2adc4d50d808"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="T32khz" ref="0x2adc4c940960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2adc4d50cc78"/>
        <function-ref name="clear" scoped="" ref="0x2adc4d50a380"/>
        <function-ref name="isValid" scoped="" ref="0x2adc4d50c598"/>
        <function-ref name="set" scoped="" ref="0x2adc4d50aa60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2adc4d50e620" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2adc4d50e620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2adc4d50e970"/>
        <function-ref name="getMetadata" scoped="" ref="0x2adc4d50eaf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2adc4d505190" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2adc4d505190"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2adc4d5054e0"/>
        <function-ref name="isSet" scoped="" ref="0x2adc4d505668"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4d5057f0"/>
        <function-ref name="set" scoped="" ref="0x2adc4d505978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2adc4d509670" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2adc4d509670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c941e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2adc4c9401f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2adc4d508ad0"/>
        <function-ref name="clear" scoped="" ref="0x2adc4d5061f0"/>
        <function-ref name="isValid" scoped="" ref="0x2adc4d5083f0"/>
        <function-ref name="set" scoped="" ref="0x2adc4d5068d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2adc4d50fba0" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2adc4d50fba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2adc4d50e020"/>
        <function-ref name="noAck" scoped="" ref="0x2adc4d50e1a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2adc4d50e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2adc4d53a7f8" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2adc4d53a7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2adc4d53ab48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2adc4d504918" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2adc4d504918"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2adc4d504c68"/>
        <function-ref name="getRssi" scoped="" ref="0x2adc4d504df0"/>
        <function-ref name="getPower" scoped="" ref="0x2adc4d53b020"/>
        <function-ref name="getLqi" scoped="" ref="0x2adc4d53b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2adc4d5307a0" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2adc4d5307a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2adc4d530af0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2adc4d530c78"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4d530e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4d52f020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2adc4d52f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2adc4d538218" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2adc4d538218"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="T32khz" ref="0x2adc4c940960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2adc4d537700"/>
        <function-ref name="clear" scoped="" ref="0x2adc4d537de0"/>
        <function-ref name="isValid" scoped="" ref="0x2adc4d537020"/>
        <function-ref name="set" scoped="" ref="0x2adc4d5364f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2adc4d53a020" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2adc4d53a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2adc4d53a370"/>
        <function-ref name="getMetadata" scoped="" ref="0x2adc4d53a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2adc4d532bd0" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2adc4d532bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2adc4d530020"/>
        <function-ref name="isSet" scoped="" ref="0x2adc4d5301a8"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4d530330"/>
        <function-ref name="set" scoped="" ref="0x2adc4d5304b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2adc4d52ca50" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x2adc4d52ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="T32khz" ref="0x2adc4c940960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2adc4d52e658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2adc4d52ece8" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2adc4d52ece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c941e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2adc4c9401f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2adc4d52d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2adc4d534130" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2adc4d534130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c941e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2adc4c9401f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2adc4d533588"/>
        <function-ref name="clear" scoped="" ref="0x2adc4d533c68"/>
        <function-ref name="isValid" scoped="" ref="0x2adc4d534e80"/>
        <function-ref name="set" scoped="" ref="0x2adc4d532380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2adc4d53b540" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2adc4d53b540"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2adc4d53b890"/>
        <function-ref name="noAck" scoped="" ref="0x2adc4d53ba18"/>
        <function-ref name="wasAcked" scoped="" ref="0x2adc4d53bba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2adc4d56ac38" loc="37:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2adc4d56ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="T32khz" ref="0x2adc4c940960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2adc4d569820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2adc4d569e48" loc="38:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2adc4d569e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c940608"/>
            <typename><typedef-ref name="T32khz" ref="0x2adc4c940960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2adc4d55ebe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2adc4d55d548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2adc4d55d0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2adc4d55d9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2adc4d589a98" loc="35:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2adc4d589a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c941e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2adc4c9401f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2adc4d588d60"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d593470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2adc4d5881c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2adc4d593d10"/>
        <function-ref name="getdt" scoped="" ref="0x2adc4d586648"/>
        <function-ref name="gett0" scoped="" ref="0x2adc4d5861f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2adc4d5938c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2adc4d594620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2adc4d588790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2adc4d594ac0"/>
        <function-ref name="stop" scoped="" ref="0x2adc4d593020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2adc4d586c08" loc="36:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2adc4d586c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c941e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2adc4c9401f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2adc4d585820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2adc4d55b518" loc="34:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2adc4d55b518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4d55b868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2adc4d57a0f0" loc="29:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2adc4d57a0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c941e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2adc4c9401f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2adc4d57ae40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2adc4d579798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2adc4d579310"/>
        <function-ref name="overflow" scoped="" ref="0x2adc4d579c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2adc4d57f2c0" loc="27:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2adc4d57f2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4d57f610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2adc4d57fc38" loc="28:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2adc4d57fc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c941e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2adc4c9401f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2adc4d57b410"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d57d4a8"/>
        <function-ref name="startAt" scoped="" ref="0x2adc4d57ddb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2adc4d57d930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2adc4d57b898"/>
        <function-ref name="start" scoped="" ref="0x2adc4d57e9f0"/>
        <function-ref name="stop" scoped="" ref="0x2adc4d57d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2adc4d605020" loc="26:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2adc4d605020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c941e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2adc4c9401f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2adc4d603690"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d6046f8"/>
        <function-ref name="startAt" scoped="" ref="0x2adc4d603088"/>
        <function-ref name="isRunning" scoped="" ref="0x2adc4d604b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2adc4d603b18"/>
        <function-ref name="start" scoped="" ref="0x2adc4d605d70"/>
        <function-ref name="stop" scoped="" ref="0x2adc4d604270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2adc4d6067d8" loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2adc4d6067d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2adc4c8c5d88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2adc4c8c5d88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4d606b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2adc4d601128" loc="27:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2adc4d601128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c941e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2adc4c9401f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2adc4d601e78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2adc4d6007b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2adc4d600330"/>
        <function-ref name="overflow" scoped="" ref="0x2adc4d600c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2adc4dd2bb60" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2adc4dd2bb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2adc4dd2a020"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2adc4dd2a1a8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2adc4dd2a330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2adc4dd2a4b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2adc4dd2a640"/>
        <function-ref name="setControl" scoped="" ref="0x2adc4dd2a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2adc4dcdc8e8" loc="26:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2adc4dcdc8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c941e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2adc4c9401f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2adc4dd33020"/>
        <function-ref name="fired" scoped="" ref="0x2adc4dd34020"/>
        <function-ref name="startAt" scoped="" ref="0x2adc4dd34930"/>
        <function-ref name="isRunning" scoped="" ref="0x2adc4dd344a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2adc4dd334a8"/>
        <function-ref name="start" scoped="" ref="0x2adc4dd35660"/>
        <function-ref name="stop" scoped="" ref="0x2adc4dd35b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2adc4dcdc140" loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2adc4dcdc140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4dcdc490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2adc4dd33a90" loc="27:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2adc4dd33a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c941e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2adc4c9401f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2adc4dd31828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2adc4dd30190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2adc4dd31cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2adc4dd30618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2adc4dd26bb0" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2adc4dd26bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2adc4dd25020"/>
        <function-ref name="compareBusy" scoped="" ref="0x2adc4dd251a8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2adc4dd25330"/>
        <function-ref name="countBusy" scoped="" ref="0x2adc4dd254b8"/>
        <function-ref name="getAssr" scoped="" ref="0x2adc4dd25640"/>
        <function-ref name="setAssr" scoped="" ref="0x2adc4dd257c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2adc4dd2ab58" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2adc4dd2ab58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2adc4dd26310"/>
        <function-ref name="fired" scoped="" ref="0x2adc4dd270c0"/>
        <function-ref name="get" scoped="" ref="0x2adc4dd29728"/>
        <function-ref name="reset" scoped="" ref="0x2adc4dd27548"/>
        <function-ref name="isOn" scoped="" ref="0x2adc4dd26798"/>
        <function-ref name="set" scoped="" ref="0x2adc4dd29bb0"/>
        <function-ref name="start" scoped="" ref="0x2adc4dd279d0"/>
        <function-ref name="stop" scoped="" ref="0x2adc4dd27e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2adc4dd30b98" loc="30:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2adc4dd30b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2adc4dd2cdb8"/>
        <function-ref name="test" scoped="" ref="0x2adc4dd2c4a8"/>
        <function-ref name="get" scoped="" ref="0x2adc4dd2f760"/>
        <function-ref name="setScale" scoped="" ref="0x2adc4dd2b270"/>
        <function-ref name="getScale" scoped="" ref="0x2adc4dd2b748"/>
        <function-ref name="reset" scoped="" ref="0x2adc4dd2e580"/>
        <function-ref name="overflow" scoped="" ref="0x2adc4dd2e0f8"/>
        <function-ref name="isOn" scoped="" ref="0x2adc4dd2c930"/>
        <function-ref name="set" scoped="" ref="0x2adc4dd2fbe8"/>
        <function-ref name="start" scoped="" ref="0x2adc4dd2ea08"/>
        <function-ref name="stop" scoped="" ref="0x2adc4dd2c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2adc4d64c5e8" loc="63:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2adc4d64c5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2adc4d64c938"/>
        <function-ref name="runTask" scoped="" ref="0x2adc4d64cac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2adc4d611648" loc="38:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2adc4d611648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c941e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2adc4c9401f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2adc4d64ecc0"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d64fd50"/>
        <function-ref name="startAt" scoped="" ref="0x2adc4d64e6b8"/>
        <function-ref name="isRunning" scoped="" ref="0x2adc4d64e230"/>
        <function-ref name="getAlarm" scoped="" ref="0x2adc4d64c190"/>
        <function-ref name="start" scoped="" ref="0x2adc4d64f3f0"/>
        <function-ref name="stop" scoped="" ref="0x2adc4d64f8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2adc4d616290" loc="37:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2adc4d616290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c941e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2adc4c9401f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2adc4d6125f0"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d615ba8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2adc4d6148c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2adc4d614470"/>
        <function-ref name="getdt" scoped="" ref="0x2adc4d611020"/>
        <function-ref name="gett0" scoped="" ref="0x2adc4d612a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2adc4d614020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2adc4d616dd8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2adc4d612020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2adc4d6152b8"/>
        <function-ref name="stop" scoped="" ref="0x2adc4d615758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2adc4d67e618" loc="60:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2adc4d67e618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2adc4d67e968"/>
        <function-ref name="runTask" scoped="" ref="0x2adc4d67eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2adc4d6835a0" loc="38:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2adc4d6835a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c941e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2adc4c9401f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2adc4d67f8f0"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d681020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2adc4d681d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2adc4d6818c0"/>
        <function-ref name="getdt" scoped="" ref="0x2adc4d67e1c0"/>
        <function-ref name="gett0" scoped="" ref="0x2adc4d67fd40"/>
        <function-ref name="isRunning" scoped="" ref="0x2adc4d681470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2adc4d682118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2adc4d67f320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2adc4d6825b8"/>
        <function-ref name="stop" scoped="" ref="0x2adc4d682a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2adc4d6890c8" loc="37:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2adc4d6890c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c941e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2adc4c9401f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2adc4d685610"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d688a48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2adc4d686900"/>
        <function-ref name="isOneShot" scoped="" ref="0x2adc4d686490"/>
        <function-ref name="getdt" scoped="" ref="0x2adc4d683020"/>
        <function-ref name="gett0" scoped="" ref="0x2adc4d685a80"/>
        <function-ref name="isRunning" scoped="" ref="0x2adc4d686020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2adc4d689c30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2adc4d685020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2adc4d688118"/>
        <function-ref name="stop" scoped="" ref="0x2adc4d6885d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2adc4d67cc38" loc="37:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2adc4d67cc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c941e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2adc4c9401f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2adc4d67b820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2adc4d67be48" loc="38:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2adc4d67be48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c941e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2adc4c9401f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2adc4d679be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2adc4d678548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2adc4d6780c0"/>
        <function-ref name="overflow" scoped="" ref="0x2adc4d6789d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2adc4d673420" loc="37:/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2adc4d673420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c941e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2adc4c9401f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2adc4d69f6c8"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d6a2db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2adc4d6a0ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2adc4d6a0688"/>
        <function-ref name="getdt" scoped="" ref="0x2adc4d69e020"/>
        <function-ref name="gett0" scoped="" ref="0x2adc4d69fb18"/>
        <function-ref name="isRunning" scoped="" ref="0x2adc4d6a0238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2adc4d6a2020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2adc4d69f0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2adc4d6a24c0"/>
        <function-ref name="stop" scoped="" ref="0x2adc4d6a2960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2adc4d6aa7d8" loc="38:/opt/tinyos-2.1.0/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2adc4d6aa7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c941e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2adc4c9401f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2adc4d6a6a18"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d6a7158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2adc4d6a7e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2adc4d6a79f8"/>
        <function-ref name="getdt" scoped="" ref="0x2adc4d6a52e8"/>
        <function-ref name="gett0" scoped="" ref="0x2adc4d6a6e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2adc4d6a75a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2adc4d6a9370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2adc4d6a6448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2adc4d6a9810"/>
        <function-ref name="stop" scoped="" ref="0x2adc4d6a9cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2adc4d6cfc90" loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2adc4d6cfc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d6ce3e8"/>
        <function-ref name="write" scoped="" ref="0x2adc4d6ce570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2adc4d6c4470" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2adc4d6c4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2adc4d6c47c0"/>
        <function-ref name="writeDone" scoped="" ref="0x2adc4d6c4948"/>
        <function-ref name="write" scoped="" ref="0x2adc4d6c4ad0"/>
        <function-ref name="beginRead" scoped="" ref="0x2adc4d6c4c58"/>
        <function-ref name="readDone" scoped="" ref="0x2adc4d6c4de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2adc4d6982e8" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2adc4d6982e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d698638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2adc4d692dd8" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2adc4d692dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d691170"/>
        <function-ref name="write" scoped="" ref="0x2adc4d6912f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2adc4d6cd7c0" loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2adc4d6cd7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d6cdb10"/>
        <function-ref name="write" scoped="" ref="0x2adc4d6cdc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2adc4d6cc020" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2adc4d6cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d6cc370"/>
        <function-ref name="write" scoped="" ref="0x2adc4d6cc4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2adc4d697638" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2adc4d697638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d697988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2adc4d6c5020" loc="87:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2adc4d6c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d6c5370"/>
        <function-ref name="write" scoped="" ref="0x2adc4d6c54f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2adc4d691d60" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2adc4d691d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d6d00d8"/>
        <function-ref name="write" scoped="" ref="0x2adc4d6d0260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2adc4d6d0cc8" loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2adc4d6d0cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d6cf0a0"/>
        <function-ref name="write" scoped="" ref="0x2adc4d6cf228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2adc4d6cc7c0" loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2adc4d6cc7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d6ccb10"/>
        <function-ref name="write" scoped="" ref="0x2adc4d6ccc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2adc4d6c8020" loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2adc4d6c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d6c8370"/>
        <function-ref name="write" scoped="" ref="0x2adc4d6c84f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2adc4d69acb8" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2adc4d69acb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2adc4d6990a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2adc4d699228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2adc4d6993b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2adc4d694020" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2adc4d694020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d694370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2adc4d694638" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2adc4d694638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d694a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2adc4d694d50" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2adc4d694d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d6930d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2adc4d6952e8" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2adc4d6952e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d695638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2adc4d6d0528" loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2adc4d6d0528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d6d0878"/>
        <function-ref name="write" scoped="" ref="0x2adc4d6d0a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2adc4d6915c0" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2adc4d6915c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d691910"/>
        <function-ref name="write" scoped="" ref="0x2adc4d691a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2adc4d699c90" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2adc4d699c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d698020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2adc4d6c87c0" loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2adc4d6c87c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d6c8b10"/>
        <function-ref name="write" scoped="" ref="0x2adc4d6c8c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2adc4d6c67c0" loc="86:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2adc4d6c67c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d6c6b10"/>
        <function-ref name="write" scoped="" ref="0x2adc4d6c6c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2adc4d6cb7c0" loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2adc4d6cb7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d6cbb10"/>
        <function-ref name="write" scoped="" ref="0x2adc4d6cbc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2adc4d699678" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2adc4d699678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d6999c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2adc4d692638" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2adc4d692638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d692988"/>
        <function-ref name="write" scoped="" ref="0x2adc4d692b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2adc4d6cf4f0" loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2adc4d6cf4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d6cf840"/>
        <function-ref name="write" scoped="" ref="0x2adc4d6cf9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2adc4d6c57c0" loc="90:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2adc4d6c57c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2adc4d6c5b10"/>
        <function-ref name="writeDone" scoped="" ref="0x2adc4d6c5c98"/>
        <function-ref name="write" scoped="" ref="0x2adc4d6c5e20"/>
        <function-ref name="beginRead" scoped="" ref="0x2adc4d6c4020"/>
        <function-ref name="readDone" scoped="" ref="0x2adc4d6c41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2adc4d6cb020" loc="75:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2adc4d6cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d6cb370"/>
        <function-ref name="write" scoped="" ref="0x2adc4d6cb4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2adc4d6ce838" loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2adc4d6ce838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d6ceb88"/>
        <function-ref name="write" scoped="" ref="0x2adc4d6ced10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2adc4d698900" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2adc4d698900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d698c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2adc4d6cd020" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2adc4d6cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d6cd370"/>
        <function-ref name="write" scoped="" ref="0x2adc4d6cd4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2adc4d69a0c0" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2adc4d69a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2adc4d69a410"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2adc4d69a598"/>
        <function-ref name="request" scoped="" ref="0x2adc4d69a720"/>
        <function-ref name="granted" scoped="" ref="0x2adc4d69a8a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2adc4d69aa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2adc4d6933a0" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2adc4d6933a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d6936f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2adc4d692020" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2adc4d692020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d692370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2adc4d6c6020" loc="85:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2adc4d6c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d6c6370"/>
        <function-ref name="write" scoped="" ref="0x2adc4d6c64f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2adc4d6c77c0" loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2adc4d6c77c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d6c7b10"/>
        <function-ref name="write" scoped="" ref="0x2adc4d6c7c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2adc4d695900" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2adc4d695900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d695c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2adc4d6c7020" loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2adc4d6c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d6c7370"/>
        <function-ref name="write" scoped="" ref="0x2adc4d6c74f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2adc4d697020" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2adc4d697020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d697370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2adc4d697c50" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2adc4d697c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d695020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2adc4d6939b8" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2adc4d6939b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2adc4d693d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2adc4d6c9020" loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2adc4d6c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d6c9370"/>
        <function-ref name="write" scoped="" ref="0x2adc4d6c94f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2adc4d6c97c0" loc="78:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2adc4d6c97c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2adc4d6c9b10"/>
        <function-ref name="write" scoped="" ref="0x2adc4d6c9c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2adc4d6e8530" loc="35:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2adc4d6e8530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2adc4d6e8880"/>
        <function-ref name="rand32" scoped="" ref="0x2adc4d6e8a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2adc4d6e54c0" loc="34:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2adc4d6e54c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4d6e8088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2adc4d6eb738" loc="33:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2adc4d6eb738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4d6eba88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2adc4d6e0320" loc="37:/opt/tinyos-2.1.0/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2adc4d6e0320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2adc4d6e0670"/>
        <function-ref name="rand32" scoped="" ref="0x2adc4d6e07f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2adc4d6e12b8" loc="36:/opt/tinyos-2.1.0/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2adc4d6e12b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4d6e1e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2adc4d6e4a28" loc="35:/opt/tinyos-2.1.0/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2adc4d6e4a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4d6e4d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2adc4d6e9978" loc="67:/opt/tinyos-2.1.0/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2adc4d6e9978"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2adc4d6e9cc8"/>
        <function-ref name="toIdle" scoped="" ref="0x2adc4d6e9e50"/>
        <function-ref name="isState" scoped="" ref="0x2adc4d6e2020"/>
        <function-ref name="isIdle" scoped="" ref="0x2adc4d6e21a8"/>
        <function-ref name="requestState" scoped="" ref="0x2adc4d6e2330"/>
        <function-ref name="forceState" scoped="" ref="0x2adc4d6e24b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2adc4d70f838" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2adc4d70f838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4d70fb88"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4d70fd10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4d70e020"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4d70e1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4d70e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2adc4d712a08" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2adc4d712a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4d712d58"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4d70f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4d70f1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4d70f330"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4d70f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2adc4d709578" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2adc4d709578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4d7098c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4d709a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4d709bd8"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4d709d60"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4d708020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2adc4d70b298" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2adc4d70b298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4d70b5e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4d70b770"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4d70b8f8"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4d70ba80"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4d70bc08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2adc4d707080" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2adc4d707080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2adc4d7073d0"/>
        <function-ref name="rand32" scoped="" ref="0x2adc4d707558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2adc4d70be80" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2adc4d70be80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4d7091f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2adc4d707848" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2adc4d707848"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2adc4d707b98"/>
        <function-ref name="getMetadata" scoped="" ref="0x2adc4d707d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x2adc4d7082a0" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2adc4d7082a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2adc4d7085f0"/>
        <function-ref name="toIdle" scoped="" ref="0x2adc4d708778"/>
        <function-ref name="isState" scoped="" ref="0x2adc4d708900"/>
        <function-ref name="isIdle" scoped="" ref="0x2adc4d708a88"/>
        <function-ref name="requestState" scoped="" ref="0x2adc4d708c10"/>
        <function-ref name="forceState" scoped="" ref="0x2adc4d708d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2adc4d70c2b8" loc="67:/opt/tinyos-2.1.0/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2adc4d70c2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2adc4d70c608"/>
        <function-ref name="toIdle" scoped="" ref="0x2adc4d70c790"/>
        <function-ref name="isState" scoped="" ref="0x2adc4d70c918"/>
        <function-ref name="isIdle" scoped="" ref="0x2adc4d70caa0"/>
        <function-ref name="requestState" scoped="" ref="0x2adc4d70cc28"/>
        <function-ref name="forceState" scoped="" ref="0x2adc4d70cdb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2adc4d733b20" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2adc4d733b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2adc4d733e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2adc4d710d20" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2adc4d710d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2adc4d7330a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2adc4d733418" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x2adc4d733418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2adc4d733768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2adc4d72e458" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2adc4d72e458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2adc4d72e7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2adc4d72fcb0" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2adc4d72fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2adc4d72e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2adc4d72f020" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2adc4d72f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2adc4d72f370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2adc4d72ea98" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2adc4d72ea98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2adc4d72ede8"/>
        <function-ref name="getMetadata" scoped="" ref="0x2adc4d72d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2adc4d72f6e8" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x2adc4d72f6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2adc4d72fa38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2adc4d752e50" loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2adc4d752e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2adc4d7511e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2adc4d7514e8" loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2adc4d7514e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4d751838"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4d7519c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4d751b48"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4d751cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4d751e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2adc4d734a48" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2adc4d734a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4d734d98"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4d752020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4d7521a8"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4d752330"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4d7524b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2adc4d752748" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2adc4d752748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2adc4d752a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2adc4d74a020" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2adc4d74a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4d74a370"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4d74a4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4d74a680"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4d74a808"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4d74a990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2adc4d74acc8" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2adc4d74acc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2adc4d7490a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2adc4d74d020" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2adc4d74d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4d74d370"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4d74d4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4d74d680"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4d74d808"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4d74d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NonTinyosReceive" ref="0x2adc4d74c8d0" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NonTinyosReceive" scoped="" ref="0x2adc4d74c8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2adc4d74cc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2adc4d749390" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2adc4d749390"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2adc4d7496e0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2adc4d749868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2adc4d74dc20" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2adc4d74dc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2adc4d74c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2adc4d775da0" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2adc4d775da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2adc4d774170"/>
        <function-ref name="stopDone" scoped="" ref="0x2adc4d7742f8"/>
        <function-ref name="start" scoped="" ref="0x2adc4d774480"/>
        <function-ref name="stop" scoped="" ref="0x2adc4d774608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2adc4d773838" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2adc4d773838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4d773b88"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4d773d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4d772020"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4d7721a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4d772330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2adc4d772668" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2adc4d772668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2adc4d7729b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2adc4d753660" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2adc4d753660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4d7539b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4d753b38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4d753cc0"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4d753e48"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4d777020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2adc4d7778f8" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2adc4d7778f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x2adc4d777c48"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x2adc4d777dd0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x2adc4d775020"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x2adc4d7751a8"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x2adc4d775330"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x2adc4d7754b8"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x2adc4d775640"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x2adc4d7757c8"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x2adc4d775950"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x2adc4d775ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x2adc4d774928" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x2adc4d774928"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2adc4d774c78"/>
        <function-ref name="toIdle" scoped="" ref="0x2adc4d774e00"/>
        <function-ref name="isState" scoped="" ref="0x2adc4d773020"/>
        <function-ref name="isIdle" scoped="" ref="0x2adc4d7731a8"/>
        <function-ref name="requestState" scoped="" ref="0x2adc4d773330"/>
        <function-ref name="forceState" scoped="" ref="0x2adc4d7734b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2adc4d772d28" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2adc4d772d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2adc4d7710a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2adc4d771228"/>
        <function-ref name="start" scoped="" ref="0x2adc4d7713b0"/>
        <function-ref name="stop" scoped="" ref="0x2adc4d771538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2adc4d7772b0" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2adc4d7772b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2adc4d777600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2adc4d76e170" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2adc4d76e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x2adc4d76e4c0"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x2adc4d76e648"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x2adc4d76e7d0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x2adc4d76e958"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x2adc4d76eae0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x2adc4d76ec68"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x2adc4d76edf0"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x2adc4d76d020"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x2adc4d76d1a8"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x2adc4d76d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2adc4d770e38" loc="67:/opt/tinyos-2.1.0/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2adc4d770e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2adc4d76f1c0"/>
        <function-ref name="toIdle" scoped="" ref="0x2adc4d76f348"/>
        <function-ref name="isState" scoped="" ref="0x2adc4d76f4d0"/>
        <function-ref name="isIdle" scoped="" ref="0x2adc4d76f658"/>
        <function-ref name="requestState" scoped="" ref="0x2adc4d76f7e0"/>
        <function-ref name="forceState" scoped="" ref="0x2adc4d76f968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2adc4d79a9c0" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2adc4d79a9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4d79ad10"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4d799020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4d7991a8"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4d799330"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4d7994b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2adc4d79b020" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2adc4d79b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4d79b370"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4d79b4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4d79b680"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4d79b808"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4d79b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2adc4d79bc40" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2adc4d79bc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2adc4d79a020"/>
        <function-ref name="setRetries" scoped="" ref="0x2adc4d79a1a8"/>
        <function-ref name="getRetries" scoped="" ref="0x2adc4d79a330"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2adc4d79a4b8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2adc4d79a640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2adc4d796d98" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2adc4d796d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2adc4d795170"/>
        <function-ref name="noAck" scoped="" ref="0x2adc4d7952f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2adc4d795480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2adc4d796080" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2adc4d796080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2adc4d7963d0"/>
        <function-ref name="setRetries" scoped="" ref="0x2adc4d796558"/>
        <function-ref name="getRetries" scoped="" ref="0x2adc4d7966e0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2adc4d796868"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2adc4d7969f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2adc4d8185e0" loc="41:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
      <component-ref qname="HiddenMoteAppC.RssiMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2adc4d8185e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4d818930"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4d818ab8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4d818c40"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4d818dc8"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4d817020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2adc4d817268" loc="42:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
      <component-ref qname="HiddenMoteAppC.RssiMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2adc4d817268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2adc4d8175b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2adc4d817740"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4d8178c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4d817a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2adc4d817bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2adc4d817e20" loc="43:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
      <component-ref qname="HiddenMoteAppC.RssiMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2adc4d817e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2adc4d8161a8"/>
        <function-ref name="source" scoped="" ref="0x2adc4d816330"/>
        <function-ref name="address" scoped="" ref="0x2adc4d8164b8"/>
        <function-ref name="destination" scoped="" ref="0x2adc4d816640"/>
        <function-ref name="setSource" scoped="" ref="0x2adc4d8167c8"/>
        <function-ref name="setDestination" scoped="" ref="0x2adc4d816950"/>
        <function-ref name="type" scoped="" ref="0x2adc4d816ad8"/>
        <function-ref name="setType" scoped="" ref="0x2adc4d816c60"/>
        <function-ref name="isForMe" scoped="" ref="0x2adc4d816de8"/>
        <function-ref name="setGroup" scoped="" ref="0x2adc4d815020"/>
        <function-ref name="localGroup" scoped="" ref="0x2adc4d8151a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2adc4d815430" loc="44:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
      <component-ref qname="HiddenMoteAppC.RssiMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2adc4d815430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2adc4d815780"/>
        <function-ref name="noAck" scoped="" ref="0x2adc4d815908"/>
        <function-ref name="wasAcked" scoped="" ref="0x2adc4d815a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2adc4ddac3e0" loc="36:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
      <component-ref qname="HiddenMoteAppC.RssiMsgSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2adc4ddac3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4ddac730"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4ddac8b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4ddaca40"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4ddacbc8"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4ddacd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2adc4ddab020" loc="38:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
      <component-ref qname="HiddenMoteAppC.RssiMsgSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2adc4ddab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4ddab370"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4ddab4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4ddab680"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4ddab808"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4ddab990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2adc4ddabbd8" loc="39:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
      <component-ref qname="HiddenMoteAppC.RssiMsgSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2adc4ddabbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2adc4ddaa020"/>
        <function-ref name="source" scoped="" ref="0x2adc4ddaa1a8"/>
        <function-ref name="address" scoped="" ref="0x2adc4ddaa330"/>
        <function-ref name="destination" scoped="" ref="0x2adc4ddaa4b8"/>
        <function-ref name="setSource" scoped="" ref="0x2adc4ddaa640"/>
        <function-ref name="setDestination" scoped="" ref="0x2adc4ddaa7c8"/>
        <function-ref name="type" scoped="" ref="0x2adc4ddaa950"/>
        <function-ref name="setType" scoped="" ref="0x2adc4ddaaad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2adc4ddaac60"/>
        <function-ref name="setGroup" scoped="" ref="0x2adc4ddaade8"/>
        <function-ref name="localGroup" scoped="" ref="0x2adc4dda9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2adc4d7e0020" loc="35:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2adc4d7e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4d7e0370"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4d7e04f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4d7e0680"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4d7e0808"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4d7e0990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2adc4d824060" loc="40:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2adc4d824060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2adc4c9f0df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4d8243d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4d824558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4d8246e0"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4d824868"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4d8249f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2adc4d8252c8" loc="38:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2adc4d8252c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4d825638"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4d8257c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4d825948"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4d825ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4d825c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2adc4d822268" loc="42:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2adc4d822268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2adc4d8225b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2adc4d822740"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4d8228c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4d822a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2adc4d822bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2adc4d821020" loc="161:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2adc4d821020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2adc4d821370"/>
        <function-ref name="runTask" scoped="" ref="0x2adc4d8214f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2adc4d8217c0" loc="118:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2adc4d8217c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2adc4d821b10"/>
        <function-ref name="runTask" scoped="" ref="0x2adc4d821c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2adc4d824c38" loc="41:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2adc4d824c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2adc4d823020"/>
        <function-ref name="source" scoped="" ref="0x2adc4d8231a8"/>
        <function-ref name="address" scoped="" ref="0x2adc4d823330"/>
        <function-ref name="destination" scoped="" ref="0x2adc4d8234b8"/>
        <function-ref name="setSource" scoped="" ref="0x2adc4d823640"/>
        <function-ref name="setDestination" scoped="" ref="0x2adc4d8237c8"/>
        <function-ref name="type" scoped="" ref="0x2adc4d823950"/>
        <function-ref name="setType" scoped="" ref="0x2adc4d823ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2adc4d823c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2adc4d823de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2adc4d822020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2adc4d812a60" loc="37:/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
      <component-ref qname="HiddenMoteAppC.SendTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2adc4d812a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c941e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2adc4c9401f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2adc4d80fd60"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d810470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2adc4d80f1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2adc4d810d10"/>
        <function-ref name="getdt" scoped="" ref="0x2adc4d80e648"/>
        <function-ref name="gett0" scoped="" ref="0x2adc4d80e1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2adc4d8108c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2adc4d811620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2adc4d80f790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2adc4d811ac0"/>
        <function-ref name="stop" scoped="" ref="0x2adc4d810020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendTimer" ref="0x2adc4d8091a8" loc="8:HiddenMoteC.nc">
      <component-ref qname="HiddenMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendTimer" scoped="" ref="0x2adc4d8091a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2adc4c941e28"/>
            <typename><typedef-ref name="TMilli" ref="0x2adc4c9401f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2adc4d8065f0"/>
        <function-ref name="fired" scoped="" ref="0x2adc4d808af0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2adc4d8078c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2adc4d807470"/>
        <function-ref name="getdt" scoped="" ref="0x2adc4d84b020"/>
        <function-ref name="gett0" scoped="" ref="0x2adc4d806a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2adc4d807020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2adc4d809cf0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2adc4d806020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2adc4d808200"/>
        <function-ref name="stop" scoped="" ref="0x2adc4d8086a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2adc4d80c970" loc="7:HiddenMoteC.nc">
      <component-ref qname="HiddenMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2adc4d80c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2adc4d80ccc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x2adc4d849a08" loc="11:HiddenMoteC.nc">
      <component-ref qname="HiddenMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x2adc4d849a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2adc4d849d58"/>
        <function-ref name="stopDone" scoped="" ref="0x2adc4d848020"/>
        <function-ref name="start" scoped="" ref="0x2adc4d8481a8"/>
        <function-ref name="stop" scoped="" ref="0x2adc4d848330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2adc4d84b468" loc="9:HiddenMoteC.nc">
      <component-ref qname="HiddenMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2adc4d84b468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2adc4d84b7b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2adc4d84b940"/>
        <function-ref name="led1On" scoped="" ref="0x2adc4d84bac8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2adc4d84bc50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2adc4d84bdd8"/>
        <function-ref name="get" scoped="" ref="0x2adc4d84a020"/>
        <function-ref name="led1Off" scoped="" ref="0x2adc4d84a1a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2adc4d84a7c8"/>
        <function-ref name="set" scoped="" ref="0x2adc4d84a330"/>
        <function-ref name="led0On" scoped="" ref="0x2adc4d84a4b8"/>
        <function-ref name="led2On" scoped="" ref="0x2adc4d84a640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiMsgSend" ref="0x2adc4d84ab40" loc="10:HiddenMoteC.nc">
      <component-ref qname="HiddenMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiMsgSend" scoped="" ref="0x2adc4d84ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2adc4d849020"/>
        <function-ref name="getPayload" scoped="" ref="0x2adc4d8491a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2adc4d849330"/>
        <function-ref name="cancel" scoped="" ref="0x2adc4d8494b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2adc4d849640"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2adc4c9b9430" loc="92:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2adc4c9b91c0" loc="92:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2adc4c9b8a40" loc="117:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2adc4c9b87d0" loc="117:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2adc4c9ba7f0" loc="83:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2adc4c9b9c18" loc="109:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x2adc4ca080c8" loc="69:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2adc4c9ef5a0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2adc4ca09768" loc="69:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2adc4c9ef5a0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2adc4ca09ac8" loc="69:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2adc4ca09dd8" loc="69:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2adc4ca103c0" loc="124:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca04dc8" loc="124:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2adc4ca10108" loc="124:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2adc4ca045c0" loc="112:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2adc4ca07370" loc="85:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca07100" loc="85:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2adc4ca057a0" loc="99:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca051f8" loc="99:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2adc4ca05520" loc="99:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.1.0/tos/interfaces/Receive.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2adc4ca0c920" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
              <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca0c020" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2adc4ca0c348" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2adc4ca0c658" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2adc4ca15370" loc="54:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca15100" loc="54:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2adc4ca14370" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca14100" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2adc4ca1f5e8" loc="115:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca1f020" loc="115:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2adc4ca1f330" loc="115:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2adc4ca1e600" loc="95:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2adc4ca13728" loc="83:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca13198" loc="83:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2adc4ca134a8" loc="83:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="24:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2adc4ca2aad8" loc="24:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2adc4ca2aad8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2adc4ca2ad08" loc="24:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2adc4ca2ad08"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2adc4ca3d9d8" loc="52:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2adc4ca2ad08"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca3d768" loc="52:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2adc4ca3bab8" loc="59:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="54:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca3b848" loc="59:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2adc4ca2f870" loc="38:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="26:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca2f600" loc="38:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2adc4ca3ad10" loc="67:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="61:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2adc4ca2ad08"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca3a750" loc="67:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2adc4ca3aa90" loc="67:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2adc4ca2ad08"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2adc4ca340a8" loc="48:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca1ddd0" loc="48:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2adc4ca33290" loc="60:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca33020" loc="60:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2adc4ca32338" loc="74:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca320c8" loc="74:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2adc4ca2b790" loc="166:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2adc4c9ef1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2adc4ca2b520" loc="166:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2adc4ca268b8" loc="77:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2adc4c9ef5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2adc4ca26648" loc="77:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2adc4ca17dc8" loc="57:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2adc4c9ef5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2adc4ca1a8a0" loc="67:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2adc4c9ef5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2adc4ca1a630" loc="67:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2adc4ca19050" loc="110:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2adc4c9ef5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2adc4ca23a68" loc="110:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2adc4ca23da0" loc="110:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2adc4c9ef5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2adc4ca24bf0" loc="92:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2adc4c9ef5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2adc4ca24638" loc="92:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2adc4ca24970" loc="92:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2adc4c9ef5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2adc4ca203e0" loc="136:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2adc4c9f0df8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2adc4ca20170" loc="136:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2adc4ca2d680" loc="151:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2adc4c9f0df8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2adc4ca2d100" loc="151:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2adc4ca2d400" loc="151:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2adc4c9f0df8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2adc4ca22290" loc="125:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2adc4ca22020" loc="125:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2adc4ca29b48" loc="176:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2adc4c9ef1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2adc4ca29598" loc="176:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2adc4ca298c8" loc="176:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2adc4c9ef1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2adc4ca288e8" loc="184:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2adc4c9ef1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x2adc4ca5a9f8" loc="95:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca5a788" loc="95:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x2adc4ca5ddd0" loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca5db60" loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x2adc4ca4e640" loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2adc4ca4e3d0" loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x2adc4ca50b60" loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2adc4ca508f0" loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x2adc4ca5d020" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x2adc4ca4ed88" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x2adc4ca5bc30" loc="88:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca5b9c0" loc="88:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.0/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2adc4ca726a8" loc="59:/opt/tinyos-2.1.0/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2adc4c9ef5a0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2adc4ca720c8" loc="59:/opt/tinyos-2.1.0/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2adc4c9ef5a0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2adc4ca72428" loc="59:/opt/tinyos-2.1.0/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x2adc4ca55020" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2adc4ca47a18" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x2adc4ca47d40" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x2adc4ca55a80" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2adc4c0b9160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2adc4ca55810" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x2adc4ca47290" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2adc4ca47020" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x2adc4ca54550" loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2adc4ca542e0" loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getLocalSleepInterval" ref="0x2adc4ca56760" loc="58:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="55:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxDutyCycle" ref="0x2adc4ca5e020" loc="114:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="109:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's duty cycle configured in this message&#10;     in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca63c58" loc="114:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sleepIntervalToDutyCycle" ref="0x2adc4ca6dbb8" loc="130:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="124:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; </short>
          <long>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; @param sleepInterval The sleep interval in units of [ms]&#10; @return The duty cycle in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepInterval" ref="0x2adc4ca6d948" loc="130:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalDutyCycle" ref="0x2adc4ca65bc0" loc="81:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="78:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return this node's radio duty cycle rate, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxSleepInterval" ref="0x2adc4ca64998" loc="90:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="84:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param sleepInterval The receiving node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca64380" loc="90:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="sleepIntervalMs" ref="0x2adc4ca64718" loc="90:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalDutyCycle" ref="0x2adc4ca65290" loc="76:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="60:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].</short>
          <long>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10; For example, to get a 0.05% duty cycle,&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(5);&#10; &#60;/code>&#10;&#10; For a 100% duty cycle (always on),&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(10000);&#10; &#60;/code>&#10;&#10; This is the equivalent of setting the local sleep interval explicitly.&#10; &#10; @param dutyCycle The duty cycle percentage, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x2adc4ca65020" loc="76:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxDutyCycle" ref="0x2adc4ca60d68" loc="107:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="98:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10; Duty cycle is in units of [percentage*100], i.e. 0.25% duty cycle = 25.&#10; &#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param dutyCycle The duty cycle of the receiving mote, in units of &#10;     [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca60788" loc="107:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dutyCycle" ref="0x2adc4ca60ae8" loc="107:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dutyCycleToSleepInterval" ref="0x2adc4ca6d020" loc="122:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="116:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; </short>
          <long>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; @param dutyCycle The duty cycle in units of [percentage*100]&#10; @return The equivalent sleep interval, in units of [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x2adc4ca5ed70" loc="122:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxSleepInterval" ref="0x2adc4ca62a78" loc="96:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="92:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's sleep interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca62808" loc="96:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalSleepInterval" ref="0x2adc4ca59da8" loc="53:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="43:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio sleep interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio sleep interval, in milliseconds.&#10; Once every interval, the node will sleep and perform an Rx check &#10; on the radio.  Setting the sleep interval to 0 will keep the radio&#10; always on.&#10;&#10; This is the equivalent of setting the local duty cycle rate.&#10;&#10; @param sleepIntervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0x2adc4ca59b38" loc="53:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2adc4ca660a8" loc="65:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca67dd0" loc="65:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2adc4ca6a348" loc="46:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca57ce8" loc="46:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2adc4ca6a0c8" loc="46:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2adc4ca67118" loc="59:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca69e78" loc="59:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2adc4ca696b0" loc="53:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca690c8" loc="53:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2adc4ca69430" loc="53:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2adc4ca74020" loc="71:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca66d30" loc="71:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.0/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2adc4ca48b08" loc="47:/opt/tinyos-2.1.0/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.0/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca48898" loc="47:/opt/tinyos-2.1.0/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2adc4ca846d0" loc="64:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca84140" loc="64:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2adc4ca84450" loc="64:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2adc4ca7fa68" loc="114:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca7f4a0" loc="114:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2adc4ca7f7b0" loc="114:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2adc4ca81c70" loc="101:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2adc4ca82948" loc="78:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca826d8" loc="78:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2adc4ca80d58" loc="89:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca807b0" loc="89:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2adc4ca80ad8" loc="89:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x2adc4ca9d0b8" loc="99:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="93:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x2adc4ca8eab0" loc="99:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x2adc4ca8ede8" loc="99:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2adc4ca90b70" loc="86:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="83:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2adc4ca902a0" loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2adc4ca91ad8" loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x2adc4ca90020" loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x2adc4ca950a8" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2adc4ca86e00" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x2adc4ca8e3a0" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="88:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x2adc4ca92290" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2adc4ca92020" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2adc4ca94108" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2adc4ca95e40" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x2adc4ca9c258" loc="110:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="107:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x2adc4ca91338" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2adc4ca910c8" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x2adc4ca9d948" loc="105:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="101:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x2adc4ca94850" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x2adc4ca866d0" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2adc4ca95790" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x2adc4ca929c0" loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2adc4ca99a80" loc="50:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2adc4c9ef5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2adc4ca97948" loc="60:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2adc4ca97258" loc="55:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2adc4c9ef1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2adc4ca992a0" loc="45:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2adc4c9ef1e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2adc4c9ef5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2adc4ca8bc60" loc="45:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2adc4c9ef1e8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2adc4ca99020" loc="45:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2adc4c9ef5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeader" ref="0x2adc4ca8ad70" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x2adc4c9c4340"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x2adc4c9c3ba8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca8aa88" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x2adc4ca87020" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x2adc4c9c1720"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x2adc4c9bf020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4ca89c60" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2adc4cb1fc90" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2adc4cb1f6f8" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x2adc4cb1fa10" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2adc4cb1d020" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x2adc4cb1a668" loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2adc4cb1c8b0" loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2adc4cb1a0c8" loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2adc4cb1a3d8" loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2adc4cb1c118" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2adc4cb1daf8" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2adc4cb1de20" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x2adc4cb1e6e8" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x2adc4cb1e478" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.1.0/tos/interfaces/Random.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2adc4cb298a8" loc="41:/opt/tinyos-2.1.0/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.1.0/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2adc4cb29110" loc="35:/opt/tinyos-2.1.0/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.1.0/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.1.0/tos/interfaces/StdControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.0/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2adc4cb224d0" loc="74:/opt/tinyos-2.1.0/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.1.0/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2adc4cb22c70" loc="84:/opt/tinyos-2.1.0/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/tinyos-2.1.0/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x2adc4cb144f8" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x2adc4cb123e0" loc="97:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x2adc4cb13c50" loc="90:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x2adc4cb0bd70" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x2adc4cb16cd8" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x2adc4cb14d00" loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x2adc4cb134f0" loc="83:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x2adc4cb16590" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/tinyos-2.1.0/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2adc4cb35020" loc="50:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2adc4cb35758" loc="56:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2adc4cb34020" loc="61:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2adc4cb34e70" loc="72:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2adc4cb32480" loc="89:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2adc4cb32c18" loc="106:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2adc4cb34738" loc="66:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2adc4cb30768" loc="123:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2adc4cb304f8" loc="123:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2adc4cb247e0" loc="45:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2adc4cb33608" loc="78:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2adc4cb33d20" loc="83:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
      <documentation loc="53:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2adc4cb19838" loc="110:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2adc4cb08910" loc="87:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2adc4cb08020" loc="78:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2adc4cb190d8" loc="92:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2adc4cb18258" loc="118:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
      <documentation loc="33:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x2adc4cb3dce8" loc="71:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x2adc4cb3f458" loc="56:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x2adc4cb3d590" loc="66:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x2adc4cb3d320" loc="66:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x2adc4cb3fb60" loc="61:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x2adc4cb2c290" loc="45:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2adc4cb2c020" loc="45:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x2adc4cb2ccb8" loc="51:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2adc4cb2ca48" loc="51:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.1.0/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2adc4c8d5070" loc="56:/opt/tinyos-2.1.0/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.1.0/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2adc4c8d5860" loc="64:/opt/tinyos-2.1.0/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.1.0/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.1.0/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2adc4cb8dbf8" loc="49:/opt/tinyos-2.1.0/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2adc4cb8dbf8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2adc4cb8a490" loc="55:/opt/tinyos-2.1.0/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.1.0/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2adc4cb882a0" loc="63:/opt/tinyos-2.1.0/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.1.0/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2adc4cb8dbf8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2adc4cb8aba0" loc="63:/opt/tinyos-2.1.0/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2adc4cb88020" loc="63:/opt/tinyos-2.1.0/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2adc4cb8dbf8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.2 $ $Date: 2008/06/11 00:46:23 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2adc4cbb7d38" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2adc4c9bce20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2adc4cbb7ac8" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2adc4cbb07b8" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2adc4c9bce20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2adc4cbb0548" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2adc4cb928a0" loc="45:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2adc4cb928a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2adc4cb92ad0" loc="45:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2adc4cb92ad0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2adc4cb9f3e0" loc="98:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2adc4cb92ad0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2adc4cba2540" loc="67:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2adc4cba0a50" loc="92:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2adc4cb92ad0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2adc4cb92ad0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2adc4cba04b0" loc="92:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2adc4cb92ad0"/></type-var>
          </variable>
          <variable name="dt" ref="0x2adc4cba07d0" loc="92:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2adc4cb92ad0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2adc4cba2cb0" loc="77:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2adc4cb9fb60" loc="105:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2adc4cb92ad0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2adc4cba35c8" loc="55:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2adc4cb92ad0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2adc4cba3358" loc="55:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2adc4cb92ad0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2adc4cba3d98" loc="62:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2adc4cbac7c0" loc="33:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2adc4cbaa020" loc="34:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2adc4cbada30" loc="31:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2adc4cbaadb0" loc="36:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2adc4cbac110" loc="32:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2adc4cbaa6d8" loc="35:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2adc4cb9ccf8" loc="29:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2adc4cbad3a0" loc="30:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="36:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.2 $ $Date: 2008/06/11 00:46:23 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x2adc4cbc13e0" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="38:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2adc4c9bce20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.1.0/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2adc4cb973a0" loc="51:/opt/tinyos-2.1.0/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.1.0/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2adc4cbb5af8" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2adc4c9bce20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2adc4cba6ce0" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2adc4cbb5538" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2adc4cbb5868" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2adc4cbb32b0" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2adc4c9bce20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2adc4cbb4390" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2adc4cbb4b98" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2adc4cbb3020" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/tinyos-2.1.0/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2adc4cbb8770" loc="57:/opt/tinyos-2.1.0/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2adc4cbb8020" loc="50:/opt/tinyos-2.1.0/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2adc4cba58b8" loc="43:/opt/tinyos-2.1.0/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2adc4cba5070" loc="42:/opt/tinyos-2.1.0/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/tinyos-2.1.0/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.1.0/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2adc4cc277e8" loc="49:/opt/tinyos-2.1.0/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2adc4cc335e8" loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2adc4cc33378" loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2adc4cc38c88" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2adc4cc356b0" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2adc4cc35440" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2adc4cc34290" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2adc4cc34020" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2adc4cc34ad8" loc="53:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2adc4c8cb3a0" loc="46:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2adc4c8c9290" loc="61:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2adc4c8cbab8" loc="54:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.1.0/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/tinyos-2.1.0/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2adc4c97cca0" loc="59:/opt/tinyos-2.1.0/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.1.0/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.0/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2adc4c997d60" loc="54:/opt/tinyos-2.1.0/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.1.0/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2adc4c9241a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.1.0/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/tinyos-2.1.0/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2adc4c99ce60" loc="44:/opt/tinyos-2.1.0/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.1.0/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2adc4ce13378" loc="49:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2adc4c978020"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2adc4c978428"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x2adc4ce16020" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2adc4c965918"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2adc4c965d20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2adc4ce17cf8" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2adc4c965918"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2adc4c965d20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2adc4ce141d8" loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2adc4c970b60"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2adc4c96f020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x2adc4ce1bab0" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2adc4c955528"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2adc4c955930"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2adc4ce14b98" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2adc4c970b60"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2adc4c96f020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2adc4ce14928" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2adc4c970b60"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2adc4c96f020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2adc4ce13d38" loc="50:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2adc4c978020"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2adc4c978428"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2adc4ce13ac8" loc="50:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2adc4c978020"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2adc4c978428"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x2adc4ce18ad8" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2adc4c963d50"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2adc4c961188"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x2adc4ce18328" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2adc4c965918"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2adc4c965d20"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x2adc4ce17570" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2adc4c955528"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2adc4c955930"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2adc4ce17300" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2adc4c955528"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2adc4c955930"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x2adc4ce169f0" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2adc4c963d50"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2adc4c961188"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2adc4ce16780" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2adc4c963d50"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2adc4c961188"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2adc4ce19b60" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2adc4ce19b60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x2adc4ce29648" loc="79:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x2adc4ce293d8" loc="79:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2adc4ce2a568" loc="67:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2adc4ce10438" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2adc4ce19b60"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2adc4ce0e748" loc="51:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2adc4ce19b60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2adc4ce0e4d8" loc="51:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2adc4ce19b60"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2adc4ce2b020" loc="55:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2adc4ce2acb8" loc="73:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2adc4ce10d70" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2adc4ce19b60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2adc4ce10b00" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2adc4ce19b60"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2adc4ce2b718" loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2adc4ce2be00" loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2adc4ce25820" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2adc4ce25820"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2adc4ce20e20" loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2adc4ce211d8" loc="49:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2adc4ce22110" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2adc4ce25820"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2adc4ce218e0" loc="53:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2adc4ce1e5c0" loc="71:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2adc4ce22a58" loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2adc4ce25820"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2adc4ce227e8" loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2adc4ce25820"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2adc4ce20020" loc="56:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2adc4ce20708" loc="59:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2adc4ce08418" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2adc4ce08418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2adc4ce03900" loc="89:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2adc4ce04a40" loc="78:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2adc4ce08cb8" loc="52:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2adc4ce08418"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2adc4ce02290" loc="95:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2adc4ce02020" loc="95:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2adc4ce02a10" loc="101:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2adc4ce064c0" loc="66:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2adc4ce07d50" loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2adc4ce031d8" loc="84:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2adc4ce07630" loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2adc4ce08418"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2adc4ce073c0" loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2adc4ce08418"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2adc4ce06bb8" loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2adc4ce04328" loc="72:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2adc4ce307c8" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2adc4c94d450"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2adc4c94d858"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2adc4ce2dc10" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2adc4c94f848"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2adc4c94fc50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2adc4ce2fa38" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2adc4c951128"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2adc4c951530"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2adc4ce2d470" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2adc4c951128"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2adc4c951530"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2adc4ce2d200" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2adc4c951128"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2adc4c951530"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2adc4ce2c5f8" loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2adc4c94f848"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2adc4c94fc50"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2adc4ce2c388" loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2adc4c94f848"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2adc4c94fc50"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2adc4ce2f290" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2adc4c94d450"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2adc4c94d858"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2adc4ce2f020" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2adc4c94d450"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2adc4c94d858"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x2adc4ce43020" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2adc4ce437e0" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x2adc4ce457f0" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2adc4ce42020" loc="50:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2adc4ce46550" loc="21:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2adc4c9499b8"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2adc4c949dc0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2adc4ce45020" loc="27:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2adc4c9499b8"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2adc4c949dc0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2adc4ce46c90" loc="27:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2adc4c9499b8"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2adc4c949dc0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2adc4cfae3f8" loc="46:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2adc4cfae3f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2adc4cfae628" loc="46:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2adc4cfae628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2adc4cfad020" loc="53:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2adc4cfae628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2adc4cfac070" loc="65:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2adc4cfad838" loc="60:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2adc4cfac760" loc="71:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2adc4d03ea40" loc="43:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2adc4d03dae0" loc="55:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2adc4d03d3a8" loc="50:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2adc4d03d138" loc="50:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2adc4d03e258" loc="42:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2adc4d06d860" loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2adc4d06a1d8" loc="64:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2adc4d06d178" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2adc4d06b9f0" loc="59:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2adc4d06b780" loc="59:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2adc4d070a48" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2adc4d06b020" loc="52:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="28:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2adc4d079818" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x2adc4d10ce18" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2adc4d10c868" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2adc4d10cb98" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2adc4d107d50" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2adc4d107468" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2adc4d107798" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2adc4d107ac0" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2adc4d108730" loc="82:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2adc4c9bce20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2adc4d108180" loc="82:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2adc4d1084b0" loc="82:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x2adc4d10dae8" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2adc4c9bce20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2adc4d10d538" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2adc4d10d868" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2adc4d109450" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2adc4d10ab30" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2adc4d10ae60" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2adc4d1091c0" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x2adc4d0fc7b8" loc="24:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x2adc4d0fb020" loc="31:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x2adc4d0fb7f0" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
      <documentation loc="24:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.7 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2adc4d1402b0" loc="59:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2adc4d141840" loc="59:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2adc4d141ba0" loc="59:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2adc4d140020" loc="59:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2adc4d13f648" loc="71:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2adc4d13e9b0" loc="71:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2adc4d13ed10" loc="71:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2adc4d13f060" loc="71:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2adc4c0bb378"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2adc4d13f3a8" loc="72:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.1.0/tos/interfaces/SpiByte.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2adc4d118108" loc="34:/opt/tinyos-2.1.0/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.1.0/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2adc4d11be68" loc="34:/opt/tinyos-2.1.0/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x2adc4d1dc760" loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x2adc4d1d2020" loc="109:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x2adc4d1d7b98" loc="100:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x2adc4d1d29c8" loc="111:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x2adc4d1d2758" loc="111:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x2adc4d1dc020" loc="66:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x2adc4d1d5640" loc="105:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x2adc4d1d53d0" loc="105:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2adc4d1d93f8" loc="96:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x2adc4d1d9188" loc="96:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2adc4d1db610" loc="80:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x2adc4d1cd290" loc="125:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2adc4d1cd020" loc="125:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2adc4d1d9b30" loc="97:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x2adc4d1d1a30" loc="114:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x2adc4d1d17c0" loc="114:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2adc4d1d08f0" loc="120:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x2adc4d1d3838" loc="108:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x2adc4d1d35c8" loc="108:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x2adc4d1ce7d0" loc="124:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x2adc4d1d6588" loc="102:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x2adc4d1d6318" loc="102:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2adc4d1da020" loc="86:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2adc4d1dbcf8" loc="86:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2adc4d1d7498" loc="99:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x2adc4d1d7228" loc="99:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x2adc4d1d5e50" loc="106:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x2adc4d1d1110" loc="112:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x2adc4d1d0178" loc="115:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2adc4d1ce070" loc="122:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x2adc4d1d6ca0" loc="103:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x2adc4d1dce78" loc="72:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2adc4d1da9a8" loc="92:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2adc4d1da738" loc="92:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.1.0/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/opt/tinyos-2.1.0/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2adc4d1c8178" loc="80:/opt/tinyos-2.1.0/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.1.0/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2adc4d1c8968" loc="88:/opt/tinyos-2.1.0/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.1.0/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.1.0/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.0/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2adc4d232020" loc="74:/opt/tinyos-2.1.0/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.1.0/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2adc4d2327f8" loc="84:/opt/tinyos-2.1.0/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/tinyos-2.1.0/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.1.0/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2adc4d2707d0" loc="43:/opt/tinyos-2.1.0/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.1.0/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2adc4d26f0d8" loc="51:/opt/tinyos-2.1.0/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.1.0/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2adc4d26b020" loc="55:/opt/tinyos-2.1.0/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.1.0/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2adc4d26d6f8" loc="49:/opt/tinyos-2.1.0/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2adc4d294c80" loc="69:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10; </short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2adc4d299020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2adc4d294a10" loc="69:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2adc4d299020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2adc4d298e10" loc="43:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2adc4d2958f0" loc="52:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2adc4d299020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2adc4d295680" loc="52:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2adc4d299020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2adc4d2941d8" loc="60:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue.</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2adc4d299020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x2adc4d399020" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008/06/17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2adc4d3fbac0" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2adc4d3fb170" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x2adc4d3fb840" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x2adc4d3fda00" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x2adc4d3fd290" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2adc4d3fd020" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2adc4d3d7020" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2adc4c0b9910"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4d3d8ca8" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2adc4d3d8020" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="34:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4d3dbd28" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2adc4d3d3020" loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4d3d5c88" loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2adc4d3d5020" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2adc4d3d7c78" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2adc4c9fea20"/>
                <typename><typedef-ref name="message_t" ref="0x2adc4ca09020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.1.0/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2adc4d52fbe0" loc="42:/opt/tinyos-2.1.0/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2adc4d52fbe0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2adc4d52c4c8" loc="50:/opt/tinyos-2.1.0/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.1.0/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2adc4d592338" loc="42:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2adc4d592338"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2adc4d58a020" loc="125:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2adc4d590710" loc="72:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2adc4d58d5b8" loc="103:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2adc4d58d020" loc="103:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2adc4d58d338" loc="103:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2adc4d58e7b8" loc="87:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2adc4d589020" loc="140:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2adc4d58a740" loc="133:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2adc4d58e020" loc="81:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2adc4c8c64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2adc4d592e08" loc="53:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2adc4d592b98" loc="53:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2adc4d58c5b8" loc="118:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2adc4d58c020" loc="118:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2adc4d58c338" loc="118:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2adc4d5918a0" loc="62:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2adc4d591630" loc="62:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2adc4c0bbdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2adc4d590070" loc="67:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.1.0/tos/interfaces/ParameterInit.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2adc4d6e62f8" loc="42:/opt/tinyos-2.1.0/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2adc4d6e62f8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2adc4d6e6da0" loc="53:/opt/tinyos-2.1.0/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.1.0/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2adc4c8cfae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2adc4d6e62f8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2adc4d6e6b30" loc="53:/opt/tinyos-2.1.0/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2adc4d6e62f8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
